{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { computed, ref } from \"vue\";\nimport { offset, flip, shift, size, useFloating, autoUpdate } from \"@floating-ui/vue\";\nimport { u as usePlacementAliases } from \"../../../composables/usePlacementAliases-c092b4d3.mjs\";\nconst useDropdown = (anchorComputed, floating, target, options) => {\n  const placementComputed = computed(() => {\n    const {\n      position,\n      align\n    } = usePlacementAliases({\n      placement: options.value.placement\n    });\n    return `${position.value}-${align.value}`;\n  });\n  const offsetComputed = computed(() => {\n    const dropdownOffset = options.value.offset;\n    const result = {\n      mainAxis: 0,\n      crossAxis: 0\n    };\n    if (Array.isArray(dropdownOffset)) {\n      result.mainAxis = dropdownOffset[0];\n      result.crossAxis = dropdownOffset[1];\n    }\n    if (typeof dropdownOffset === \"number\") {\n      result.mainAxis = dropdownOffset;\n    }\n    return result;\n  });\n  const middlewareComputed = computed(() => {\n    const {\n      autoPlacement,\n      stickToEdges,\n      keepAnchorWidth,\n      verticalScrollOnOverflow\n    } = options.value;\n    const result = [offset(offsetComputed.value)];\n    if (autoPlacement) {\n      result.push(\n      // boundary doesn't work with ssr (trying to access document)\n      flip({\n        boundary: target.value\n      }));\n    }\n    if (stickToEdges) {\n      result.push(shift());\n    }\n    if (keepAnchorWidth || verticalScrollOnOverflow) {\n      result.push(size({\n        apply({\n          elements,\n          availableHeight\n        }) {\n          if (keepAnchorWidth) {\n            const reference = elements.reference;\n            const availableWidth = reference.getBoundingClientRect().width;\n            Object.assign(elements.floating.style, {\n              // Don't set width here, because some plugin applies width 100% and it breaks layout\n              maxWidth: `${availableWidth}px`,\n              minWidth: `${availableWidth}px`\n            });\n          }\n          if (verticalScrollOnOverflow) {\n            Object.assign(elements.floating.style, {\n              maxHeight: `${availableHeight}px`\n            });\n          }\n        }\n      }));\n    }\n    return result;\n  });\n  const {\n    floatingStyles,\n    isPositioned\n  } = typeof document === \"undefined\" ? {\n    floatingStyles: {},\n    isPositioned: ref(false)\n  } : useFloating(anchorComputed, floating, {\n    placement: placementComputed,\n    whileElementsMounted: autoUpdate,\n    middleware: middlewareComputed,\n    transform: true\n  });\n  return {\n    // Because floating ui by default set top and left to 0 before position calculated, dropdown jumps to the left top corner\n    // If user wants to make focus on el as soon as Dropdown is opened, page will be scrolled on the left top corner\n    floatingStyles: computed(() => {\n      if (!isPositioned.value) {\n        return {\n          position: \"fixed\"\n        };\n      }\n      return floatingStyles.value;\n    }),\n    isPositioned\n  };\n};\nexport { useDropdown as u };","map":{"version":3,"names":["useDropdown","anchorComputed","floating","target","options","placementComputed","computed","position","align","usePlacementAliases","placement","value","offsetComputed","dropdownOffset","offset","result","mainAxis","crossAxis","Array","isArray","middlewareComputed","autoPlacement","stickToEdges","keepAnchorWidth","verticalScrollOnOverflow","push","flip","boundary","shift","size","apply","elements","availableHeight","reference","availableWidth","getBoundingClientRect","width","Object","assign","style","maxWidth","minWidth","maxHeight","floatingStyles","isPositioned","document","ref","useFloating","whileElementsMounted","autoUpdate","middleware","transform"],"sources":["../../../../../../src/components/va-dropdown/hooks/useDropdown.ts"],"sourcesContent":["import { computed, ref, Ref } from 'vue'\nimport {\n  autoUpdate,\n  flip,\n  offset, Placement,\n  shift,\n  size,\n  useFloating,\n} from '@floating-ui/vue'\nimport { CursorAnchor, DropdownOffsetProp } from '../types'\nimport { PlacementWithAlias, usePlacementAliases } from '../../../composables'\n\ntype useDropdownOptions = {\n  placement: PlacementWithAlias,\n  offset: DropdownOffsetProp,\n  autoPlacement: boolean,\n  stickToEdges: boolean,\n  keepAnchorWidth: boolean,\n  verticalScrollOnOverflow: boolean,\n}\n\nexport const useDropdown = (\n  anchorComputed: Ref<HTMLElement| CursorAnchor | undefined>,\n  floating: Ref<HTMLElement | undefined>,\n  target: Ref<HTMLElement | undefined>,\n  options: Ref<useDropdownOptions>,\n) => {\n  const placementComputed = computed(() => {\n    const { position, align } = usePlacementAliases({ placement: options.value.placement })\n\n    return `${position.value}-${align.value}` as Placement\n  })\n\n  const offsetComputed = computed(() => {\n    const dropdownOffset = options.value.offset\n    const result = { mainAxis: 0, crossAxis: 0 }\n    if (Array.isArray(dropdownOffset)) {\n      result.mainAxis = dropdownOffset[0]\n      result.crossAxis = dropdownOffset[1]\n    }\n\n    if (typeof dropdownOffset === 'number') {\n      result.mainAxis = dropdownOffset\n    }\n\n    return result\n  })\n\n  const middlewareComputed = computed(() => {\n    const { autoPlacement, stickToEdges, keepAnchorWidth, verticalScrollOnOverflow } = options.value\n    const result = [\n      offset(offsetComputed.value),\n    ]\n\n    if (autoPlacement) {\n      result.push(\n        // boundary doesn't work with ssr (trying to access document)\n        flip({\n          boundary: target.value,\n        }),\n      )\n    }\n\n    if (stickToEdges) {\n      result.push(\n        shift(),\n      )\n    }\n\n    if (keepAnchorWidth || verticalScrollOnOverflow) {\n      result.push(size({\n        apply ({ elements, availableHeight }) {\n          if (keepAnchorWidth) {\n            const reference = elements.reference\n            const availableWidth = reference.getBoundingClientRect().width\n            Object.assign(elements.floating.style, {\n              // Don't set width here, because some plugin applies width 100% and it breaks layout\n              maxWidth: `${availableWidth}px`,\n              minWidth: `${availableWidth}px`,\n            })\n          }\n\n          if (verticalScrollOnOverflow) {\n            Object.assign(elements.floating.style, {\n              maxHeight: `${availableHeight}px`,\n            })\n          }\n        },\n      }))\n    }\n\n    return result\n  })\n\n  const { floatingStyles, isPositioned } = typeof document === 'undefined'\n    ? { floatingStyles: {}, isPositioned: ref(false) }\n    : useFloating(anchorComputed, floating, {\n      placement: placementComputed,\n      whileElementsMounted: autoUpdate,\n      middleware: middlewareComputed,\n      transform: true,\n    })\n\n  return {\n    // Because floating ui by default set top and left to 0 before position calculated, dropdown jumps to the left top corner\n    // If user wants to make focus on el as soon as Dropdown is opened, page will be scrolled on the left top corner\n    floatingStyles: computed(() => {\n      // If position is not calculated yet, we need to set position to fixed to prevent page scrolling\n      if (!isPositioned.value) {\n        return {\n          position: 'fixed',\n        }\n      }\n\n      return floatingStyles.value\n    }),\n\n    isPositioned,\n  }\n}\n"],"mappings":";;;;AAqBO,MAAMA,WAAA,GAAcA,CACzBC,cAAA,EACAC,QAAA,EACAC,MAAA,EACAC,OAAA,KACG;EACG,MAAAC,iBAAA,GAAoBC,QAAA,CAAS,MAAM;IACjC;MAAEC,QAAA;MAAUC;IAAA,IAAUC,mBAAA,CAAoB;MAAEC,SAAA,EAAWN,OAAA,CAAQO,KAAA,CAAMD;IAAA,CAAW;IAE/E,UAAGH,QAAA,CAASI,KAAA,IAASH,KAAA,CAAMG,KAAA;EAAA,CACnC;EAEK,MAAAC,cAAA,GAAiBN,QAAA,CAAS,MAAM;IAC9B,MAAAO,cAAA,GAAiBT,OAAA,CAAQO,KAAA,CAAMG,MAAA;IACrC,MAAMC,MAAA,GAAS;MAAEC,QAAA,EAAU;MAAGC,SAAA,EAAW;IAAE;IACvC,IAAAC,KAAA,CAAMC,OAAA,CAAQN,cAAc,GAAG;MAC1BE,MAAA,CAAAC,QAAA,GAAWH,cAAA,CAAe,CAAC;MAC3BE,MAAA,CAAAE,SAAA,GAAYJ,cAAA,CAAe,CAAC;IACrC;IAEI,WAAOA,cAAA,KAAmB,UAAU;MACtCE,MAAA,CAAOC,QAAA,GAAWH,cAAA;IACpB;IAEO,OAAAE,MAAA;EAAA,CACR;EAEK,MAAAK,kBAAA,GAAqBd,QAAA,CAAS,MAAM;IACxC,MAAM;MAAEe,aAAA;MAAeC,YAAA;MAAcC,eAAA;MAAiBC;IAAA,IAA6BpB,OAAA,CAAQO,KAAA;IAC3F,MAAMI,MAAA,GAAS,CACbD,MAAA,CAAOF,cAAA,CAAeD,KAAK;IAG7B,IAAIU,aAAA,EAAe;MACVN,MAAA,CAAAU,IAAA;MAAA;MAELC,IAAA,CAAK;QACHC,QAAA,EAAUxB,MAAA,CAAOQ;MAAA,CAClB;IAEL;IAEA,IAAIW,YAAA,EAAc;MACTP,MAAA,CAAAU,IAAA,CACLG,KAAA,CAAM;IAEV;IAEA,IAAIL,eAAA,IAAmBC,wBAAA,EAA0B;MAC/CT,MAAA,CAAOU,IAAA,CAAKI,IAAA,CAAK;QACfC,MAAO;UAAEC,QAAA;UAAUC;QAAA,GAAmB;UACpC,IAAIT,eAAA,EAAiB;YACnB,MAAMU,SAAA,GAAYF,QAAA,CAASE,SAAA;YACrB,MAAAC,cAAA,GAAiBD,SAAA,CAAUE,qBAAA,GAAwBC,KAAA;YAClDC,MAAA,CAAAC,MAAA,CAAOP,QAAA,CAAS7B,QAAA,CAASqC,KAAA,EAAO;cAAA;cAErCC,QAAA,EAAU,GAAGN,cAAA;cACbO,QAAA,EAAU,GAAGP,cAAA;YAAA,CACd;UACH;UAEA,IAAIV,wBAAA,EAA0B;YACrBa,MAAA,CAAAC,MAAA,CAAOP,QAAA,CAAS7B,QAAA,CAASqC,KAAA,EAAO;cACrCG,SAAA,EAAW,GAAGV,eAAA;YAAA,CACf;UACH;QACF;MACD,EAAC;IACJ;IAEO,OAAAjB,MAAA;EAAA,CACR;EAED,MAAM;IAAE4B,cAAA;IAAgBC;EAAA,IAAiB,OAAOC,QAAA,KAAa,cACzD;IAAEF,cAAA,EAAgB,CAAC;IAAGC,YAAA,EAAcE,GAAA,CAAI,KAAK;EAC7C,IAAAC,WAAA,CAAY9C,cAAA,EAAgBC,QAAA,EAAU;IACtCQ,SAAA,EAAWL,iBAAA;IACX2C,oBAAA,EAAsBC,UAAA;IACtBC,UAAA,EAAY9B,kBAAA;IACZ+B,SAAA,EAAW;EAAA,CACZ;EAEI;IAAA;IAAA;IAGLR,cAAA,EAAgBrC,QAAA,CAAS,MAAM;MAEzB,KAACsC,YAAA,CAAajC,KAAA,EAAO;QAChB;UACLJ,QAAA,EAAU;QAAA;MAEd;MAEA,OAAOoC,cAAA,CAAehC,KAAA;IAAA,CACvB;IAEDiC;EAAA;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}