{"ast":null,"code":"import { reactive, computed } from \"vue\";\nimport { u as useEvent } from \"../../../composables/useEvent-0856a587.mjs\";\nconst useCursorAnchor = (anchorRef, noUpdate) => {\n  const position = reactive({\n    x: 0,\n    y: 0\n  });\n  useEvent([\"mousemove\", \"mousedown\", \"mouseup\"], e => {\n    var _a;\n    if (noUpdate.value) {\n      return;\n    }\n    const {\n      x,\n      y\n    } = ((_a = anchorRef.value) == null ? void 0 : _a.getBoundingClientRect()) ?? {\n      x: 0,\n      y: 0\n    };\n    position.x = e.clientX - x;\n    position.y = e.clientY - y;\n  }, anchorRef);\n  return computed(() => {\n    return {\n      getBoundingClientRect() {\n        var _a;\n        const {\n          x,\n          y\n        } = ((_a = anchorRef.value) == null ? void 0 : _a.getBoundingClientRect()) ?? {\n          x: 0,\n          y: 0\n        };\n        const resX = position.x + x;\n        const resY = position.y + y;\n        return {\n          width: 0,\n          height: 0,\n          x: resX,\n          y: resY,\n          top: resY,\n          right: resX,\n          bottom: resY,\n          left: resX\n        };\n      },\n      contextElement: anchorRef.value\n    };\n  });\n};\nexport { useCursorAnchor as u };","map":{"version":3,"names":["useCursorAnchor","anchorRef","noUpdate","position","reactive","x","y","useEvent","e","value","_a","getBoundingClientRect","clientX","clientY","computed","resX","resY","width","height","top","right","bottom","left","contextElement"],"sources":["../../../../../../src/components/va-dropdown/hooks/useCursorAnchor.ts"],"sourcesContent":["import { computed, ComputedRef, reactive, Ref } from 'vue'\nimport { useEvent } from '../../../composables'\nimport { CursorAnchor } from '../types'\n\n/**\n * Returns floating-ui compatible virtual element (https://floating-ui.com/docs/virtual-elements)\n * Floating UI can't automatically update position of the element that is not in the DOM, so we need to update it manually\n * We save mouse position relatively to the anchor element and recalculate it once anchor position changes (after scroll/resize/...)\n * @param anchorRef anchor element ref\n * @param noUpdate flag that indicates that we should not update the position of the dropdown\n */\nexport const useCursorAnchor = (anchorRef: Ref<HTMLElement | undefined>, noUpdate: Ref<boolean>): ComputedRef<CursorAnchor> => {\n  const position = reactive({ x: 0, y: 0 })\n\n  useEvent(['mousemove', 'mousedown', 'mouseup'], (e: MouseEvent) => {\n    if (noUpdate.value) { return }\n    const { x, y } = anchorRef.value?.getBoundingClientRect() ?? { x: 0, y: 0 }\n\n    position.x = e.clientX - x\n    position.y = e.clientY - y\n  }, anchorRef)\n\n  return computed(() => {\n    return {\n      getBoundingClientRect () {\n        // anchor position possibly changed, we need to update the position of the floating element\n        const { x, y } = anchorRef.value?.getBoundingClientRect() ?? { x: 0, y: 0 }\n        const resX = position.x + x\n        const resY = position.y + y\n        return {\n          width: 0,\n          height: 0,\n          x: resX,\n          y: resY,\n          top: resY,\n          right: resX,\n          bottom: resY,\n          left: resX,\n        }\n      },\n      contextElement: anchorRef.value,\n    }\n  })\n}\n"],"mappings":";;AAWa,MAAAA,eAAA,GAAkBA,CAACC,SAAA,EAAyCC,QAAA,KAAsD;EAC7H,MAAMC,QAAA,GAAWC,QAAA,CAAS;IAAEC,CAAA,EAAG;IAAGC,CAAA,EAAG;EAAA,CAAG;EAExCC,QAAA,CAAS,CAAC,aAAa,aAAa,SAAS,GAAIC,CAAA,IAAkB;;IACjE,IAAIN,QAAA,CAASO,KAAA,EAAO;MAAE;IAAO;IAC7B,MAAM;MAAEJ,CAAA;MAAGC;IAAE,MAAII,EAAA,GAAAT,SAAA,CAAUQ,KAAA,KAAV,gBAAAC,EAAA,CAAiBC,qBAAA,OAA2B;MAAEN,CAAA,EAAG;MAAGC,CAAA,EAAG;IAAE;IAEjEH,QAAA,CAAAE,CAAA,GAAIG,CAAA,CAAEI,OAAA,GAAUP,CAAA;IAChBF,QAAA,CAAAG,CAAA,GAAIE,CAAA,CAAEK,OAAA,GAAUP,CAAA;EAAA,GACxBL,SAAS;EAEZ,OAAOa,QAAA,CAAS,MAAM;IACb;MACLH,sBAAA,EAAyB;;QAEvB,MAAM;UAAEN,CAAA;UAAGC;QAAE,MAAII,EAAA,GAAAT,SAAA,CAAUQ,KAAA,KAAV,gBAAAC,EAAA,CAAiBC,qBAAA,OAA2B;UAAEN,CAAA,EAAG;UAAGC,CAAA,EAAG;QAAE;QACpE,MAAAS,IAAA,GAAOZ,QAAA,CAASE,CAAA,GAAIA,CAAA;QACpB,MAAAW,IAAA,GAAOb,QAAA,CAASG,CAAA,GAAIA,CAAA;QACnB;UACLW,KAAA,EAAO;UACPC,MAAA,EAAQ;UACRb,CAAA,EAAGU,IAAA;UACHT,CAAA,EAAGU,IAAA;UACHG,GAAA,EAAKH,IAAA;UACLI,KAAA,EAAOL,IAAA;UACPM,MAAA,EAAQL,IAAA;UACRM,IAAA,EAAMP;QAAA;MAEV;MACAQ,cAAA,EAAgBtB,SAAA,CAAUQ;IAAA;EAC5B,CACD;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}