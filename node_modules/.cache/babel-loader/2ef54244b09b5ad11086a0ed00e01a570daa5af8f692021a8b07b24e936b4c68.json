{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\n// import router from \"@/router\";\naxios.defaults.baseURL = \"http://127.0.0.1:8000/api/v1/\";\nconst access = localStorage.getItem(\"access_token\");\naxios.defaults.headers.common['Authorization'] = 'Bearer ' + access;\naxios.interceptors.request.use(config => {\n  const access = localStorage.getItem(\"access_token\");\n  if (access) axios.defaults.headers.common['Authorization'] = 'Bearer ' + access;else router.push('/');\n  return config;\n});\n\n// export const accessToken = async () => {\n// const access = localStorage.getItem(\"access_token\");\n\n//     if(access)\n//         axios.defaults.headers.common['Authorization'] = 'Bearer '+access\n//     else\n//         router.push('/')\n// }\n\n// export const refreshAccessToken = async () => {\n//         const refreshToken = localStorage.getItem(\"refresh_token\");\n//         const data = { refresh: refreshToken };\n\n//         try {\n//           const response = await axios.post('http://127.0.0.1:8000/api/v1/token/refresh/',\n//             data\n//           );\n//           const accessToken = response.data.access;\n//           localStorage.setItem(\"access_token\", accessToken);\n//           return accessToken;\n//         } catch (err) {\n//           if(err.response.status===401)\n//           localStorage.clear();\n//           router.push('/')\n//         }\n//       };\n\n// const token = localStorage.getItem('access_token');\n\n// if (token) {\n//      axios.defaults.headers.common['Authorization'] = 'Bearer '+token\n// }\n// else{\n//     router.push('/')\n//   }\n\n// axios.interceptors.request.use((req) => {\n\n//     const token = localStorage.getItem('access_token');\n\n//     if (token) {\n//          req.defaults.headers.common['Authorization'] = 'Bearer '+token\n\n//     }else{\n//         router.push('/')\n//     }\n\n//   });\n\n// axios.interceptors.response.use(\n//     (response) => response,\n//     async (error) => {\n//       const originalRequest = error.config;\n\n//     //  if (error.response === 401) {\n\n//         const accessToken = await refreshAccessToken();\n//         axios.defaults.headers.common[\"Authorization\"] =\n//           \"Bearer \" + accessToken;\n//         return axios(originalRequest);\n//       } \n//     //   else {\n//     //     throw error;\n//     //   }\n//     // }\n//   );\n//   const refreshAccessToken = async () => {\n//     const refreshToken = localStorage.getItem(\"refresh_token\");\n//     const data = { refresh: refreshToken };\n\n//     try {\n//       const response = await axios.post('axios://127.0.0.1:8000/api/v1/token/refresh/',\n//         data\n//       );\n//       const accessToken = response.data.access;\n//       localStorage.setItem(\"access_token\", accessToken);\n//       return accessToken;\n//     } catch (err) {\n//       if(err.response.status===401)\n//       localStorage.clear();\n//      window.location.replace(\"/unauthorized\");\n//     }\n//   };\n\nexport default axios;","map":{"version":3,"names":["axios","defaults","baseURL","access","localStorage","getItem","headers","common","interceptors","request","use","config","router","push"],"sources":["/home/festin.philip/first_project/src/components/axios.js"],"sourcesContent":["import axios from \"axios\";\n// import router from \"@/router\";\naxios.defaults.baseURL=\"http://127.0.0.1:8000/api/v1/\"\nconst access = localStorage.getItem(\"access_token\");\naxios.defaults.headers.common['Authorization'] = 'Bearer '+access\n\naxios.interceptors.request.use((config) => {\n    const access = localStorage.getItem(\"access_token\");\n\n\n        if(access)\n            axios.defaults.headers.common['Authorization'] = 'Bearer '+access\n        else\n            router.push('/')\n    \n    return config\n  })\n  \n// export const accessToken = async () => {\n// const access = localStorage.getItem(\"access_token\");\n\n\n//     if(access)\n//         axios.defaults.headers.common['Authorization'] = 'Bearer '+access\n//     else\n//         router.push('/')\n// }\n\n\n// export const refreshAccessToken = async () => {\n//         const refreshToken = localStorage.getItem(\"refresh_token\");\n//         const data = { refresh: refreshToken };\n      \n//         try {\n//           const response = await axios.post('http://127.0.0.1:8000/api/v1/token/refresh/',\n//             data\n//           );\n//           const accessToken = response.data.access;\n//           localStorage.setItem(\"access_token\", accessToken);\n//           return accessToken;\n//         } catch (err) {\n//           if(err.response.status===401)\n//           localStorage.clear();\n//           router.push('/')\n//         }\n//       };\n\n// const token = localStorage.getItem('access_token');\n  \n    // if (token) {\n    //      axios.defaults.headers.common['Authorization'] = 'Bearer '+token\n    // }\n    // else{\n    //     router.push('/')\n    //   }\n\n// axios.interceptors.request.use((req) => {\n    \n//     const token = localStorage.getItem('access_token');\n  \n//     if (token) {\n//          req.defaults.headers.common['Authorization'] = 'Bearer '+token\n\n//     }else{\n//         router.push('/')\n//     }\n    \n    \n//   });\n\n\n// axios.interceptors.response.use(\n//     (response) => response,\n//     async (error) => {\n//       const originalRequest = error.config;\n     \n//     //  if (error.response === 401) {\n       \n//         const accessToken = await refreshAccessToken();\n//         axios.defaults.headers.common[\"Authorization\"] =\n//           \"Bearer \" + accessToken;\n//         return axios(originalRequest);\n//       } \n//     //   else {\n//     //     throw error;\n//     //   }\n//     // }\n//   );\n//   const refreshAccessToken = async () => {\n//     const refreshToken = localStorage.getItem(\"refresh_token\");\n//     const data = { refresh: refreshToken };\n  \n//     try {\n//       const response = await axios.post('axios://127.0.0.1:8000/api/v1/token/refresh/',\n//         data\n//       );\n//       const accessToken = response.data.access;\n//       localStorage.setItem(\"access_token\", accessToken);\n//       return accessToken;\n//     } catch (err) {\n//       if(err.response.status===401)\n//       localStorage.clear();\n//      window.location.replace(\"/unauthorized\");\n//     }\n//   };\n\n  export default axios;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACAA,KAAK,CAACC,QAAQ,CAACC,OAAO,GAAC,+BAA+B;AACtD,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;AACnDL,KAAK,CAACC,QAAQ,CAACK,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,SAAS,GAACJ,MAAM;AAEjEH,KAAK,CAACQ,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMR,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;EAG/C,IAAGF,MAAM,EACLH,KAAK,CAACC,QAAQ,CAACK,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,SAAS,GAACJ,MAAM,MAEjES,MAAM,CAACC,IAAI,CAAC,GAAG,CAAC;EAExB,OAAOF,MAAM;AACf,CAAC,CAAC;;AAEJ;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEI;AACA;AACA;AACA;AACA;AACA;;AAEJ;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAGA;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,eAAeX,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}