{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport router from \"@/router\";\naxios.defaults.baseURL = \"http://127.0.0.1:8000/api/v1/\";\n\n// const access = localStorage.getItem(\"access_token\");\n// axios.defaults.headers.common['Authorization'] = 'Bearer '+access\n\naxios.interceptors.request.use(config => {\n  console.log(config.headers.Authorization);\n  const access = localStorage.getItem('access_token');\n  if (access) config.headers.Authorization = 'Bearer ' + access;else router.push('/');\n  return config;\n});\naxios.interceptors.response.use(resp => {\n  console.log(resp);\n}, async err => {\n  console.log(err);\n});\n// return resp\n// },\n// async(err)=>{\n//     const originalConfig = err.config;\n//     const refreshToken = localStorage.getItem(\"refresh_token\");\n//     const data = { refresh: refreshToken };\n\n//     try {\n//       const response = await axios.post('http://127.0.0.1:8000/api/v1/token/refresh/',\n//         data\n//       );\n//       const accessToken = response.data.access;\n//       localStorage.setItem(\"access_token\", accessToken);\n//       return axios(originalConfig);\n//     } catch (err) {\n\n//       localStorage.clear();\n//       router.push('/')\n//     }\n\n// (response) => response,\n// async (error) => {\n//     console.log(error)\n// const accessToken =  refreshAccessToken();\n//         axios.defaults.headers.common[\"Authorization\"] =\n//           \"Bearer \" + accessToken;\n//         return axios(response);\n\n//   }\n\n// export const accessToken = async () => {\n// const access = localStorage.getItem(\"access_token\");\n\n//     if(access)\n//         axios.defaults.headers.common['Authorization'] = 'Bearer '+access\n//     else\n//         router.push('/')\n// }\n\n// export const refreshAccessToken = async () => {\n//         const refreshToken = localStorage.getItem(\"refresh_token\");\n//         const data = { refresh: refreshToken };\n\n//         try {\n//           const response = await axios.post('http://127.0.0.1:8000/api/v1/token/refresh/',\n//             data\n//           );\n//           const accessToken = response.data.access;\n//           localStorage.setItem(\"access_token\", accessToken);\n//           return accessToken;\n//         } catch (err) {\n\n//           localStorage.clear();\n//           router.push('/')\n//         }\n//       };\n\n// axios.interceptors.request.use((req) => {\n\n//     const token = localStorage.getItem('access_token');\n\n//     if (token) {\n//          req.defaults.headers.common['Authorization'] = 'Bearer '+token\n\n//     }else{\n//         router.push('/')\n//     }\n\n//   });\n\n// axios.interceptors.response.use(\n//     (response) => response,\n//     async (error) => {\n//       const originalRequest = error.config;\n\n//     //  if (error.response === 401) {\n\n//         const accessToken = await refreshAccessToken();\n//         axios.defaults.headers.common[\"Authorization\"] =\n//           \"Bearer \" + accessToken;\n//         return axios(originalRequest);\n//       } \n//     //   else {\n//     //     throw error;\n//     //   }\n//     // }\n//   );\n//   const refreshAccessToken = async () => {\n//     const refreshToken = localStorage.getItem(\"refresh_token\");\n//     const data = { refresh: refreshToken };\n\n//     try {\n//       const response = await axios.post('axios://127.0.0.1:8000/api/v1/token/refresh/',\n//         data\n//       );\n//       const accessToken = response.data.access;\n//       localStorage.setItem(\"access_token\", accessToken);\n//       return accessToken;\n//     } catch (err) {\n//       if(err.response.status===401)\n//       localStorage.clear();\n//      window.location.replace(\"/unauthorized\");\n//     }\n//   };\n\nexport default axios;","map":{"version":3,"names":["axios","router","defaults","baseURL","interceptors","request","use","config","console","log","headers","Authorization","access","localStorage","getItem","push","response","resp","err"],"sources":["/home/festin.philip/first_project/src/components/axios.js"],"sourcesContent":["import axios from \"axios\";\nimport router from \"@/router\";\naxios.defaults.baseURL=\"http://127.0.0.1:8000/api/v1/\"\n\n// const access = localStorage.getItem(\"access_token\");\n// axios.defaults.headers.common['Authorization'] = 'Bearer '+access\n\naxios.interceptors.request.use((config) => {\n    console.log(config.headers.Authorization)\n    const access = localStorage.getItem('access_token');\n\n\n        if(access)\n        config.headers.Authorization= 'Bearer '+access\n     else\n             router.push('/')\n    \n    return config\n  })\n  \n  axios.interceptors.response.use((resp) => {\nconsole.log(resp)},\nasync (err)=>{\nconsole.log(err)\n})\n// return resp\n// },\n// async(err)=>{\n//     const originalConfig = err.config;\n//     const refreshToken = localStorage.getItem(\"refresh_token\");\n//     const data = { refresh: refreshToken };\n  \n//     try {\n//       const response = await axios.post('http://127.0.0.1:8000/api/v1/token/refresh/',\n//         data\n//       );\n//       const accessToken = response.data.access;\n//       localStorage.setItem(\"access_token\", accessToken);\n//       return axios(originalConfig);\n//     } catch (err) {\n     \n//       localStorage.clear();\n//       router.push('/')\n//     }\n\n\n\n    // (response) => response,\n    // async (error) => {\n    //     console.log(error)\n    // const accessToken =  refreshAccessToken();\n    //         axios.defaults.headers.common[\"Authorization\"] =\n    //           \"Bearer \" + accessToken;\n    //         return axios(response);\n    \n\n//   }\n \n  \n// export const accessToken = async () => {\n// const access = localStorage.getItem(\"access_token\");\n\n\n//     if(access)\n//         axios.defaults.headers.common['Authorization'] = 'Bearer '+access\n//     else\n//         router.push('/')\n// }\n\n\n// export const refreshAccessToken = async () => {\n//         const refreshToken = localStorage.getItem(\"refresh_token\");\n//         const data = { refresh: refreshToken };\n      \n//         try {\n//           const response = await axios.post('http://127.0.0.1:8000/api/v1/token/refresh/',\n//             data\n//           );\n//           const accessToken = response.data.access;\n//           localStorage.setItem(\"access_token\", accessToken);\n//           return accessToken;\n//         } catch (err) {\n         \n//           localStorage.clear();\n//           router.push('/')\n//         }\n//       };\n\n\n// axios.interceptors.request.use((req) => {\n    \n//     const token = localStorage.getItem('access_token');\n  \n//     if (token) {\n//          req.defaults.headers.common['Authorization'] = 'Bearer '+token\n\n//     }else{\n//         router.push('/')\n//     }\n    \n    \n//   });\n\n\n// axios.interceptors.response.use(\n//     (response) => response,\n//     async (error) => {\n//       const originalRequest = error.config;\n     \n//     //  if (error.response === 401) {\n       \n//         const accessToken = await refreshAccessToken();\n//         axios.defaults.headers.common[\"Authorization\"] =\n//           \"Bearer \" + accessToken;\n//         return axios(originalRequest);\n//       } \n//     //   else {\n//     //     throw error;\n//     //   }\n//     // }\n//   );\n//   const refreshAccessToken = async () => {\n//     const refreshToken = localStorage.getItem(\"refresh_token\");\n//     const data = { refresh: refreshToken };\n  \n//     try {\n//       const response = await axios.post('axios://127.0.0.1:8000/api/v1/token/refresh/',\n//         data\n//       );\n//       const accessToken = response.data.access;\n//       localStorage.setItem(\"access_token\", accessToken);\n//       return accessToken;\n//     } catch (err) {\n//       if(err.response.status===401)\n//       localStorage.clear();\n//      window.location.replace(\"/unauthorized\");\n//     }\n//   };\n\n  export default axios;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7BD,KAAK,CAACE,QAAQ,CAACC,OAAO,GAAC,+BAA+B;;AAEtD;AACA;;AAEAH,KAAK,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvCC,OAAO,CAACC,GAAG,CAACF,MAAM,CAACG,OAAO,CAACC,aAAa,CAAC;EACzC,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;EAG/C,IAAGF,MAAM,EACTL,MAAM,CAACG,OAAO,CAACC,aAAa,GAAE,SAAS,GAACC,MAAM,MAEzCX,MAAM,CAACc,IAAI,CAAC,GAAG,CAAC;EAEzB,OAAOR,MAAM;AACf,CAAC,CAAC;AAEFP,KAAK,CAACI,YAAY,CAACY,QAAQ,CAACV,GAAG,CAAEW,IAAI,IAAK;EAC5CT,OAAO,CAACC,GAAG,CAACQ,IAAI,CAAC;AAAA,CAAC,EAClB,MAAOC,GAAG,IAAG;EACbV,OAAO,CAACC,GAAG,CAACS,GAAG,CAAC;AAChB,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAII;AACA;AACA;AACA;AACA;AACA;AACA;;AAGJ;;AAGA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAGA;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,eAAelB,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}