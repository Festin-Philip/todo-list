{"ast":null,"code":"import { computed, unref, watch } from \"vue\";\nimport { u as useSyncProp } from \"./useSyncProp-326abeda.mjs\";\nimport { V as VaDropdown } from \"../components/va-dropdown/index-2c2f593a.mjs\";\nimport { e as extractComponentProps } from \"../utils/component-options/extract-component-options-6b96d215.mjs\";\nimport { f as filterComponentProps } from \"../utils/component-options/filter-props-9727421a.mjs\";\nconst VaDropdownProps = extractComponentProps(VaDropdown, [\"innerAnchorSelector\", \"stateful\", \"keyboardNavigation\", \"modelValue\"]);\nconst useDropdownableProps = {\n  ...VaDropdownProps,\n  modelValue: {},\n  /**\n   * Close dropdown on value updated.\n   * @default null - behavior controlled by component\n   */\n  closeOnChange: {\n    type: Boolean,\n    default: null\n  },\n  isOpen: {\n    type: Boolean,\n    default: void 0\n  }\n};\nconst useDropdownableEmits = [\"update:isOpen\"];\nconst useDropdownable = function (props, emit, options = {}) {\n  const [isOpenSync] = useSyncProp(\"isOpen\", props, emit, false);\n  const doWatch = computed(() => props.closeOnChange !== null ? props.closeOnChange : unref(options.defaultCloseOnValueUpdate || false));\n  watch(() => props.modelValue, () => {\n    if (doWatch.value) {\n      isOpenSync.value = false;\n    }\n  });\n  return {\n    dropdownProps: filterComponentProps(VaDropdownProps),\n    isOpenSync\n  };\n};\nexport { useDropdownableEmits as a, useDropdownable as b, useDropdownableProps as u };","map":{"version":3,"names":["VaDropdownProps","extractComponentProps","VaDropdown","useDropdownableProps","modelValue","closeOnChange","type","Boolean","default","isOpen","useDropdownableEmits","useDropdownable","props","emit","options","isOpenSync","useSyncProp","doWatch","computed","unref","defaultCloseOnValueUpdate","watch","value","dropdownProps","filterComponentProps"],"sources":["../../../../src/composables/useDropdownable.ts"],"sourcesContent":["import { watch, ExtractPropTypes, Ref, computed, unref } from 'vue'\nimport { useSyncProp } from './useSyncProp'\nimport { extractComponentProps, filterComponentProps } from '../utils/component-options'\nimport { VaDropdown } from '../components/va-dropdown'\n\nconst VaDropdownProps = extractComponentProps(VaDropdown,\n  ['innerAnchorSelector', 'stateful', 'keyboardNavigation', 'modelValue'],\n)\n\nexport const useDropdownableProps = {\n  ...VaDropdownProps,\n  modelValue: {},\n  /**\n   * Close dropdown on value updated.\n   * @default null - behavior controlled by component\n   */\n  closeOnChange: { type: Boolean, default: null },\n  isOpen: { type: Boolean, default: undefined },\n}\n\nexport const useDropdownableEmits = ['update:isOpen']\n\n/** Used in components where dropdown is used */\nexport const useDropdownable = function (\n  props: ExtractPropTypes<typeof useDropdownableProps>,\n  emit: (event: 'update:isOpen', ...args: any[]) => void,\n  options: {\n    /** @default false */\n    defaultCloseOnValueUpdate?: boolean | Ref<boolean>\n  } = {},\n) {\n  const [isOpenSync] = useSyncProp('isOpen', props, emit, false)\n\n  const doWatch = computed(() => props.closeOnChange !== null ? props.closeOnChange : unref(options.defaultCloseOnValueUpdate || false))\n\n  watch(() => props.modelValue, () => {\n    if (doWatch.value) {\n      isOpenSync.value = false\n    }\n  })\n\n  return {\n    dropdownProps: filterComponentProps(VaDropdownProps),\n    isOpenSync,\n  }\n}\n"],"mappings":";;;;;AAKA,MAAMA,eAAA,GAAkBC,qBAAA,CAAsBC,UAAA,EAC5C,CAAC,uBAAuB,YAAY,sBAAsB,YAAY,CACxE;AAEO,MAAMC,oBAAA,GAAuB;EAClC,GAAGH,eAAA;EACHI,UAAA,EAAY,CAAC;EAAA;AAAA;AAAA;AAAA;EAKbC,aAAA,EAAe;IAAEC,IAAA,EAAMC,OAAA;IAASC,OAAA,EAAS;EAAK;EAC9CC,MAAA,EAAQ;IAAEH,IAAA,EAAMC,OAAA;IAASC,OAAA,EAAS;EAAU;AAC9C;AAEa,MAAAE,oBAAA,GAAuB,CAAC,eAAe;AAG7C,MAAMC,eAAA,GAAkB,SAAAA,CAC7BC,KAAA,EACAC,IAAA,EACAC,OAAA,GAGI,IACJ;EACA,MAAM,CAACC,UAAU,IAAIC,WAAA,CAAY,UAAUJ,KAAA,EAAOC,IAAA,EAAM,KAAK;EAE7D,MAAMI,OAAA,GAAUC,QAAA,CAAS,MAAMN,KAAA,CAAMP,aAAA,KAAkB,OAAOO,KAAA,CAAMP,aAAA,GAAgBc,KAAA,CAAML,OAAA,CAAQM,yBAAA,IAA6B,KAAK,CAAC;EAE/HC,KAAA,OAAMT,KAAA,CAAMR,UAAA,EAAY,MAAM;IAClC,IAAIa,OAAA,CAAQK,KAAA,EAAO;MACjBP,UAAA,CAAWO,KAAA,GAAQ;IACrB;EAAA,CACD;EAEM;IACLC,aAAA,EAAeC,oBAAA,CAAqBxB,eAAe;IACnDe;EAAA;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}