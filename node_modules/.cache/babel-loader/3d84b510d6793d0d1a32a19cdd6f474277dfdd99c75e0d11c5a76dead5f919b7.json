{"ast":null,"code":"import { computed, getCurrentInstance } from \"vue\";\nimport { g as getCurrentApp } from \"../services/current-app-832a37a5.mjs\";\nconst useAppContext = () => {\n  return computed(() => {\n    var _a, _b;\n    return ((_a = getCurrentApp()) == null ? void 0 : _a._context) || ((_b = getCurrentInstance()) == null ? void 0 : _b.appContext);\n  });\n};\nexport { useAppContext as u };","map":{"version":3,"names":["useAppContext","computed","_a","getCurrentApp","_context","_b","getCurrentInstance","appContext"],"sources":["../../../../src/composables/useAppContext.ts"],"sourcesContent":["import { computed, getCurrentInstance } from 'vue'\nimport { getCurrentApp } from '../services/current-app'\n\n/**\n * App context must be used as computed to support single app mode.\n *\n * Single app mode allows user to use composables as useColor, useToast, etc. outside of vue app.\n * (for example in api.ts)\n */\nexport const useAppContext = () => {\n  return computed(() => {\n    return getCurrentApp()?._context || getCurrentInstance()?.appContext\n  })\n}\n"],"mappings":";;AASO,MAAMA,aAAA,GAAgBA,CAAA,KAAM;EACjC,OAAOC,QAAA,CAAS,MAAM;;IACpB,SAAOC,EAAA,GAAAC,aAAA,CAAc,MAAd,gBAAAD,EAAA,CAAiBE,QAAA,OAAYC,EAAA,GAAAC,kBAAA,uBAAAD,EAAA,CAAsBE,UAAA;EAAA,CAC3D;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}