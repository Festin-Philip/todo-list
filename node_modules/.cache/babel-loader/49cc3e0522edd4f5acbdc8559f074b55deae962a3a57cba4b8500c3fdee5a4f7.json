{"ast":null,"code":"import { computed, toRef } from \"vue\";\nimport { u as useColors } from \"../../composables/useColors-b582f249.mjs\";\nimport { u as useTextColor } from \"../../composables/useTextColor-48b60d5c.mjs\";\nconst useAlertStyles = props => {\n  const {\n    getColor\n  } = useColors();\n  const isTransparentBackground = computed(() => Boolean(props.outline || props.border));\n  const {\n    textColorComputed\n  } = useTextColor(toRef(props, \"color\"), isTransparentBackground);\n  const colorComputed = computed(() => getColor(props.color));\n  const alertStyle = computed(() => {\n    let background = colorComputed.value;\n    let boxShadow = \"none\";\n    if (props.outline) {\n      background = \"transparent\";\n    }\n    if (props.border) {\n      background = \"var(--va-background-primary)\";\n      boxShadow = \"var(--va-alert-box-shadow)\";\n    }\n    return {\n      border: props.outline ? `1px solid ${colorComputed.value}` : \"\",\n      padding: props.dense ? \"var(--va-alert-padding-y-dense) var(--va-alert-padding-x)\" : \"\",\n      backgroundColor: background,\n      boxShadow\n    };\n  });\n  const contentStyle = computed(() => {\n    return {\n      alignItems: props.center ? \"center\" : \"\",\n      color: props.border || props.outline ? \"currentColor\" : textColorComputed.value\n    };\n  });\n  const titleStyle = computed(() => {\n    return {\n      color: textColorComputed.value\n    };\n  });\n  const borderStyle = computed(() => ({\n    backgroundColor: props.borderColor ? getColor(props.borderColor) : colorComputed.value\n  }));\n  return {\n    alertStyle,\n    contentStyle,\n    titleStyle,\n    borderStyle\n  };\n};\nexport { useAlertStyles as u };","map":{"version":3,"names":["useAlertStyles","props","getColor","useColors","isTransparentBackground","computed","Boolean","outline","border","textColorComputed","useTextColor","toRef","colorComputed","color","alertStyle","background","value","boxShadow","padding","dense","backgroundColor","contentStyle","alignItems","center","titleStyle","borderStyle","borderColor"],"sources":["../../../../../src/components/va-alert/useAlertStyles.ts"],"sourcesContent":["import { computed, toRef } from 'vue'\nimport { useColors, useTextColor } from '../../composables'\n\ntype AlertStyleProps = {\n  modelValue: boolean,\n  color: string,\n  textColor: string,\n  title: string,\n  description: string,\n  icon: string,\n  closeText: string,\n  closeable: boolean,\n  dense: boolean,\n  outline: boolean,\n  center: boolean,\n  borderColor: string,\n  border: string,\n}\n\nexport const useAlertStyles = (props: AlertStyleProps) => {\n  const { getColor } = useColors()\n\n  const isTransparentBackground = computed(() => Boolean(props.outline || props.border))\n  const { textColorComputed } = useTextColor(toRef(props, 'color'), isTransparentBackground)\n\n  const colorComputed = computed(() => getColor(props.color))\n\n  const alertStyle = computed(() => {\n    let background = colorComputed.value\n    let boxShadow = 'none'\n\n    if (props.outline) {\n      background = 'transparent'\n    }\n\n    if (props.border) {\n      background = 'var(--va-background-primary)'\n      boxShadow = 'var(--va-alert-box-shadow)'\n    }\n\n    return {\n      border: props.outline ? `1px solid ${colorComputed.value}` : '',\n      padding: props.dense ? 'var(--va-alert-padding-y-dense) var(--va-alert-padding-x)' : '',\n      backgroundColor: background,\n      boxShadow,\n    }\n  })\n\n  const contentStyle = computed(() => {\n    return {\n      alignItems: props.center ? 'center' : '',\n      color: (props.border || props.outline) ? 'currentColor' : textColorComputed.value,\n    }\n  })\n\n  const titleStyle = computed(() => {\n    return { color: textColorComputed.value }\n  })\n\n  const borderStyle = computed(() => ({\n    backgroundColor: props.borderColor\n      ? getColor(props.borderColor)\n      : colorComputed.value,\n  }))\n\n  return {\n    alertStyle,\n    contentStyle,\n    titleStyle,\n    borderStyle,\n  }\n}\n"],"mappings":";;;AAmBa,MAAAA,cAAA,GAAkBC,KAAA,IAA2B;EAClD;IAAEC;EAAA,IAAaC,SAAA;EAEf,MAAAC,uBAAA,GAA0BC,QAAA,CAAS,MAAMC,OAAA,CAAQL,KAAA,CAAMM,OAAA,IAAWN,KAAA,CAAMO,MAAM,CAAC;EAC/E;IAAEC;EAAsB,IAAAC,YAAA,CAAaC,KAAA,CAAMV,KAAA,EAAO,OAAO,GAAGG,uBAAuB;EAEzF,MAAMQ,aAAA,GAAgBP,QAAA,CAAS,MAAMH,QAAA,CAASD,KAAA,CAAMY,KAAK,CAAC;EAEpD,MAAAC,UAAA,GAAaT,QAAA,CAAS,MAAM;IAChC,IAAIU,UAAA,GAAaH,aAAA,CAAcI,KAAA;IAC/B,IAAIC,SAAA,GAAY;IAEhB,IAAIhB,KAAA,CAAMM,OAAA,EAAS;MACJQ,UAAA;IACf;IAEA,IAAId,KAAA,CAAMO,MAAA,EAAQ;MACHO,UAAA;MACDE,SAAA;IACd;IAEO;MACLT,MAAA,EAAQP,KAAA,CAAMM,OAAA,GAAU,aAAaK,aAAA,CAAcI,KAAA,KAAU;MAC7DE,OAAA,EAASjB,KAAA,CAAMkB,KAAA,GAAQ,8DAA8D;MACrFC,eAAA,EAAiBL,UAAA;MACjBE;IAAA;EACF,CACD;EAEK,MAAAI,YAAA,GAAehB,QAAA,CAAS,MAAM;IAC3B;MACLiB,UAAA,EAAYrB,KAAA,CAAMsB,MAAA,GAAS,WAAW;MACtCV,KAAA,EAAQZ,KAAA,CAAMO,MAAA,IAAUP,KAAA,CAAMM,OAAA,GAAW,iBAAiBE,iBAAA,CAAkBO;IAAA;EAC9E,CACD;EAEK,MAAAQ,UAAA,GAAanB,QAAA,CAAS,MAAM;IACzB;MAAEQ,KAAA,EAAOJ,iBAAA,CAAkBO;IAAA;EAAM,CACzC;EAEK,MAAAS,WAAA,GAAcpB,QAAA,CAAS,OAAO;IAClCe,eAAA,EAAiBnB,KAAA,CAAMyB,WAAA,GACnBxB,QAAA,CAASD,KAAA,CAAMyB,WAAW,IAC1Bd,aAAA,CAAcI;EAClB;EAEK;IACLF,UAAA;IACAO,YAAA;IACAG,UAAA;IACAC;EAAA;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}