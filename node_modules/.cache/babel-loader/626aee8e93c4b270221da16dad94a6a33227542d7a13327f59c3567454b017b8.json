{"ast":null,"code":"import { defineComponent, computed, ref, toRef, h, Fragment, Teleport, nextTick } from \"vue\";\nimport { p as pick, k as kebabCase } from \"../../../vendor-2b2dbafd.mjs\";\nimport { a as renderSlotNode } from \"../../utils/headless-b51e0704.mjs\";\nimport { u as useMouseNavigation, a as useKeyboardNavigation } from \"./hooks/useDropdownNavigation-04034f2c.mjs\";\nimport { u as useAnchorSelector } from \"./hooks/useAnchorSelector-15d1a9a7.mjs\";\nimport { u as useCursorAnchor } from \"./hooks/useCursorAnchor-2713a35a.mjs\";\nimport { u as useDropdown } from \"./hooks/useDropdown-67145520.mjs\";\nimport { w as warn } from \"../../utils/console-33a7ea8d.mjs\";\nimport { u as useFocusOutside } from \"../../composables/useFocusOutside-a13ca1f7.mjs\";\nimport { u as useTeleported } from \"../../composables/useTeleported-c9f0a2cb.mjs\";\nimport { a as usePlacementAliasesProps } from \"../../composables/usePlacementAliases-c092b4d3.mjs\";\nimport { c as createStatefulProps, u as useStatefulEmits, b as useStateful } from \"../../composables/useStateful-78f75564.mjs\";\nimport { u as useHTMLElementSelector } from \"../../composables/useHTMLElementSelector-378861e4.mjs\";\nimport { u as useBem } from \"../../composables/useBem-33d80128.mjs\";\nimport { u as useDebounceFn } from \"../../composables/useDebounce-b095e529.mjs\";\nimport { u as useClickOutside } from \"../../composables/useClickOutside-4e7f583c.mjs\";\nimport { u as useTranslation } from \"../../composables/useTranslation-0934900c.mjs\";\nimport { u as useIsMounted } from \"../../composables/useIsMounted-a63f9559.mjs\";\nimport { u as useHTMLElement } from \"../../composables/useHTMLElement-af551f75.mjs\";\nconst _sfc_main = defineComponent({\n  name: \"VaDropdown\",\n  props: {\n    ...usePlacementAliasesProps,\n    ...createStatefulProps(true),\n    modelValue: {\n      type: Boolean,\n      default: false\n    },\n    anchorSelector: {\n      type: String,\n      default: \"\"\n    },\n    innerAnchorSelector: {\n      type: String,\n      default: \"\"\n    },\n    trigger: {\n      type: String,\n      default: \"click\",\n      validator: value => [\"click\", \"right-click\", \"hover\", \"dblclick\", \"none\"].includes(value)\n    },\n    disabled: {\n      type: Boolean\n    },\n    readonly: {\n      type: Boolean\n    },\n    closeOnClickOutside: {\n      type: Boolean,\n      default: true\n    },\n    closeOnFocusOutside: {\n      type: Boolean,\n      default: true\n    },\n    closeOnAnchorClick: {\n      type: Boolean,\n      default: true\n    },\n    closeOnContentClick: {\n      type: Boolean,\n      default: true\n    },\n    hoverOverTimeout: {\n      type: Number,\n      default: 30\n    },\n    hoverOutTimeout: {\n      type: Number,\n      default: 200\n    },\n    isContentHoverable: {\n      type: Boolean,\n      default: true\n    },\n    offset: {\n      type: [Array, Number],\n      default: 0\n    },\n    keepAnchorWidth: {\n      type: Boolean,\n      default: false\n    },\n    verticalScrollOnOverflow: {\n      type: Boolean,\n      default: true\n    },\n    cursor: {\n      type: Boolean,\n      default: false\n    },\n    autoPlacement: {\n      type: Boolean,\n      default: true\n    },\n    stickToEdges: {\n      type: Boolean,\n      default: false\n    },\n    /** Viewport where dropdown will be rendered. Autoplacement will be calculated relative to `target` */\n    target: {\n      type: [String, Object],\n      default: void 0\n    },\n    /** Element where dropdown content will be rendered. */\n    teleport: {\n      type: [String, Object],\n      default: void 0\n    },\n    /** Not reactive */\n    keyboardNavigation: {\n      type: Boolean,\n      default: false\n    },\n    ariaLabel: {\n      type: String,\n      default: \"$t:toggleDropdown\"\n    },\n    role: {\n      type: String,\n      default: \"button\"\n    }\n  },\n  emits: [...useStatefulEmits, \"anchor-click\", \"anchor-right-click\", \"content-click\", \"click-outside\", \"focus-outside\", \"close\", \"open\", \"anchor-dblclick\"],\n  setup(props, {\n    emit\n  }) {\n    const {\n      valueComputed: statefulVal\n    } = useStateful(props, emit, \"modelValue\");\n    const valueComputed = computed({\n      get: () => statefulVal.value && !props.disabled && !props.readonly,\n      set(val) {\n        statefulVal.value = val;\n        if (val) {\n          emit(\"open\");\n        } else {\n          emit(\"close\");\n        }\n      }\n    });\n    const isMounted = useIsMounted();\n    const {\n      anchorRef: anchor\n    } = useAnchorSelector(props);\n    const cursorAnchor = computed(() => props.cursor ? useCursorAnchor(anchor, valueComputed).value : void 0);\n    const floating = useHTMLElement(\"floating\");\n    const body = useHTMLElementSelector(ref(\"body\"));\n    const target = useHTMLElementSelector(computed(() => props.target));\n    const teleport = useHTMLElementSelector(computed(() => props.teleport));\n    const anchorClass = useBem(\"va-dropdown\", () => pick(props, [\"disabled\"]));\n    const teleportTarget = computed(() => {\n      if (teleport.value) {\n        return teleport.value;\n      }\n      if (target.value) {\n        return target.value;\n      }\n      return body.value;\n    });\n    const teleportDisabled = computed(() => {\n      return props.disabled;\n    });\n    const showFloating = computed(() => isMounted.value && valueComputed.value);\n    const {\n      debounced: debounceHover,\n      cancel: cancelHoverDebounce\n    } = useDebounceFn(toRef(props, \"hoverOverTimeout\"));\n    const {\n      debounced: debounceUnHover,\n      cancel: cancelUnHoverDebounce\n    } = useDebounceFn(toRef(props, \"hoverOutTimeout\"));\n    const onClick = e => {\n      if (props.trigger !== \"click\" && kebabCase(props.trigger) !== \"right-click\" || props.disabled) {\n        return;\n      }\n      if (valueComputed.value) {\n        emitAndClose(\"anchor-click\", props.closeOnAnchorClick, e);\n      } else {\n        if (props.trigger !== \"click\") {\n          return;\n        }\n        valueComputed.value = true;\n        emit(\"anchor-click\", e);\n      }\n    };\n    const onContextmenu = e => {\n      if (kebabCase(props.trigger) !== \"right-click\" || props.disabled) {\n        return;\n      }\n      e.preventDefault();\n      if (valueComputed.value) {\n        emitAndClose(\"anchor-right-click\", props.closeOnAnchorClick, e);\n        if (props.cursor) {\n          nextTick(() => {\n            valueComputed.value = true;\n          });\n        }\n      } else {\n        valueComputed.value = true;\n        emit(\"anchor-right-click\", e);\n      }\n    };\n    const onDblclick = () => {\n      return void 0;\n    };\n    const onMouseenter = () => {\n      if (props.trigger !== \"hover\" || props.disabled) {\n        return;\n      }\n      debounceHover(() => {\n        valueComputed.value = true;\n      });\n      cancelUnHoverDebounce();\n    };\n    const onMouseleave = () => {\n      if (props.trigger !== \"hover\" || props.disabled) {\n        return;\n      }\n      if (props.isContentHoverable) {\n        debounceUnHover(() => {\n          valueComputed.value = false;\n        });\n      } else {\n        valueComputed.value = false;\n      }\n      cancelHoverDebounce();\n    };\n    useMouseNavigation(anchor, {\n      click: onClick,\n      contextmenu: onContextmenu,\n      dblclick: onDblclick,\n      mouseenter: onMouseenter,\n      mouseleave: onMouseleave\n    });\n    if (props.keyboardNavigation) {\n      useKeyboardNavigation(anchor, valueComputed);\n    }\n    const emitAndClose = (eventName, close, e) => {\n      emit(eventName, e);\n      if (close) {\n        valueComputed.value = false;\n      }\n    };\n    const floatingListeners = {\n      onMouseover: () => props.isContentHoverable && onMouseenter(),\n      onMouseout: () => onMouseleave(),\n      onClick: () => emitAndClose(\"content-click\", props.closeOnContentClick)\n    };\n    useClickOutside([anchor, floating], () => {\n      if (props.closeOnClickOutside && valueComputed.value) {\n        emitAndClose(\"click-outside\", props.closeOnClickOutside);\n      }\n    });\n    useFocusOutside([floating], () => {\n      if (props.closeOnFocusOutside && valueComputed.value) {\n        emitAndClose(\"focus-outside\", props.closeOnFocusOutside);\n      }\n    }, {\n      onlyKeyboard: true\n    });\n    const anchorComputed = computed(() => {\n      return cursorAnchor.value || anchor.value;\n    });\n    const {\n      floatingStyles\n    } = useDropdown(anchorComputed, floating, target, computed(() => ({\n      placement: props.placement,\n      offset: props.offset,\n      autoPlacement: props.autoPlacement,\n      stickToEdges: props.stickToEdges,\n      keepAnchorWidth: props.keepAnchorWidth,\n      verticalScrollOnOverflow: props.verticalScrollOnOverflow\n    })));\n    const hide = () => {\n      valueComputed.value = false;\n    };\n    const show = () => {\n      valueComputed.value = true;\n    };\n    return {\n      ...useTranslation(),\n      ...useTeleported(),\n      anchor,\n      anchorClass,\n      floating,\n      floatingStyles,\n      teleportDisabled,\n      showFloating,\n      teleportTarget,\n      floatingListeners,\n      isMounted,\n      valueComputed,\n      hide,\n      show\n    };\n  },\n  render() {\n    ({\n      \"aria-haspopup\": true,\n      \"aria-expanded\": this.valueComputed,\n      \"aria-disabled\": this.$props.disabled,\n      \"aria-label\": this.tp(this.$props.ariaLabel),\n      role: \"button\"\n    });\n    const slotBind = {\n      isOpened: this.valueComputed,\n      hide: this.hide,\n      show: this.show,\n      toggle: () => this.valueComputed ? this.hide() : this.show(),\n      getAnchorWidth: () => {\n        var _a;\n        return ((_a = this.anchor) == null ? void 0 : _a.offsetWidth) + \"px\";\n      },\n      getAnchorHeight: () => {\n        var _a;\n        return ((_a = this.anchor) == null ? void 0 : _a.offsetHeight) + \"px\";\n      }\n    };\n    const floatingSlotNode = this.showFloating && renderSlotNode(this.$slots.default, slotBind, {\n      ref: \"floating\",\n      class: \"va-dropdown__content-wrapper\",\n      style: this.floatingStyles,\n      ...this.teleportedAttrs,\n      ...this.floatingListeners\n    });\n    const anchorSlotVNode = renderSlotNode(this.$slots.anchor, slotBind, {\n      ref: \"anchor\",\n      role: this.$props.role,\n      class: [\"va-dropdown\", ...this.anchorClass.asArray.value],\n      style: {\n        position: \"relative\"\n      },\n      \"aria-label\": this.tp(this.$props.ariaLabel),\n      \"aria-disabled\": this.$props.disabled,\n      \"aria-expanded\": this.$props.role && this.$props.role !== \"none\" ? !!this.showFloating : void 0,\n      ...this.teleportFromAttrs,\n      ...this.$attrs\n    });\n    if (!this.$props.anchorSelector && !anchorSlotVNode) {\n      warn(\"VaDropdown: #anchor slot is missing\");\n      return;\n    }\n    if (this.showFloating && !floatingSlotNode) {\n      warn(\"VaDropdown: default slot is missing\");\n      return;\n    }\n    return h(Fragment, {}, [anchorSlotVNode, floatingSlotNode && h(Teleport, {\n      to: this.teleportTarget,\n      disabled: this.teleportDisabled\n    }, [floatingSlotNode])]);\n  }\n});\nexport { _sfc_main as _ };","map":{"version":3,"names":["_sfc_main","defineComponent","name","props","usePlacementAliasesProps","createStatefulProps","modelValue","type","Boolean","default","anchorSelector","String","innerAnchorSelector","trigger","validator","value","includes","disabled","readonly","closeOnClickOutside","closeOnFocusOutside","closeOnAnchorClick","closeOnContentClick","hoverOverTimeout","Number","hoverOutTimeout","isContentHoverable","offset","Array","keepAnchorWidth","verticalScrollOnOverflow","cursor","autoPlacement","stickToEdges","target","Object","teleport","keyboardNavigation","ariaLabel","role","emits","useStatefulEmits","setup","emit","valueComputed","statefulVal","useStateful","computed","get","set","val","isMounted","useIsMounted","anchorRef","anchor","useAnchorSelector","cursorAnchor","useCursorAnchor","floating","useHTMLElement","body","useHTMLElementSelector","ref","anchorClass","useBem","pick","teleportTarget","teleportDisabled","showFloating","debounced","debounceHover","cancel","cancelHoverDebounce","useDebounceFn","toRef","debounceUnHover","cancelUnHoverDebounce","onClick","e","kebabCase","emitAndClose","onContextmenu","preventDefault","nextTick","onDblclick","onMouseenter","onMouseleave","useMouseNavigation","click","contextmenu","dblclick","mouseenter","mouseleave","useKeyboardNavigation","eventName","close","floatingListeners","onMouseover","onMouseout","useClickOutside","useFocusOutside","onlyKeyboard","anchorComputed","floatingStyles","useDropdown","placement","hide","show","useTranslation","useTeleported","render","$props","tp","slotBind","isOpened","toggle","getAnchorWidth","_a","offsetWidth","getAnchorHeight","offsetHeight","floatingSlotNode","renderSlotNode","$slots","class","style","teleportedAttrs","anchorSlotVNode","asArray","position","teleportFromAttrs","$attrs","warn","h","Fragment","Teleport","to"],"sources":["../../../../../src/components/va-dropdown/VaDropdown.vue"],"sourcesContent":["<script lang=\"ts\">\nimport {\n  h,\n  defineComponent,\n  PropType,\n  computed,\n  nextTick,\n  ref,\n  toRef,\n  Fragment,\n  Teleport,\n} from 'vue'\nimport kebabCase from 'lodash/kebabCase'\nimport pick from 'lodash/pick'\nimport {\n  MaybeHTMLElementOrSelector,\n  createStatefulProps,\n  useBem,\n  useClickOutside,\n  useDebounceFn,\n  useHTMLElement,\n  useHTMLElementSelector,\n  useIsMounted,\n  useStateful,\n  useStatefulEmits,\n  useTranslation,\n  usePlacementAliasesProps,\n} from '../../composables'\nimport { renderSlotNode } from '../../utils/headless'\nimport { useKeyboardNavigation, useMouseNavigation } from './hooks/useDropdownNavigation'\nimport { useAnchorSelector } from './hooks/useAnchorSelector'\nimport { useCursorAnchor } from './hooks/useCursorAnchor'\nimport { DropdownOffsetProp } from './types'\nimport { useDropdown } from './hooks/useDropdown'\nimport { warn } from '../../utils/console'\nimport { useFocusOutside } from '../../composables/useFocusOutside'\nimport { useTeleported } from '../../composables/useTeleported'\nimport { StringWithAutocomplete } from '../../utils/types/prop-type'\n\nexport default defineComponent({\n  name: 'VaDropdown',\n  props: {\n    ...usePlacementAliasesProps,\n    ...createStatefulProps(true),\n    modelValue: { type: Boolean, default: false },\n    anchorSelector: { type: String, default: '' },\n    innerAnchorSelector: { type: String, default: '' },\n    trigger: {\n      type: String as PropType<'click' | 'right-click' | 'hover' | 'dblclick' | 'none'>,\n      default: 'click',\n      validator: (value: string) => ['click', 'right-click', 'hover', 'dblclick', 'none'].includes(value),\n    },\n    disabled: { type: Boolean },\n    readonly: { type: Boolean },\n    closeOnClickOutside: { type: Boolean, default: true },\n    closeOnFocusOutside: { type: Boolean, default: true },\n    closeOnAnchorClick: { type: Boolean, default: true },\n    closeOnContentClick: { type: Boolean, default: true },\n    hoverOverTimeout: { type: Number, default: 30 },\n    hoverOutTimeout: { type: Number, default: 200 },\n    isContentHoverable: { type: Boolean, default: true },\n    offset: { type: [Array, Number] as PropType<DropdownOffsetProp>, default: 0 },\n    keepAnchorWidth: { type: Boolean, default: false },\n    verticalScrollOnOverflow: { type: Boolean, default: true },\n    cursor: { type: Boolean, default: false },\n    autoPlacement: { type: Boolean, default: true },\n    stickToEdges: { type: Boolean, default: false },\n    /** Viewport where dropdown will be rendered. Autoplacement will be calculated relative to `target` */\n    target: { type: [String, Object] as PropType<MaybeHTMLElementOrSelector>, default: undefined },\n    /** Element where dropdown content will be rendered. */\n    teleport: { type: [String, Object] as PropType<MaybeHTMLElementOrSelector>, default: undefined },\n    /** Not reactive */\n    keyboardNavigation: { type: Boolean, default: false },\n    ariaLabel: { type: String, default: '$t:toggleDropdown' },\n    role: { type: String as PropType<StringWithAutocomplete<'button' | 'none'>>, default: 'button' },\n  },\n\n  emits: [...useStatefulEmits, 'anchor-click', 'anchor-right-click', 'content-click', 'click-outside', 'focus-outside', 'close', 'open', 'anchor-dblclick'],\n\n  setup (props, { emit }) {\n    const { valueComputed: statefulVal } = useStateful(props, emit, 'modelValue')\n    const valueComputed = computed({\n      get: () => statefulVal.value && !props.disabled && !props.readonly,\n      set (val) {\n        statefulVal.value = val\n        if (val) {\n          emit('open')\n        } else {\n          emit('close')\n        }\n      },\n    })\n\n    const isMounted = useIsMounted()\n\n    const { anchorRef: anchor } = useAnchorSelector(props)\n    const cursorAnchor = computed(() => props.cursor ? useCursorAnchor(anchor, valueComputed).value : undefined)\n    const floating = useHTMLElement('floating')\n    const body = useHTMLElementSelector(ref('body'))\n    const target = useHTMLElementSelector(computed(() => props.target))\n    const teleport = useHTMLElementSelector(computed(() => props.teleport))\n\n    const anchorClass = useBem('va-dropdown', () => pick(props, ['disabled']))\n    const teleportTarget = computed<HTMLElement | undefined>(() => {\n      if (teleport.value) {\n        return teleport.value\n      }\n\n      if (target.value) {\n        return target.value\n      }\n\n      return body.value\n    })\n\n    const teleportDisabled = computed(() => {\n      return props.disabled\n    })\n    const showFloating = computed(() => isMounted.value && valueComputed.value)\n\n    const { debounced: debounceHover, cancel: cancelHoverDebounce } = useDebounceFn(toRef(props, 'hoverOverTimeout'))\n    const { debounced: debounceUnHover, cancel: cancelUnHoverDebounce } = useDebounceFn(toRef(props, 'hoverOutTimeout'))\n\n    const onClick = (e: MouseEvent) => {\n      if ((props.trigger !== 'click' && kebabCase(props.trigger) !== 'right-click') || props.disabled) { return }\n\n      if (valueComputed.value) {\n        emitAndClose('anchor-click', props.closeOnAnchorClick, e)\n      } else {\n        if (props.trigger !== 'click') { return }\n        valueComputed.value = true\n        emit('anchor-click', e)\n      }\n    }\n    const onContextmenu = (e: MouseEvent) => {\n      if (kebabCase(props.trigger) !== 'right-click' || props.disabled) { return }\n      e.preventDefault()\n\n      if (valueComputed.value) {\n        emitAndClose('anchor-right-click', props.closeOnAnchorClick, e)\n\n        if (props.cursor) {\n          nextTick(() => { valueComputed.value = true })\n        }\n      } else {\n        valueComputed.value = true\n        emit('anchor-right-click', e)\n      }\n    }\n    const onDblclick = () => { return undefined }\n    const onMouseenter = () => {\n      if (props.trigger !== 'hover' || props.disabled) { return }\n\n      debounceHover(() => { valueComputed.value = true })\n      cancelUnHoverDebounce()\n    }\n    const onMouseleave = () => {\n      if (props.trigger !== 'hover' || props.disabled) { return }\n\n      if (props.isContentHoverable) {\n        debounceUnHover(() => { valueComputed.value = false })\n      } else {\n        valueComputed.value = false\n      }\n      cancelHoverDebounce()\n    }\n\n    useMouseNavigation(anchor, {\n      click: onClick,\n      contextmenu: onContextmenu,\n      dblclick: onDblclick,\n      mouseenter: onMouseenter,\n      mouseleave: onMouseleave,\n    })\n\n    if (props.keyboardNavigation) {\n      useKeyboardNavigation(anchor, valueComputed)\n    }\n\n    const emitAndClose = (eventName: Parameters<typeof emit>[0], close?: boolean, e?: Event) => {\n      emit(eventName, e)\n      if (close) { valueComputed.value = false }\n    }\n\n    const floatingListeners = {\n      onMouseover: () => props.isContentHoverable && onMouseenter(),\n      onMouseout: () => onMouseleave(),\n      onClick: () => emitAndClose('content-click', props.closeOnContentClick),\n    }\n\n    useClickOutside([anchor, floating], () => {\n      if (props.closeOnClickOutside && valueComputed.value) {\n        emitAndClose('click-outside', props.closeOnClickOutside)\n      }\n    })\n\n    useFocusOutside([floating], () => {\n      if (props.closeOnFocusOutside && valueComputed.value) {\n        emitAndClose('focus-outside', props.closeOnFocusOutside)\n      }\n    }, { onlyKeyboard: true })\n\n    const anchorComputed = computed(() => {\n      return cursorAnchor.value || anchor.value\n    })\n\n    const { floatingStyles } = useDropdown(\n      anchorComputed,\n      floating,\n      target,\n      computed(() => ({\n        placement: props.placement,\n        offset: props.offset,\n        autoPlacement: props.autoPlacement,\n        stickToEdges: props.stickToEdges,\n        keepAnchorWidth: props.keepAnchorWidth,\n        verticalScrollOnOverflow: props.verticalScrollOnOverflow,\n      })),\n    )\n\n    const hide = () => { valueComputed.value = false }\n    const show = () => { valueComputed.value = true }\n\n    return {\n      ...useTranslation(),\n      ...useTeleported(),\n      anchor,\n      anchorClass,\n      floating,\n      floatingStyles,\n      teleportDisabled,\n      showFloating,\n      teleportTarget,\n      floatingListeners,\n      isMounted,\n      valueComputed,\n      hide,\n      show,\n    }\n  },\n\n  render () {\n    const anchorAriaAttributes = {\n      'aria-haspopup': true,\n      'aria-expanded': this.valueComputed,\n      'aria-disabled': this.$props.disabled,\n      'aria-label': this.tp(this.$props.ariaLabel),\n      role: 'button',\n    }\n\n    const slotBind = {\n      isOpened: this.valueComputed,\n      hide: this.hide,\n      show: this.show,\n      toggle: () => this.valueComputed ? this.hide() : this.show(),\n      getAnchorWidth: () => this.anchor?.offsetWidth + 'px',\n      getAnchorHeight: () => this.anchor?.offsetHeight + 'px',\n    }\n\n    const floatingSlotNode = this.showFloating && renderSlotNode(this.$slots.default, slotBind, {\n      ref: 'floating',\n      class: 'va-dropdown__content-wrapper',\n      style: this.floatingStyles,\n      ...this.teleportedAttrs,\n      ...this.floatingListeners,\n    })\n\n    const anchorSlotVNode = renderSlotNode(this.$slots.anchor, slotBind, {\n      ref: 'anchor',\n      role: this.$props.role,\n      class: ['va-dropdown', ...this.anchorClass.asArray.value],\n      style: { position: 'relative' },\n      'aria-label': this.tp(this.$props.ariaLabel),\n      'aria-disabled': this.$props.disabled,\n      'aria-expanded': this.$props.role && this.$props.role !== 'none' ? !!this.showFloating : undefined,\n      ...this.teleportFromAttrs,\n      ...this.$attrs,\n    })\n\n    if (!this.$props.anchorSelector && !anchorSlotVNode) {\n      warn('VaDropdown: #anchor slot is missing')\n      return\n    }\n\n    if (this.showFloating && !floatingSlotNode) {\n      warn('VaDropdown: default slot is missing')\n      return\n    }\n\n    return h(Fragment, {}, [\n      anchorSlotVNode,\n      (floatingSlotNode) && h(\n        Teleport,\n        {\n          to: this.teleportTarget,\n          disabled: this.teleportDisabled,\n        },\n        [floatingSlotNode],\n      ),\n    ])\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import '../../styles/resources';\n@import 'variables';\n\n.va-dropdown {\n  /* Solved the alignment problem (if we try to align inline and block elements) */\n  line-height: var(--va-dropdown-line-height);\n  font-family: var(--va-font-family);\n  display: var(--va-dropdown-display);\n  position: relative;\n  max-width: 100%;\n  vertical-align: middle;\n\n  &--disabled {\n    @include va-disabled;\n  }\n\n  &__content-wrapper {\n    z-index: var(--va-dropdown-content-wrapper-z-index);\n    font-family: var(--va-font-family);\n    top: 0;\n    left: 0;\n    position: absolute;\n  }\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}