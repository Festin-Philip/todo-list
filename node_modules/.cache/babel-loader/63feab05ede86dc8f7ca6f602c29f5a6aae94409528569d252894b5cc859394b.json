{"ast":null,"code":"import { _ as _sfc_main } from \"./VaDatePickerHeader.vue_vue_type_script_lang-e6151884.mjs\";\nimport { resolveComponent, openBlock, createElementBlock, renderSlot, normalizeProps, guardReactiveProps, createVNode, createElementVNode, withCtx, createTextVNode, toDisplayString, mergeProps, createCommentVNode } from \"vue\";\nimport { _ as _export_sfc } from \"../../../../../plugin-vue_export-helper-cc2b3d55.mjs\";\nconst VaDatePickerHeader_vue_vue_type_style_index_0_lang = \"\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"va-date-picker-header va-date-picker__header\"\n};\nconst _hoisted_2 = {\n  class: \"va-date-picker__header__text\"\n};\nconst _hoisted_3 = {\n  class: \"va-date-picker__header__month\"\n};\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_va_button = resolveComponent(\"va-button\");\n  return _ctx.syncView.type !== \"year\" ? (openBlock(), createElementBlock(\"div\", _hoisted_1, [renderSlot(_ctx.$slots, \"buttonPrev\", normalizeProps(guardReactiveProps({\n    onClick: _ctx.prev\n  })), () => [createVNode(_component_va_button, {\n    disabled: _ctx.$props.disabled,\n    icon: \"va-arrow-left\",\n    preset: \"plain\",\n    size: \"small\",\n    color: _ctx.color,\n    textColor: \"currentColor\",\n    \"aria-label\": _ctx.tp(_ctx.$props.ariaPreviousPeriodLabel),\n    round: \"\",\n    onClick: _ctx.prev\n  }, null, 8, [\"disabled\", \"color\", \"aria-label\", \"onClick\"])]), createElementVNode(\"div\", _hoisted_2, [renderSlot(_ctx.$slots, \"header\", normalizeProps(guardReactiveProps({\n    year: _ctx.syncView.year,\n    month: _ctx.syncView.month,\n    monthNames: _ctx.monthNames,\n    view: _ctx.syncView,\n    changeView: _ctx.changeView,\n    switchView: _ctx.switchView\n  })), () => [createVNode(_component_va_button, {\n    disabled: _ctx.$props.disabled,\n    preset: \"plain\",\n    size: \"small\",\n    color: _ctx.color,\n    textColor: \"currentColor\",\n    \"aria-label\": _ctx.tp(_ctx.$props.ariaSwitchViewLabel),\n    onClick: _ctx.switchView\n  }, {\n    default: withCtx(() => [renderSlot(_ctx.$slots, \"year\", normalizeProps(guardReactiveProps({\n      year: _ctx.syncView.year\n    })), () => [createTextVNode(toDisplayString(_ctx.syncView.year), 1)]), _ctx.syncView.type === \"day\" ? renderSlot(_ctx.$slots, \"month\", normalizeProps(mergeProps({\n      key: 0\n    }, {\n      month: _ctx.syncView.month\n    })), () => [createElementVNode(\"span\", _hoisted_3, toDisplayString(_ctx.monthNames[_ctx.syncView.month]), 1)]) : createCommentVNode(\"\", true)]),\n    _: 3\n  }, 8, [\"disabled\", \"color\", \"aria-label\", \"onClick\"])])]), renderSlot(_ctx.$slots, \"buttonNext\", normalizeProps(guardReactiveProps({\n    onClick: _ctx.next\n  })), () => [createVNode(_component_va_button, {\n    disabled: _ctx.$props.disabled,\n    icon: \"va-arrow-right\",\n    preset: \"plain\",\n    size: \"small\",\n    color: _ctx.color,\n    textColor: \"currentColor\",\n    \"aria-label\": _ctx.tp(_ctx.$props.ariaNextPeriodLabel),\n    onClick: _ctx.next,\n    round: \"\"\n  }, null, 8, [\"disabled\", \"color\", \"aria-label\", \"onClick\"])])])) : createCommentVNode(\"\", true);\n}\nconst VaDatePickerHeader = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { VaDatePickerHeader as V };\nimport '../../../../../VaDatePickerHeader.css';","map":{"version":3,"names":["_hoisted_1","key","class","_component_va_button","resolveComponent","_ctx","syncView","type","openBlock","createElementBlock","renderSlot","$slots","normalizeProps","guardReactiveProps","onClick","prev","createVNode","disabled","$props","icon","preset","size","color","textColor","tp","ariaPreviousPeriodLabel","round","createElementVNode","_hoisted_2","year","month","monthNames","view","changeView","switchView","ariaSwitchViewLabel","createTextVNode","toDisplayString","mergeProps","_hoisted_3","next","ariaNextPeriodLabel"],"sources":["../../../../../../../src/components/va-date-picker/components/VaDatePickerHeader/VaDatePickerHeader.vue"],"sourcesContent":["<template>\n  <div\n    v-if=\"syncView.type !== 'year'\"\n    class=\"va-date-picker-header va-date-picker__header\"\n  >\n    <slot name=\"buttonPrev\" v-bind=\"{ onClick: prev }\">\n      <va-button\n        :disabled=\"$props.disabled\"\n        icon=\"va-arrow-left\"\n        preset=\"plain\"\n        size=\"small\"\n        :color=\"color\"\n        :textColor=\"'currentColor'\"\n        :aria-label=\"tp($props.ariaPreviousPeriodLabel)\"\n        round\n        @click=\"prev\"\n      />\n    </slot>\n\n    <div class=\"va-date-picker__header__text\">\n      <slot name=\"header\" v-bind=\"{ year: syncView.year, month: syncView.month, monthNames, view: syncView, changeView, switchView }\">\n        <va-button\n          :disabled=\"$props.disabled\"\n          preset=\"plain\"\n          size=\"small\"\n          :color=\"color\"\n          :textColor=\"'currentColor'\"\n          :aria-label=\"tp($props.ariaSwitchViewLabel)\"\n          @click=\"switchView\"\n        >\n          <slot name=\"year\" v-bind=\"{ year: syncView.year }\">{{ syncView.year }}</slot>\n\n          <slot v-if=\"syncView.type === 'day'\" name=\"month\" v-bind=\"{ month: syncView.month }\">\n            <span class=\"va-date-picker__header__month\">{{ monthNames[syncView.month] }}</span>\n          </slot>\n        </va-button>\n      </slot>\n    </div>\n\n    <slot name=\"buttonNext\" v-bind=\"{ onClick: next }\">\n      <va-button\n        :disabled=\"$props.disabled\"\n        icon=\"va-arrow-right\"\n        preset=\"plain\"\n        size=\"small\"\n        :color=\"color\"\n        :textColor=\"'currentColor'\"\n        :aria-label=\"tp($props.ariaNextPeriodLabel)\"\n        @click=\"next\"\n        round\n      />\n    </slot>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from 'vue'\n\nimport { useView } from '../../hooks/view'\n\nimport { DatePickerView } from '../../types'\n\nimport { VaButton } from '../../../va-button'\nimport { useTranslation } from '../../../../composables'\n\nexport default defineComponent({\n  name: 'VaDatePickerHeader',\n  components: { VaButton },\n  emits: ['update:view'],\n  props: {\n    monthNames: { type: Array, required: true },\n    view: { type: Object as PropType<DatePickerView> },\n    color: { type: String },\n    disabled: { type: Boolean, default: false },\n\n    ariaNextPeriodLabel: { type: String, default: '$t:nextPeriod' },\n    ariaPreviousPeriodLabel: { type: String, default: '$t:previousPeriod' },\n    ariaSwitchViewLabel: { type: String, default: '$t:switchView' },\n  },\n\n  setup (props, { emit }) {\n    const { syncView, prev, next } = useView(props, emit)\n\n    const switchView = () => {\n      if (syncView.value.type === 'day') {\n        syncView.value = { ...syncView.value, type: 'month' }\n      } else if (syncView.value.type === 'month') {\n        syncView.value = { ...syncView.value, type: 'year' }\n      }\n    }\n\n    const changeView = (view: DatePickerView) => {\n      syncView.value = view\n    }\n\n    return {\n      ...useTranslation(),\n      prev,\n      next,\n      changeView,\n      switchView,\n      syncView,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-date-picker {\n  color: currentColor;\n\n  &__header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    &__text {\n      color: currentColor;\n    }\n\n    &__month {\n      margin-left: 0.25rem;\n    }\n  }\n}\n</style>\n"],"mappings":";;;;MAGIA,UAAA,GAAM;EAAAC,GAAA;EAAAC,KAAA;;;;;;;;;EADa,MAAAC,oBAAA,GAAAC,gBAAA;EAGnB,OAAAC,IAAA,CAAAC,QAAA,CAYOC,IAAA,eAAAC,SAAA,IADHC,kBAAA,QAAAT,UAAA,GATSU,UAAA,CAAAL,IAAA,CAAEM,MAAA,EAAM,cAASC,cAAA,CAAAC,kBAAA;IAAAC,OAAA,EAAAT,IAAA,CAAAU;EAAA,YAAAC,WAAA,CACrBb,oBAAA,EAAe;IACpBc,QAAA,EAAOZ,IAAA,CAAOa,MAAA,CAAAD,QAAA;IACdE,IAAA,EAAK;IACJC,MAAA,EAAO;IACPC,IAAA;IACAC,KAAA,EAAUjB,IAAA,CAAAiB,KAAA;IACXC,SAAA,EAAK;IACJ,cAAOlB,IAAA,CAAImB,EAAA,CAAAnB,IAAA,CAAAa,MAAA,CAAAO,uBAAA;IAAAC,KAAA;IAAAZ,OAAA,EAAAT,IAAA,CAAAU;KAsBV,4DAFUY,kBAAA,QAAAC,UAAA,GAbDlB,UAAA,CAAAL,IAAA,CAAEM,MAAA,EAAM,UAASC,cAAA,CAAAC,kBAAA;IAAAgB,IAAA,EAAAxB,IAAA,CAAAC,QAAA,CAAAuB,IAAA;IAAAC,KAAA,EAAAzB,IAAA,CAAAC,QAAA,CAAAwB,KAAA;IAAAC,UAAA,EAAA1B,IAAA,CAAA0B,UAAA;IAAAC,IAAA,EAAA3B,IAAA,CAAAC,QAAA;IAAA2B,UAAA,EAAA5B,IAAA,CAAA4B,UAAA;IAAAC,UAAA,EAAA7B,IAAA,CAAA6B;EAAA,YAAAlB,WAAA,CACnBb,oBAAA,EAAO;IACdc,QAAA,EAAKZ,IAAA,CAAOa,MAAA,CAAAD,QAAA;IACXG,MAAA,EAAO;IACPC,IAAA;IACAC,KAAA,EAAUjB,IAAA,CAAAiB,KAAA;IACVC,SAAA,EAAO;IAAA,cAAAlB,IAAA,CAAAmB,EAAA,CAAAnB,IAAA,CAAAa,MAAA,CAAAiB,mBAAA;IAAArB,OAAA,EAAAT,IAAA,CAAA6B;;;;gBAIIE,eAAA,CAAaC,eAAA,CAAAhC,IAAA,CAAAC,QAAA,CAAAuB,IAAA,SACvBxB,IAAA,CAAAC,QAAA,CAAAC,IAAA,aAAAG,UAAA,CAAAL,IAAA,CAAAM,MAAA,WAAAC,cAAA,CAAA0B,UAAA;MAAArC,GAAA;IAAA;MAAA6B,KAAA,EAAAzB,IAAA,CAAAC,QAAA,CAAAwB;IAAA,YAAAH,kBAAA,SAAAY,UAAA,EAAAF,eAAA,CAAAhC,IAAA,CAAA0B,UAAA,CAAA1B,IAAA,CAAAC,QAAA,CAAAwB,KAAA,O;;wDAMR,KAEapB,UAAA,CAAAL,IAAA,CAAEM,MAAA,EAAM,cAASC,cAAA,CAAAC,kBAAA;IAAAC,OAAA,EAAAT,IAAA,CAAAmC;EAAA,YAAAxB,WAAA,CACrBb,oBAAA,EAAgB;IACrBc,QAAA,EAAOZ,IAAA,CAAOa,MAAA,CAAAD,QAAA;IACdE,IAAA,EAAK;IACJC,MAAA,EAAO;IACPC,IAAA;IACAC,KAAA,EAAUjB,IAAA,CAAAiB,KAAA;IACVC,SAAA,EAAO;IACR,cAAKlB,IAAA,CAAAmB,EAAA,CAAAnB,IAAA,CAAAa,MAAA,CAAAuB,mBAAA;IAAA3B,OAAA,EAAAT,IAAA,CAAAmC,IAAA;IAAAd,KAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}