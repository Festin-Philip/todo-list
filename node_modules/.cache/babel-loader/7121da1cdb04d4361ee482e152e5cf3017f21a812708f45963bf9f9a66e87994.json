{"ast":null,"code":"import { computed } from \"vue\";\nimport { u as unwrapEl } from \"../utils/unwrapEl-4d79d250.mjs\";\nconst useHTMLElementSelector = key => {\n  return computed(() => {\n    if (typeof (key == null ? void 0 : key.value) === \"string\") {\n      return document.querySelector(key.value);\n    }\n    return unwrapEl(key == null ? void 0 : key.value);\n  });\n};\nexport { useHTMLElementSelector as u };","map":{"version":3,"names":["useHTMLElementSelector","key","computed","value","document","querySelector","unwrapEl"],"sources":["../../../../src/composables/useHTMLElementSelector.ts"],"sourcesContent":["import { computed, DefineComponent, Ref, unref } from 'vue'\nimport { unwrapEl } from '../utils/unwrapEl'\n\nexport type MaybeHTMLElementOrSelector = string | HTMLElement | DefineComponent | undefined\n\nexport const useHTMLElementSelector = (key: Ref<MaybeHTMLElementOrSelector | undefined>): Ref<HTMLElement | undefined> => {\n  return computed(() => {\n    if (typeof key?.value === 'string') {\n      return document.querySelector(key.value) as HTMLElement\n    }\n\n    return unwrapEl(key?.value)\n  })\n}\n"],"mappings":";;AAKa,MAAAA,sBAAA,GAA0BC,GAAA,IAAmF;EACxH,OAAOC,QAAA,CAAS,MAAM;IAChB,YAAOD,GAAA,oBAAAA,GAAA,CAAKE,KAAA,MAAU,UAAU;MAC3B,OAAAC,QAAA,CAASC,aAAA,CAAcJ,GAAA,CAAIE,KAAK;IACzC;IAEO,OAAAG,QAAA,CAASL,GAAA,oBAAAA,GAAA,CAAKE,KAAK;EAAA,CAC3B;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}