{"ast":null,"code":"import { w as withConfigTransport } from \"../../services/config-transport/withConfigTransport-45112abc.mjs\";\nimport { _ as _sfc_main } from \"./VaModal.vue_vue_type_script_lang-ec694b0b.mjs\";\nimport { resolveComponent, openBlock, createElementBlock, normalizeClass, mergeProps, renderSlot, normalizeProps, guardReactiveProps, createCommentVNode, createBlock, Teleport, createVNode, withCtx, normalizeStyle, createElementVNode, withKeys, Fragment, toDisplayString, createTextVNode } from \"vue\";\nimport { _ as _export_sfc } from \"../../../plugin-vue_export-helper-cc2b3d55.mjs\";\nconst VaModal_vue_vue_type_style_index_0_lang = \"\";\nconst _hoisted_1 = [\"aria-labelledby\"];\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"va-modal__header\"\n};\nconst _hoisted_4 = {\n  key: 2,\n  class: \"va-modal__message\"\n};\nconst _hoisted_5 = {\n  key: 3,\n  class: \"va-modal__message\"\n};\nconst _hoisted_6 = {\n  key: 4,\n  class: \"va-modal__footer\"\n};\nconst _hoisted_7 = {\n  key: 5,\n  class: \"va-modal__footer\"\n};\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_va_icon = resolveComponent(\"va-icon\");\n  const _component_va_button = resolveComponent(\"va-button\");\n  const _component_WithTransition = resolveComponent(\"WithTransition\");\n  return openBlock(), createElementBlock(\"div\", {\n    ref: \"rootElement\",\n    class: normalizeClass([\"va-modal-entry\", _ctx.$props.anchorClass]),\n    role: \"dialog\",\n    \"aria-modal\": \"true\",\n    \"aria-labelledby\": _ctx.title\n  }, [_ctx.$slots.anchor ? (openBlock(), createElementBlock(\"div\", mergeProps({\n    key: 0,\n    class: \"va-modal__anchor\"\n  }, _ctx.teleportFromAttrs), [renderSlot(_ctx.$slots, \"anchor\", normalizeProps(guardReactiveProps(_ctx.slotBind)))], 16)) : createCommentVNode(\"\", true), (openBlock(), createBlock(Teleport, {\n    to: _ctx.attachElement,\n    disabled: _ctx.$props.disableAttachment\n  }, [createVNode(_component_WithTransition, mergeProps({\n    name: \"va-modal\",\n    isTransition: !_ctx.$props.withoutTransitions,\n    appear: \"\",\n    duration: 300\n  }, {\n    ..._ctx.$attrs,\n    ..._ctx.teleportedAttrs\n  }, {\n    onBeforeEnter: _ctx.onBeforeEnterTransition,\n    onAfterEnter: _ctx.onAfterEnterTransition,\n    onBeforeLeave: _ctx.onBeforeLeaveTransition,\n    onAfterLeave: _ctx.onAfterLeaveTransition\n  }), {\n    default: withCtx(() => [_ctx.valueComputed ? (openBlock(), createElementBlock(\"div\", {\n      key: 0,\n      class: normalizeClass([\"va-modal\", _ctx.computedClass])\n    }, [_ctx.$props.overlay ? (openBlock(), createElementBlock(\"div\", {\n      key: 0,\n      class: normalizeClass([\"va-modal__overlay\", _ctx.computedOverlayClass]),\n      style: normalizeStyle(_ctx.computedOverlayStyles)\n    }, null, 6)) : createCommentVNode(\"\", true), createElementVNode(\"div\", {\n      class: \"va-modal__container\",\n      style: normalizeStyle(_ctx.computedModalContainerStyle)\n    }, [createElementVNode(\"div\", {\n      ref: \"modalDialog\",\n      class: \"va-modal__dialog\",\n      style: normalizeStyle(_ctx.computedDialogStyle)\n    }, [_ctx.$props.fullscreen || _ctx.$props.closeButton ? (openBlock(), createBlock(_component_va_icon, {\n      key: 0,\n      name: \"va-close\",\n      class: normalizeClass([\"va-modal__close\", {\n        \"va-modal__close--fullscreen\": _ctx.$props.fullscreen\n      }]),\n      role: \"button\",\n      \"aria-label\": _ctx.tp(_ctx.$props.ariaCloseLabel),\n      tabindex: \"0\",\n      onClick: _ctx.cancel,\n      onKeydown: [withKeys(_ctx.cancel, [\"space\"]), withKeys(_ctx.cancel, [\"enter\"])]\n    }, null, 8, [\"class\", \"aria-label\", \"onClick\", \"onKeydown\"])) : createCommentVNode(\"\", true), createElementVNode(\"div\", {\n      class: \"va-modal__inner\",\n      style: normalizeStyle({\n        maxWidth: _ctx.$props.maxWidth,\n        maxHeight: _ctx.$props.maxHeight\n      })\n    }, [_ctx.$slots.content ? (openBlock(), createElementBlock(\"div\", _hoisted_2, [renderSlot(_ctx.$slots, \"content\", normalizeProps(guardReactiveProps(_ctx.slotBind)))])) : createCommentVNode(\"\", true), !_ctx.$slots.content ? (openBlock(), createElementBlock(Fragment, {\n      key: 1\n    }, [_ctx.title ? (openBlock(), createElementBlock(\"div\", {\n      key: 0,\n      class: \"va-modal__title\",\n      style: normalizeStyle({\n        color: _ctx.getColor(\"primary\")\n      })\n    }, toDisplayString(_ctx.$props.title), 5)) : createCommentVNode(\"\", true), _ctx.$slots.header ? (openBlock(), createElementBlock(\"div\", _hoisted_3, [renderSlot(_ctx.$slots, \"header\", normalizeProps(guardReactiveProps(_ctx.slotBind)))])) : createCommentVNode(\"\", true), _ctx.$props.message ? (openBlock(), createElementBlock(\"div\", _hoisted_4, toDisplayString(_ctx.$props.message), 1)) : createCommentVNode(\"\", true), _ctx.$slots.default ? (openBlock(), createElementBlock(\"div\", _hoisted_5, [renderSlot(_ctx.$slots, \"default\", normalizeProps(guardReactiveProps(_ctx.slotBind)))])) : createCommentVNode(\"\", true), (_ctx.$props.cancelText || _ctx.$props.okText) && !_ctx.$props.hideDefaultActions ? (openBlock(), createElementBlock(\"div\", _hoisted_6, [_ctx.$props.cancelText ? (openBlock(), createBlock(_component_va_button, {\n      key: 0,\n      preset: \"secondary\",\n      color: \"secondary\",\n      class: \"va-modal__default-cancel-button\",\n      onClick: _ctx.cancel\n    }, {\n      default: withCtx(() => [createTextVNode(toDisplayString(_ctx.tp(_ctx.$props.cancelText)), 1)]),\n      _: 1\n    }, 8, [\"onClick\"])) : createCommentVNode(\"\", true), createVNode(_component_va_button, {\n      onClick: _ctx.ok\n    }, {\n      default: withCtx(() => [createTextVNode(toDisplayString(_ctx.tp(_ctx.$props.okText)), 1)]),\n      _: 1\n    }, 8, [\"onClick\"])])) : createCommentVNode(\"\", true), _ctx.$slots.footer ? (openBlock(), createElementBlock(\"div\", _hoisted_7, [renderSlot(_ctx.$slots, \"footer\", normalizeProps(guardReactiveProps(_ctx.slotBind)))])) : createCommentVNode(\"\", true)], 64)) : createCommentVNode(\"\", true)], 4)], 4)], 4)], 2)) : createCommentVNode(\"\", true)]),\n    _: 3\n  }, 16, [\"isTransition\", \"onBeforeEnter\", \"onAfterEnter\", \"onBeforeLeave\", \"onAfterLeave\"])], 8, [\"to\", \"disabled\"]))], 10, _hoisted_1);\n}\nconst _VaModal = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nconst VaModal = withConfigTransport(_VaModal);\nexport { VaModal as V };\nimport '../../../VaModal.css';","map":{"version":3,"names":["_hoisted_3","key","class","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","resolveComponent","openBlock","createElementBlock","ref","normalizeClass","_ctx","$props","anchorClass","role","title","$slots","anchor","mergeProps","teleportFromAttrs","renderSlot","normalizeProps","guardReactiveProps","slotBind","createCommentVNode","createBlock","Teleport","to","attachElement","disabled","disableAttachment","createVNode","_component_WithTransition","name","isTransition","withoutTransitions","appear","duration","$attrs","teleportedAttrs","onBeforeEnter","onBeforeEnterTransition","onAfterEnter","onAfterEnterTransition","onBeforeLeave","onBeforeLeaveTransition","onAfterLeave","onAfterLeaveTransition","default","withCtx","valueComputed","computedClass","overlay","computedOverlayClass","style","normalizeStyle","computedOverlayStyles","createElementVNode","computedModalContainerStyle","computedDialogStyle","fullscreen","closeButton","_component_va_icon","tp","ariaCloseLabel","tabindex","onClick","cancel","onKeydown","withKeys","maxWidth","maxHeight","content","_hoisted_2","Fragment","color","getColor","toDisplayString","header","message","cancelText","okText","hideDefaultActions","_component_va_button","preset","ok","createTextVNode","footer","VaModal","withConfigTransport","_VaModal"],"sources":["../../../../../src/components/va-modal/VaModal.vue","../../../../../src/components/va-modal/VaModal.ts"],"sourcesContent":["<template>\n  <div\n    ref=\"rootElement\"\n    class=\"va-modal-entry\"\n    role=\"dialog\"\n    aria-modal=\"true\"\n    :aria-labelledby=\"title\"\n    :class=\"$props.anchorClass\"\n  >\n    <div v-if=\"$slots.anchor\" class=\"va-modal__anchor\" v-bind=\"teleportFromAttrs\">\n      <slot name=\"anchor\" v-bind=\"slotBind\" />\n    </div>\n\n    <teleport :to=\"attachElement\" :disabled=\"$props.disableAttachment\">\n      <WithTransition\n        name=\"va-modal\"\n        :isTransition=\"!$props.withoutTransitions\"\n        appear\n        :duration=\"300\"\n        v-bind=\"{ ...$attrs, ...teleportedAttrs }\"\n        @beforeEnter=\"onBeforeEnterTransition\"\n        @afterEnter=\"onAfterEnterTransition\"\n        @beforeLeave=\"onBeforeLeaveTransition\"\n        @afterLeave=\"onAfterLeaveTransition\"\n      >\n        <div class=\"va-modal\" :class=\"computedClass\" v-if=\"valueComputed\">\n          <div\n            v-if=\"$props.overlay\"\n            class=\"va-modal__overlay\"\n            :style=\"computedOverlayStyles\"\n            :class=\"computedOverlayClass\"\n          />\n          <div\n            class=\"va-modal__container\"\n            :style=\"computedModalContainerStyle\"\n          >\n            <div\n              ref=\"modalDialog\"\n              class=\"va-modal__dialog\"\n              :style=\"computedDialogStyle\"\n            >\n              <va-icon\n                v-if=\"$props.fullscreen || $props.closeButton\"\n                name=\"va-close\"\n                class=\"va-modal__close\"\n                :class=\"{ 'va-modal__close--fullscreen': $props.fullscreen }\"\n                role=\"button\"\n                :aria-label=\"tp($props.ariaCloseLabel)\"\n                tabindex=\"0\"\n                @click=\"cancel\"\n                @keydown.space=\"cancel\"\n                @keydown.enter=\"cancel\"\n              />\n              <div\n                class=\"va-modal__inner\"\n                :style=\"{ maxWidth: $props.maxWidth, maxHeight: $props.maxHeight }\"\n              >\n                <div v-if=\"$slots.content\">\n                  <slot name=\"content\" v-bind=\"slotBind\" />\n                </div>\n                <template v-if=\"!$slots.content\">\n                  <div\n                    v-if=\"title\"\n                    class=\"va-modal__title\"\n                    :style=\"{ color: getColor('primary') }\"\n                  >\n                    {{ $props.title }}\n                  </div>\n                  <div\n                    v-if=\"$slots.header\"\n                    class=\"va-modal__header\"\n                  >\n                    <slot name=\"header\" v-bind=\"slotBind\" />\n                  </div>\n                  <div\n                    v-if=\"$props.message\"\n                    class=\"va-modal__message\"\n                  >\n                    {{ $props.message }}\n                  </div>\n                  <div\n                    v-if=\"$slots.default\"\n                    class=\"va-modal__message\"\n                  >\n                    <slot v-bind=\"slotBind\" />\n                  </div>\n                  <div\n                    v-if=\"($props.cancelText || $props.okText) && !$props.hideDefaultActions\"\n                    class=\"va-modal__footer\"\n                  >\n                    <va-button\n                      v-if=\"$props.cancelText\"\n                      preset=\"secondary\"\n                      color=\"secondary\"\n                      class=\"va-modal__default-cancel-button\"\n                      @click=\"cancel\"\n                    >\n                      {{ tp($props.cancelText) }}\n                    </va-button>\n                    <va-button @click=\"ok\">\n                      {{ tp($props.okText) }}\n                    </va-button>\n                  </div>\n                  <div\n                    v-if=\"$slots.footer\"\n                    class=\"va-modal__footer\"\n                  >\n                    <slot name=\"footer\" v-bind=\"slotBind\" />\n                  </div>\n                </template>\n              </div>\n            </div>\n          </div>\n        </div>\n      </WithTransition>\n    </teleport>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport type { PropType, StyleValue } from 'vue'\nimport {\n  Transition,\n  h,\n  defineComponent,\n  computed,\n  shallowRef,\n  toRef,\n  watchEffect,\n  onMounted,\n  nextTick, watch,\n} from 'vue'\n\nimport {\n  useStateful, useStatefulProps, useStatefulEmits,\n  useColors, useTextColor,\n  useWindow,\n  useComponentPresetProp,\n  useTrapFocus,\n  useModalLevel,\n  useTranslation,\n  useClickOutside,\n  useDocument,\n  useTeleported,\n} from '../../composables'\n\nimport { VaButton } from '../va-button'\nimport { VaIcon } from '../va-icon'\n\nimport { useBlur } from './hooks/useBlur'\n\nconst WithTransition = defineComponent({\n  name: 'ModalElement',\n  inheritAttrs: false,\n  props: {\n    ...useComponentPresetProp,\n    isTransition: { type: Boolean, default: true },\n  },\n  setup: (props, { slots, attrs }) => () => props.isTransition\n    ? h(Transition, { ...attrs }, slots)\n    : slots.default?.(attrs),\n})\n\nexport default defineComponent({\n  name: 'VaModal',\n  inheritAttrs: false,\n  components: { VaButton, VaIcon, WithTransition },\n  emits: [\n    ...useStatefulEmits,\n    'cancel', 'ok', 'before-open', 'open', 'before-close', 'close', 'click-outside',\n  ],\n  props: {\n    ...useStatefulProps,\n    modelValue: { type: Boolean, default: false },\n    attachElement: { type: String, default: 'body' },\n    allowBodyScroll: { type: Boolean, default: false },\n    disableAttachment: { type: Boolean, default: false },\n    title: { type: String, default: '' },\n    message: { type: String, default: '' },\n    okText: { type: String, default: '$t:ok' },\n    cancelText: { type: String, default: '$t:cancel' },\n    hideDefaultActions: { type: Boolean, default: false },\n    fullscreen: { type: Boolean, default: false },\n    closeButton: { type: Boolean, default: false },\n    mobileFullscreen: { type: Boolean, default: true },\n    noDismiss: { type: Boolean, default: false },\n    noOutsideDismiss: { type: Boolean, default: false },\n    noEscDismiss: { type: Boolean, default: false },\n    maxWidth: { type: String, default: '' },\n    maxHeight: { type: String, default: '' },\n    anchorClass: { type: String },\n    size: {\n      type: String as PropType<'medium' | 'small' | 'large'>,\n      default: 'medium',\n      validator: (value: string) => ['medium', 'small', 'large'].includes(value),\n    },\n    fixedLayout: { type: Boolean, default: false },\n    withoutTransitions: { type: Boolean, default: false },\n    overlay: { type: Boolean, default: true },\n    overlayOpacity: { type: [Number, String], default: 0.6 },\n    showNestedOverlay: { type: Boolean, default: false },\n    blur: { type: Boolean, default: false },\n    zIndex: { type: [Number, String], default: undefined },\n    backgroundColor: { type: String, default: 'background-secondary' },\n    noPadding: { type: Boolean, default: false },\n    beforeClose: { type: Function as PropType<(hide: () => void) => any> },\n    beforeOk: { type: Function as PropType<(hide: () => void) => any> },\n    beforeCancel: { type: Function as PropType<(hide: () => void) => any> },\n    ariaCloseLabel: { type: String, default: '$t:close' },\n  },\n  setup (props, { emit }) {\n    const rootElement = shallowRef<HTMLElement>()\n    const modalDialog = shallowRef<HTMLElement>()\n    const { trapFocusIn, freeFocus } = useTrapFocus()\n\n    const {\n      registerModal,\n      unregisterModal,\n      isTopLevelModal,\n      isLowestLevelModal,\n    } = useModalLevel()\n\n    const { getColor } = useColors()\n    const { textColorComputed } = useTextColor(toRef(props, 'backgroundColor'))\n    const { valueComputed } = useStateful(props, emit)\n\n    const computedClass = computed(() => ({\n      'va-modal--fullscreen': props.fullscreen,\n      'va-modal--mobile-fullscreen': props.mobileFullscreen,\n      'va-modal--fixed-layout': props.fixedLayout,\n      'va-modal--no-padding': props.noPadding,\n      [`va-modal--size-${props.size}`]: props.size !== 'medium',\n    }))\n    const computedModalContainerStyle = computed(() => ({ 'z-index': props.zIndex } as StyleValue))\n    const computedDialogStyle = computed(() => ({\n      maxWidth: props.maxWidth,\n      maxHeight: props.maxHeight,\n      color: textColorComputed.value,\n      background: getColor(props.backgroundColor),\n    }))\n\n    const computedOverlayClass = computed(() => ({\n      'va-modal__overlay--lowest': isLowestLevelModal.value,\n      'va-modal__overlay--top': isTopLevelModal.value,\n    }))\n\n    const getOverlayOpacity = () => {\n      if (props.showNestedOverlay && !isLowestLevelModal.value) {\n        return 'var(--va-modal-overlay-nested-opacity)'\n      }\n      return 'var(--va-modal-overlay-opacity)'\n    }\n\n    const computedOverlayStyles = computed(() => {\n      if (!props.overlay) { return }\n\n      if (isTopLevelModal.value || props.showNestedOverlay) {\n        return {\n          'background-color': 'var(--va-modal-overlay-color)',\n          opacity: getOverlayOpacity(),\n          'z-index': props.zIndex && Number(props.zIndex) - 1,\n        } as StyleValue\n      }\n      return ''\n    })\n\n    const show = () => { valueComputed.value = true }\n    const hide = (cb?: () => void) => {\n      const _hide = () => {\n        valueComputed.value = false\n        cb?.()\n      }\n      props.beforeClose ? props.beforeClose(_hide) : _hide()\n    }\n    const toggle = () => { valueComputed.value = !valueComputed.value }\n    const cancel = () => {\n      const _hide = () => {\n        hide(() => emit('cancel'))\n      }\n      props.beforeCancel ? props.beforeCancel(_hide) : _hide()\n    }\n    const ok = () => {\n      const _hide = () => {\n        hide(() => emit('ok'))\n      }\n      props.beforeOk ? props.beforeOk(_hide) : _hide()\n    }\n    const trapFocusInModal = () => {\n      nextTick(() => { // trapFocusIn use querySelector, so need nextTick, to be sure, that DOM has been updated after modal has been opened\n        if (modalDialog.value) {\n          trapFocusIn(modalDialog.value)\n        }\n      })\n    }\n\n    const onBeforeEnterTransition = (el: HTMLElement) => emit('before-open', el)\n    const onAfterEnterTransition = (el: HTMLElement) => emit('open', el)\n    const onBeforeLeaveTransition = (el: HTMLElement) => emit('before-close', el)\n    const onAfterLeaveTransition = (el: HTMLElement) => emit('close', el)\n\n    const listenKeyUp = (e: KeyboardEvent) => {\n      const hideModal = () => {\n        if (e.code === 'Escape' && !props.noEscDismiss && !props.noDismiss && isTopLevelModal.value) {\n          cancel()\n        }\n      }\n\n      setTimeout(hideModal)\n    }\n\n    useClickOutside([modalDialog], () => {\n      if (!valueComputed.value || props.noOutsideDismiss || props.noDismiss || !isTopLevelModal.value) { return }\n\n      emit('click-outside')\n      cancel()\n    })\n\n    const window = useWindow()\n\n    watchEffect(() => {\n      if (valueComputed.value) {\n        window.value?.addEventListener('keyup', listenKeyUp)\n      } else {\n        window.value?.removeEventListener('keyup', listenKeyUp)\n      }\n    })\n\n    useBlur(toRef(props, 'blur'), valueComputed)\n\n    const documentRef = useDocument()\n    const setBodyOverflow = (overflow: string) => {\n      if (!documentRef.value || props.allowBodyScroll) { return }\n\n      documentRef.value.body.style.overflow = overflow\n    }\n\n    watch(valueComputed, newValueComputed => { // watch for open/close modal\n      if (newValueComputed) {\n        registerModal()\n        setBodyOverflow('hidden')\n        return\n      }\n\n      if (isLowestLevelModal.value) {\n        freeFocus()\n        setBodyOverflow('')\n      }\n      unregisterModal()\n    })\n\n    watch(isTopLevelModal, newIsTopLevelModal => {\n      if (newIsTopLevelModal) {\n        trapFocusInModal()\n      }\n    })\n\n    onMounted(() => {\n      if (valueComputed.value) { // case when open modal with this.$vaModal.init\n        registerModal()\n      }\n    })\n\n    const publicMethods = {\n      ...useTranslation(),\n      show,\n      hide,\n      toggle,\n      cancel,\n      ok,\n      onBeforeEnterTransition,\n      onAfterEnterTransition,\n      onBeforeLeaveTransition,\n      onAfterLeaveTransition,\n      listenKeyUp,\n    }\n\n    return {\n      isLowestLevelModal,\n      isTopLevelModal,\n      computedOverlayClass,\n      getColor,\n      rootElement,\n      modalDialog,\n      valueComputed,\n      computedClass,\n      computedDialogStyle,\n      computedModalContainerStyle,\n      computedOverlayStyles,\n      slotBind: { show, hide, toggle, cancel, ok },\n      ...publicMethods,\n      ...useTeleported(),\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-modal-overlay-background--blurred > :not(div[class*=\"va-\"]) {\n  filter: blur(var(--va-modal-overlay-background-blur-radius));\n  position: absolute;\n  height: 100%;\n  width: 100%;\n}\n\n.va-modal {\n  position: var(--va-modal-position);\n  display: var(--va-modal-display);\n  align-items: var(--va-modal-align-items);\n  justify-content: var(--va-modal-justify-content);\n  width: var(--va-modal-width);\n  height: var(--va-modal-height);\n  top: var(--va-modal-top);\n  left: var(--va-modal-left);\n  overflow: var(--va-modal-overflow);\n  outline: var(--va-modal-outline);\n  z-index: var(--va-modal-z-index);\n  font-family: var(--va-font-family);\n\n  &__title {\n    margin-bottom: 1.5rem;\n\n    @include va-title();\n  }\n\n  &__container {\n    z-index: var(--va-modal-container-z-index);\n    max-width: 100%;\n  }\n\n  &-enter-from &__container,\n  &-leave-to &__container {\n    opacity: 0;\n    transform: translateY(-30%);\n  }\n\n  &-enter-active &__container,\n  &-leave-active &__container {\n    transition: opacity var(--va-modal-opacity-transition), transform var(--va-modal-transform-transition);\n  }\n\n  &__dialog {\n    min-height: var(--va-modal-dialog-min-height);\n    height: var(--va-modal-dialog-height);\n    border-radius: var(--va-modal-dialog-border-radius, var(--va-block-border-radius));\n    margin: var(--va-modal-dialog-margin);\n    box-shadow: var(--va-modal-dialog-box-shadow, var(--va-block-box-shadow));\n    max-width: var(--va-modal-dialog-max-width);\n    max-height: var(--va-modal-dialog-max-height);\n    position: var(--va-modal-dialog-position);\n    overflow: auto;\n  }\n\n  &__overlay {\n    position: var(--va-modal-overlay-position);\n    top: var(--va-modal-overlay-top);\n    left: var(--va-modal-overlay-left);\n    z-index: var(--va-modal-overlay-z-index);\n    width: var(--va-modal-overlay-width);\n    height: var(--va-modal-overlay-height);\n    will-change: opacity;\n  }\n\n  &-enter-from,\n  &-leave-to {\n    .va-modal__overlay--lowest {\n      opacity: 0 !important;\n    }\n  }\n\n  &-leave-active,\n  &-enter-active {\n    .va-modal__overlay.va-modal__overlay--lowest {\n      transition: opacity var(--va-modal-opacity-transition);\n    }\n  }\n\n  &-leave-active {\n    .va-modal__overlay:not(.va-modal__overlay--lowest) {\n      display: none;\n    }\n  }\n\n  &--fullscreen {\n    .va-modal__dialog {\n      min-width: 100vw !important;\n      max-width: 100vw;\n      min-height: 100vh !important;\n      border-radius: 0;\n      margin: 0;\n    }\n  }\n\n  &--mobile-fullscreen {\n    .va-modal__dialog {\n      @media all and (max-width: map-get($grid-breakpoints, sm)) {\n        margin: 0 !important;\n        min-width: 100vw !important;\n        min-height: 100vh !important;\n        border-radius: 0;\n      }\n    }\n  }\n\n  &--size {\n    &-small {\n      .va-modal__dialog {\n        max-width: map_get($grid-breakpoints, sm);\n\n        @media all and (max-width: map-get($grid-breakpoints, sm)) {\n          max-width: 100vw !important;\n        }\n\n        .va-modal__inner {\n          max-width: map_get($grid-breakpoints, sm);\n\n          @media all and (max-width: map-get($grid-breakpoints, sm)) {\n            max-width: 100vw !important;\n          }\n        }\n      }\n    }\n\n    &-large {\n      .va-modal__dialog {\n        max-width: map-get($grid-breakpoints, lg);\n\n        .va-modal__inner {\n          max-width: map-get($grid-breakpoints, lg);\n        }\n      }\n    }\n  }\n\n  &--fixed-layout {\n    .va-modal__inner {\n      overflow: hidden;\n      padding: var(--va-modal-padding-top) 0 var(--va-modal-padding-bottom);\n      max-height: calc(100vh - 2rem);\n\n      .va-modal__header,\n      .va-modal__footer,\n      .va-modal__title {\n        padding: 0 var(--va-modal-padding-right) 0 var(--va-modal-padding-left);\n      }\n\n      .va-modal__message {\n        padding: 0 var(--va-modal-padding-right) 0 var(--va-modal-padding-left);\n        overflow: auto;\n      }\n    }\n\n    .va-modal__dialog {\n      overflow: hidden;\n    }\n  }\n\n  &--no-padding {\n    .va-modal__inner {\n      padding: 0;\n    }\n  }\n\n  &__message {\n    margin-bottom: 1.5rem;\n  }\n\n  &__inner {\n    overflow: auto;\n    display: flex;\n    position: relative;\n    flex-flow: column;\n    padding: var(--va-modal-padding);\n    max-width: map_get($grid-breakpoints, md);\n    margin: auto;\n\n    > div:last-of-type {\n      margin-bottom: 0;\n    }\n  }\n\n  &__close {\n    position: absolute;\n    top: 1rem;\n    right: 1rem;\n    cursor: pointer;\n    font-size: 1.5rem;\n    font-style: normal;\n    color: var(--va-secondary);\n    z-index: 1;\n\n    &--fullscreen {\n      position: fixed;\n    }\n  }\n\n  &__default-cancel-button {\n    margin-right: 0.75rem;\n  }\n\n  &__footer {\n    margin-top: auto;\n    min-height: fit-content;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: var(--va-modal-footer-justify-content);\n\n    &:last-of-type {\n      margin-bottom: 0;\n    }\n  }\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport _VaModal from './VaModal.vue'\n\nexport const VaModal = withConfigTransport(_VaModal)\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}