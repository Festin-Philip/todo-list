{"ast":null,"code":"const unwrapEl = el => {\n  if (!el) {\n    return;\n  }\n  if (typeof el !== \"object\") {\n    return;\n  }\n  if (typeof el.$el !== \"undefined\") {\n    return el.$el;\n  }\n  return el;\n};\nexport { unwrapEl as u };","map":{"version":3,"names":["unwrapEl","el","$el"],"sources":["../../../../src/utils/unwrapEl.ts"],"sourcesContent":["import { Component, ComponentPublicInstance } from 'vue'\n\n/**\n * Used to get the HTMLElement from template refs.\n * @param el component, dom element or nothing\n * @returns HTMLElement or undefined\n */\nexport const unwrapEl = <T extends HTMLElement | ComponentPublicInstance | Component | undefined | null>(el: T) => {\n  if (!el) { return }\n  if (typeof el !== 'object') { return }\n\n  if (typeof (el as ComponentPublicInstance).$el !== 'undefined') {\n    return (el as ComponentPublicInstance).$el as HTMLElement\n  }\n\n  return el as HTMLElement\n}\n"],"mappings":"AAOa,MAAAA,QAAA,GAA4FC,EAAA,IAAU;EACjH,IAAI,CAACA,EAAA,EAAI;IAAE;EAAO;EACd,WAAOA,EAAA,KAAO,UAAU;IAAE;EAAO;EAEjC,WAAQA,EAAA,CAA+BC,GAAA,KAAQ,aAAa;IAC9D,OAAQD,EAAA,CAA+BC,GAAA;EACzC;EAEO,OAAAD,EAAA;AACT"},"metadata":{},"sourceType":"module","externalDependencies":[]}