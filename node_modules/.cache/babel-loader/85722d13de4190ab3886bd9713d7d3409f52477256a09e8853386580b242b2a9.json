{"ast":null,"code":"import { _ as _sfc_main } from \"./VaSelectContent.vue_vue_type_script_lang-4c518def.mjs\";\nimport { resolveComponent, openBlock, createElementBlock, Fragment, renderSlot, normalizeProps, mergeProps, renderList, createBlock, createCommentVNode, createTextVNode, toDisplayString, withDirectives, createElementVNode, withKeys, withModifiers, vModelDynamic, guardReactiveProps } from \"vue\";\nimport { _ as _export_sfc } from \"../../../../../plugin-vue_export-helper-cc2b3d55.mjs\";\nconst VaSelectContent_vue_vue_type_style_index_0_lang = \"\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"va-select-content__autocomplete\"\n};\nconst _hoisted_2 = [\"placeholder\", \"disabled\", \"readonly\"];\nconst _hoisted_3 = {\n  key: 1,\n  class: \"va-select-content__placeholder\"\n};\nconst _hoisted_4 = [\"placeholder\"];\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_va_icon = resolveComponent(\"va-icon\");\n  const _component_va_badge = resolveComponent(\"va-badge\");\n  return openBlock(), createElementBlock(Fragment, null, [_ctx.$props.autocomplete ? (openBlock(), createElementBlock(\"div\", _hoisted_1, [_ctx.$props.multiple || _ctx.$slots.content ? renderSlot(_ctx.$slots, \"content\", normalizeProps(mergeProps({\n    key: 0\n  }, {\n    value: _ctx.$props.value,\n    valueString: _ctx.$props.valueString,\n    tabindex: _ctx.$props.tabindex,\n    ariaAttributes: _ctx.ariaAttributes\n  })), () => [_ctx.value.length ? (openBlock(true), createElementBlock(Fragment, {\n    key: 0\n  }, renderList(_ctx.value, (option, index) => {\n    return openBlock(), createElementBlock(\"span\", {\n      key: _ctx.$props.getText(option)\n    }, [_ctx.getIcon(option) ? (openBlock(), createBlock(_component_va_icon, {\n      key: 0,\n      size: \"small\",\n      class: \"va-select-option__icon\",\n      name: _ctx.getIcon(option)\n    }, null, 8, [\"name\"])) : createCommentVNode(\"\", true), createTextVNode(\" \" + toDisplayString(`${_ctx.$props.getText(option)}${index + 1 === _ctx.value.length ? \"\" : \", \"}`), 1)]);\n  }), 128)) : (openBlock(), createElementBlock(Fragment, {\n    key: 1\n  }, [createTextVNode(toDisplayString(_ctx.$props.valueString), 1)], 64))]) : createCommentVNode(\"\", true), withDirectives(createElementVNode(\"input\", mergeProps(_ctx.ariaAttributes, {\n    ref: \"autocompleteInput\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.autocompleteInputValueComputed = $event),\n    placeholder: _ctx.$props.placeholder,\n    disabled: _ctx.$props.disabled,\n    readonly: _ctx.$props.readonly,\n    autocomplete: \"off\",\n    \"aria-autocomplete\": \"list\",\n    onKeydown: [_cache[1] || (_cache[1] = withKeys(withModifiers($event => _ctx.$emit(\"focus-prev\"), [\"stop\", \"prevent\"]), [\"up\"])), _cache[2] || (_cache[2] = withKeys(withModifiers($event => _ctx.$emit(\"focus-next\"), [\"stop\", \"prevent\"]), [\"down\"])), _cache[3] || (_cache[3] = withKeys(withModifiers($event => _ctx.$emit(\"select-option\"), [\"stop\", \"prevent\"]), [\"enter\"])), _cache[4] || (_cache[4] = (...args) => _ctx.handleBackspace && _ctx.handleBackspace(...args))]\n  }), null, 16, _hoisted_2), [[vModelDynamic, _ctx.autocompleteInputValueComputed]])])) : _ctx.isPlaceholder ? (openBlock(), createElementBlock(\"span\", _hoisted_3, [createElementVNode(\"input\", mergeProps(_ctx.ariaAttributes, {\n    placeholder: _ctx.$props.placeholder,\n    readonly: \"\"\n  }), null, 16, _hoisted_4)])) : renderSlot(_ctx.$slots, \"content\", normalizeProps(mergeProps({\n    key: 2\n  }, {\n    valueString: _ctx.$props.valueString,\n    value: _ctx.$props.value,\n    tabindex: _ctx.$props.tabindex,\n    ariaAttributes: _ctx.ariaAttributes\n  })), () => [_ctx.getIcon(_ctx.value[0]) ? (openBlock(), createBlock(_component_va_icon, {\n    key: 0,\n    size: \"small\",\n    class: \"va-select-option__icon\",\n    name: _ctx.getIcon(_ctx.value[0])\n  }, null, 8, [\"name\"])) : createCommentVNode(\"\", true), createTextVNode(\" \" + toDisplayString(_ctx.$props.valueString), 1)]), renderSlot(_ctx.$slots, \"hiddenOptionsBadge\", normalizeProps(guardReactiveProps({\n    amount: _ctx.$props.hiddenSelectedOptionsAmount,\n    isShown: _ctx.$props.isAllOptionsShown,\n    toggle: _ctx.toggleHiddenOptionsState\n  })), () => [_ctx.$props.hiddenSelectedOptionsAmount && !_ctx.$props.isAllOptionsShown ? (openBlock(), createBlock(_component_va_badge, {\n    key: 0,\n    class: \"va-select-content__state-icon\",\n    color: \"info\",\n    text: `+${_ctx.$props.hiddenSelectedOptionsAmount}`,\n    tabindex: _ctx.$props.tabindex,\n    onClick: withModifiers(_ctx.toggleHiddenOptionsState, [\"stop\"])\n  }, null, 8, [\"text\", \"tabindex\", \"onClick\"])) : createCommentVNode(\"\", true)]), renderSlot(_ctx.$slots, \"hideOptionsButton\", normalizeProps(guardReactiveProps({\n    isShown: _ctx.$props.isAllOptionsShown,\n    toggle: _ctx.toggleHiddenOptionsState\n  })), () => [_ctx.$props.isAllOptionsShown ? (openBlock(), createBlock(_component_va_icon, {\n    key: 0,\n    role: \"button\",\n    class: \"va-select-content__state-icon\",\n    size: \"small\",\n    name: \"reply\",\n    tabindex: _ctx.$props.tabindex,\n    onClick: withModifiers(_ctx.toggleHiddenOptionsState, [\"stop\"])\n  }, null, 8, [\"tabindex\", \"onClick\"])) : createCommentVNode(\"\", true)])], 64);\n}\nconst _VaSelectContent = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { _VaSelectContent as _ };\nimport '../../../../../VaSelectContent.css';","map":{"version":3,"names":["_hoisted_1","key","class","_hoisted_3","openBlock","createElementBlock","Fragment","_ctx","$props","autocomplete","multiple","$slots","content","renderSlot","normalizeProps","mergeProps","value","valueString","tabindex","ariaAttributes","length","renderList","option","index","getText","getIcon","createBlock","_component_va_icon","size","name","createCommentVNode","createTextVNode","toDisplayString","withDirectives","createElementVNode","ref","_cache","$event","autocompleteInputValueComputed","placeholder","disabled","readonly","onKeydown","$emit","withKeys","withModifiers","args","handleBackspace","isPlaceholder","_hoisted_4","guardReactiveProps","amount","hiddenSelectedOptionsAmount","isShown","isAllOptionsShown","toggle","toggleHiddenOptionsState","_component_va_badge","color","text","onClick","role"],"sources":["../../../../../../../src/components/va-select/components/VaSelectContent/VaSelectContent.vue"],"sourcesContent":["<template>\n  <div\n    v-if=\"$props.autocomplete\"\n    class=\"va-select-content__autocomplete\"\n  >\n    <slot\n      v-if=\"$props.multiple || $slots.content\"\n      name=\"content\"\n      v-bind=\"{\n        value: $props.value,\n        valueString: $props.valueString,\n        tabindex: $props.tabindex,\n        ariaAttributes,\n      }\"\n    >\n      <template v-if=\"value.length\">\n        <span\n          v-for=\"(option, index) in value\"\n          :key=\"$props.getText(option)\"\n        >\n          <va-icon\n            v-if=\"getIcon(option)\"\n            size=\"small\"\n            class=\"va-select-option__icon\"\n            :name=\"getIcon(option)\"\n          />\n          {{ `${$props.getText(option)}${index + 1 === value.length ? '' : ', '}` }}\n        </span>\n      </template>\n\n      <template v-else>\n        {{ $props.valueString }}\n      </template>\n    </slot>\n\n    <input\n      v-bind=\"ariaAttributes\"\n      ref=\"autocompleteInput\"\n      v-model=\"autocompleteInputValueComputed\"\n      :placeholder=\"$props.placeholder\"\n      :disabled=\"$props.disabled\"\n      :readonly=\"$props.readonly\"\n      autocomplete=\"off\"\n      aria-autocomplete=\"list\"\n      @keydown.up.stop.prevent=\"$emit('focus-prev')\"\n      @keydown.down.stop.prevent=\"$emit('focus-next')\"\n      @keydown.enter.stop.prevent=\"$emit('select-option')\"\n      @keydown=\"handleBackspace\"\n    />\n  </div>\n\n  <span\n    v-else-if=\"isPlaceholder\"\n    class=\"va-select-content__placeholder\"\n  >\n   <input v-bind=\"ariaAttributes\" :placeholder=\"$props.placeholder\" readonly />\n  </span>\n\n  <slot\n    v-else\n    name=\"content\"\n    v-bind=\"{\n      valueString: $props.valueString,\n      value: $props.value,\n      tabindex: $props.tabindex,\n      ariaAttributes,\n    }\"\n  >\n    <va-icon\n      v-if=\"getIcon(value[0])\"\n      size=\"small\"\n      class=\"va-select-option__icon\"\n      :name=\"getIcon(value[0])\"\n    />\n    {{ $props.valueString }}\n  </slot>\n\n  <slot\n    name=\"hiddenOptionsBadge\"\n    v-bind=\"{\n      amount: $props.hiddenSelectedOptionsAmount,\n      isShown: $props.isAllOptionsShown,\n      toggle: toggleHiddenOptionsState,\n    }\"\n  >\n    <va-badge\n      v-if=\"$props.hiddenSelectedOptionsAmount && !$props.isAllOptionsShown\"\n      class=\"va-select-content__state-icon\"\n      color=\"info\"\n      :text=\"`+${$props.hiddenSelectedOptionsAmount}`\"\n      :tabindex=\"$props.tabindex\"\n      @click.stop=\"toggleHiddenOptionsState\"\n    />\n  </slot>\n\n  <slot\n    name=\"hideOptionsButton\"\n    v-bind=\"{\n      isShown: $props.isAllOptionsShown,\n      toggle: toggleHiddenOptionsState,\n    }\"\n  >\n    <va-icon\n      v-if=\"$props.isAllOptionsShown\"\n      role=\"button\"\n      class=\"va-select-content__state-icon\"\n      size=\"small\"\n      name=\"reply\"\n      :tabindex=\"$props.tabindex\"\n      @click.stop=\"toggleHiddenOptionsState\"\n    />\n  </slot>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, toRefs, computed, watch, type PropType } from 'vue'\n\nimport { useFormFieldProps } from '../../../../composables'\n\nimport { VaIcon } from '../../../va-icon'\nimport { VaBadge } from '../../../va-badge'\n\nimport type { SelectOption } from '../../../index'\n\nexport default defineComponent({\n  name: 'VaSelectContent',\n\n  components: { VaBadge, VaIcon },\n\n  props: {\n    ...useFormFieldProps,\n\n    ariaAttributes: { type: Object },\n    value: { type: Array as PropType<SelectOption[]>, required: true },\n    valueString: { type: String },\n    placeholder: { type: String, default: '' },\n    tabindex: { type: [String, Number], default: 0 },\n    hiddenSelectedOptionsAmount: { type: Number, default: 0 },\n    isAllOptionsShown: { type: Boolean, default: false },\n    autocomplete: { type: Boolean, default: false },\n    focused: { type: Boolean, default: false },\n    multiple: { type: Boolean, default: false },\n    getText: { type: Function as PropType<(option: SelectOption) => string>, required: true },\n    autocompleteInputValue: { type: String, default: '' },\n  },\n\n  emits: ['toggle-hidden', 'autocomplete-input', 'focus-prev', 'focus-next', 'select-option', 'delete-last-selected'],\n\n  setup (props, { emit }) {\n    const autocompleteInput = ref<HTMLInputElement>()\n\n    const isPlaceholder = computed(() => props.placeholder && !props.valueString)\n\n    const toggleHiddenOptionsState = () => emit('toggle-hidden')\n\n    const { value, focused } = toRefs(props)\n\n    const autocompleteInputValueComputed = computed({\n      get: () => props.autocompleteInputValue,\n      set: (v: string) => emit('autocomplete-input', v),\n    })\n\n    watch(focused, (newValue) => {\n      if (!props.autocomplete || !newValue) { return }\n\n      if (autocompleteInputValueComputed.value) {\n        // native select method doesn't work in mobile Safari, so we need this instead\n        autocompleteInput.value?.setSelectionRange(0, autocompleteInputValueComputed.value.length)\n      } else {\n        autocompleteInput.value?.focus()\n      }\n    })\n\n    const handleBackspace = (e: KeyboardEvent) => {\n      if (props.multiple && value.value.length && e.key === 'Backspace' && !autocompleteInputValueComputed.value) {\n        emit('delete-last-selected')\n      }\n    }\n\n    return {\n      getIcon: (option: SelectOption) => typeof option === 'object' ? (option.icon as string) : undefined,\n      isPlaceholder,\n      toggleHiddenOptionsState,\n      autocompleteInputValueComputed,\n      autocompleteInput,\n      handleBackspace,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import '../../variables';\n\n.va-select-content {\n  &__autocomplete {\n    display: flex;\n    flex-wrap: wrap;\n    gap: var(--va-select-content-autocomplete-gap);\n    color: var(--va-select-content-autocomplete-color);\n    font-size: var(--va-input-font-size);\n    line-height: var(--va-select-content-autocomplete-line-height);\n\n    & input {\n      flex: 1 1;\n    }\n  }\n\n  &__placeholder {\n    overflow: hidden !important;\n    flex: 1;\n    line-height: normal;\n    color: var(--va-input-placeholder-text-color);\n    text-overflow: ellipsis !important;\n    white-space: nowrap !important;\n  }\n\n  &__state-icon {\n    margin-left: var(--va-select-state-icon-margin-left);\n  }\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}