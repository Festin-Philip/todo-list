{"ast":null,"code":"import { defineComponent, computed } from \"vue\";\nimport { p as pick } from \"../../../vendor-2b2dbafd.mjs\";\nimport { V as VaInputLabel } from \"./components/VaInputLabel-cf589fec.mjs\";\nimport { V as VaIcon } from \"../va-icon/index-e46b09d5.mjs\";\nimport { u as useInputFieldAriaProps, a as useInputFieldAria } from \"./hooks/useInputFieldAria-d9d14a85.mjs\";\nimport { W as WithSlotInheritance } from \"../../utils/with-slot-inheritance/with-slot-inheritance-0b6e7cab.mjs\";\nimport { V as VaMessageList } from \"../va-message-list/VaMessageList-7c63d284.mjs\";\nimport { u as useFormFieldProps } from \"../../composables/useFormField-3d39d61a.mjs\";\nimport { u as useSyncProp } from \"../../composables/useSyncProp-326abeda.mjs\";\nimport { u as useFocusDeep } from \"../../composables/useFocusDeep-c586baa6.mjs\";\nimport { e as extractComponentProps } from \"../../utils/component-options/extract-component-options-6b96d215.mjs\";\nimport { u as useComponentPresetProp } from \"../../composables/useComponentPreset-0dfbd395.mjs\";\nimport { u as useValidationProps } from \"../../composables/useValidation-d5e122b8.mjs\";\nimport { u as useColors } from \"../../composables/useColors-b582f249.mjs\";\nimport { u as useBem } from \"../../composables/useBem-33d80128.mjs\";\nimport { u as useTextColor } from \"../../composables/useTextColor-48b60d5c.mjs\";\nimport { f as filterComponentProps } from \"../../utils/component-options/filter-props-9727421a.mjs\";\nconst VaInputLabelProps = extractComponentProps(VaInputLabel);\nconst _sfc_main = defineComponent({\n  name: \"VaInputWrapper\",\n  components: {\n    VaMessageList: WithSlotInheritance(VaMessageList),\n    VaIcon,\n    VaInputLabel\n  },\n  props: {\n    ...useComponentPresetProp,\n    ...useInputFieldAriaProps,\n    ...useFormFieldProps,\n    ...useValidationProps,\n    ...VaInputLabelProps,\n    modelValue: {\n      type: null,\n      default: \"\"\n    },\n    counter: {\n      type: Boolean\n    },\n    maxLength: {\n      type: Number,\n      default: void 0\n    },\n    label: {\n      type: String,\n      default: \"\"\n    },\n    placeholder: {\n      type: String,\n      default: \"\"\n    },\n    color: {\n      type: String,\n      default: \"primary\"\n    },\n    background: {\n      type: String\n    },\n    error: {\n      type: Boolean,\n      default: false\n    },\n    success: {\n      type: Boolean,\n      default: false\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    requiredMark: {\n      type: Boolean,\n      default: false\n    },\n    innerLabel: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: [\"click\", \"click-prepend\", \"click-append\", \"click-prepend-inner\", \"click-append-inner\", \"update:modelValue\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const {\n      getColor\n    } = useColors();\n    const [vModel] = useSyncProp(\"modelValue\", props, emit, \"\");\n    const isFocused = useFocusDeep();\n    const counterValue = computed(() => props.counter && typeof vModel.value === \"string\" ? vModel.value.length : void 0);\n    const wrapperClass = useBem(\"va-input-wrapper\", () => ({\n      ...pick(props, [\"success\", \"error\", \"disabled\", \"readonly\"]),\n      focused: Boolean(isFocused.value),\n      labeled: Boolean(props.label || slots.label),\n      labeledInner: Boolean(props.label || slots.label) && props.innerLabel\n    }));\n    const colorComputed = computed(() => getColor(props.color));\n    const backgroundComputed = computed(() => props.background ? getColor(props.background) : \"#ffffff00\");\n    const messagesComputed = computed(() => props.error ? props.errorMessages : props.messages);\n    const {\n      textColorComputed\n    } = useTextColor(backgroundComputed);\n    const messagesColor = computed(() => {\n      if (props.error) {\n        return \"danger\";\n      }\n      if (props.success) {\n        return \"success\";\n      }\n      return \"\";\n    });\n    const errorLimit = computed(() => props.error ? Number(props.errorCount) : 99);\n    const isCounterVisible = computed(() => counterValue.value !== void 0);\n    const counterComputed = computed(() => props.maxLength !== void 0 ? `${counterValue.value}/${props.maxLength}` : counterValue.value);\n    return {\n      ...useInputFieldAria(props),\n      vModel,\n      counterValue,\n      vaInputLabelProps: filterComponentProps(VaInputLabelProps),\n      wrapperClass,\n      textColorComputed,\n      isCounterVisible,\n      counterComputed,\n      colorComputed,\n      backgroundComputed,\n      messagesColor,\n      messagesComputed,\n      errorLimit\n    };\n  },\n  methods: {\n    focus() {\n      this.$el.focus();\n    },\n    blur() {\n      this.$el.blur();\n    }\n  }\n});\nexport { _sfc_main as _ };","map":{"version":3,"names":["VaInputLabelProps","extractComponentProps","VaInputLabel","_sfc_main","defineComponent","name","components","VaMessageList","WithSlotInheritance","VaIcon","props","useComponentPresetProp","useInputFieldAriaProps","useFormFieldProps","useValidationProps","modelValue","type","default","counter","Boolean","maxLength","Number","label","String","placeholder","color","background","error","success","loading","requiredMark","innerLabel","emits","setup","emit","slots","getColor","useColors","vModel","useSyncProp","isFocused","useFocusDeep","counterValue","computed","value","length","wrapperClass","useBem","pick","focused","labeled","labeledInner","colorComputed","backgroundComputed","messagesComputed","errorMessages","messages","textColorComputed","useTextColor","messagesColor","errorLimit","errorCount","isCounterVisible","counterComputed","useInputFieldAria","vaInputLabelProps","filterComponentProps","methods","focus","$el","blur"],"sources":["../../../../../src/components/va-input-wrapper/VaInputWrapper.vue"],"sourcesContent":["<template>\n  <div\n    class=\"va-input-wrapper\"\n    :class=\"wrapperClass\"\n    @click=\"$emit('click', $event)\"\n   :style=\"`--va-0-background-computed: ${String(backgroundComputed)};--va-1-color-computed: ${String(colorComputed)};--va-2-text-color-computed: ${String(textColorComputed)}`\">\n    <va-message-list\n      :color=\"messagesColor\"\n      :model-value=\"messagesComputed\"\n      :limit=\"errorLimit\"\n      :inherit-slots=\"['message', 'messages']\"\n    >\n      <template #default=\"{ ariaAttributes: messagesChildAriaAttributes }\">\n        <fieldset class=\"va-input-wrapper__size-keeper\">\n          <VaInputLabel\n            v-if=\"($props.label || $slots.label) && !$props.innerLabel\"\n            class=\"va-input-wrapper__label va-input-wrapper__label--outer\"\n            v-bind=\"vaInputLabelProps\"\n            :id=\"labelId\"\n            #default=\"bind\"\n          >\n            <slot name=\"label\" v-bind=\"bind\" />\n          </VaInputLabel>\n          <div class=\"va-input-wrapper__container\">\n            <div\n              v-if=\"$slots.prepend\"\n              class=\"va-input-wrapper__prepend-inner\"\n              @click=\"$emit('click-prepend')\"\n            >\n              <slot name=\"prepend\" />\n            </div>\n\n            <div class=\"va-input-wrapper__field\">\n              <div\n                v-if=\"$slots.prependInner\"\n                class=\"va-input-wrapper__prepend-inner\"\n                ref=\"container\"\n                @click=\"$emit('click-prepend-inner', $event)\"\n              >\n                <slot name=\"prependInner\" />\n              </div>\n\n              <div class=\"va-input-wrapper__text\">\n                <VaInputLabel\n                  v-if=\"($props.label || $slots.label) && $props.innerLabel\"\n                  class=\"va-input-wrapper__label va-input-wrapper__label--inner\"\n                  v-bind=\"vaInputLabelProps\"\n                  :id=\"labelId\"\n                  #default=\"bind\"\n                >\n                  <slot name=\"label\" v-bind=\"bind\" />\n                </VaInputLabel>\n\n                <slot v-bind=\"{ ariaAttributes: { ...messagesChildAriaAttributes, ...ariaAttributes }, value: vModel }\">\n                  <input v-bind=\"{ ...messagesChildAriaAttributes, ...ariaAttributes }\" v-model=\"vModel\" :placeholder=\"$props.placeholder\" :readonly=\"$props.readonly\" :disabled=\"$props.disabled\" />\n                </slot>\n              </div>\n\n              <va-icon\n                v-if=\"success\"\n                color=\"success\"\n                name=\"va-check-circle\"\n                class=\"va-input-wrapper__icon va-input-wrapper__icon--success\"\n              />\n              <va-icon\n                v-if=\"error\"\n                color=\"danger\"\n                name=\"va-warning\"\n                class=\"va-input-wrapper__icon va-input-wrapper__icon--error\"\n              />\n              <va-icon\n                v-if=\"$props.loading\"\n                :color=\"$props.color\"\n                name=\"va-loading\"\n                spin=\"counter-clockwise\"\n                class=\"va-input-wrapper__icon va-input-wrapper__icon--loading\"\n              />\n              <slot name=\"icon\" />\n\n              <div\n                v-if=\"$slots.appendInner\"\n                class=\"va-input-wrapper__append-inner\"\n                @click=\"$emit('click-append-inner', $event)\"\n              >\n                <slot name=\"appendInner\" />\n              </div>\n            </div>\n\n            <div\n              v-if=\"$slots.append\"\n              class=\"va-input-wrapper__append-inner\"\n              @click=\"$emit('click-append')\"\n            >\n              <slot name=\"append\" />\n            </div>\n          </div>\n\n          <div v-if=\"isCounterVisible\" class=\"va-input-wrapper__counter-wrapper\" :id=\"characterCountId\">\n            <slot name=\"counter\" v-bind=\"{ valueLength: counterValue, maxLength: $props.maxLength }\">\n              <div class=\"va-input-wrapper__counter\">\n                {{ counterComputed }}\n              </div>\n            </slot>\n          </div>\n        </fieldset>\n      </template>\n    </va-message-list>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent } from 'vue'\nimport pick from 'lodash/pick.js'\n\nimport { useBem, useFormFieldProps, useValidationProps, useColors, useTextColor, useComponentPresetProp, useSyncProp, useFocusDeep } from '../../composables'\n\nimport { VaMessageList } from '../va-message-list'\nimport VaInputLabel from './components/VaInputLabel.vue'\nimport { VaIcon } from '../va-icon'\nimport { extractComponentProps, filterComponentProps } from '../../utils/component-options'\n\nimport { useInputFieldAria, useInputFieldAriaProps } from './hooks/useInputFieldAria'\nimport { WithSlotInheritance } from '../../utils/with-slot-inheritance'\n\nconst VaInputLabelProps = extractComponentProps(VaInputLabel)\n\nexport default defineComponent({\n  name: 'VaInputWrapper',\n\n  components: { VaMessageList: WithSlotInheritance(VaMessageList), VaIcon, VaInputLabel },\n\n  props: {\n    ...useComponentPresetProp,\n    ...useInputFieldAriaProps,\n    ...useFormFieldProps,\n    ...useValidationProps,\n    ...VaInputLabelProps,\n    modelValue: { type: null, default: '' },\n    counter: { type: Boolean },\n    maxLength: { type: Number, default: undefined },\n\n    label: { type: String, default: '' },\n    placeholder: { type: String, default: '' },\n    color: { type: String, default: 'primary' },\n    background: { type: String },\n    error: { type: Boolean, default: false },\n    success: { type: Boolean, default: false },\n    loading: { type: Boolean, default: false },\n    requiredMark: { type: Boolean, default: false },\n    innerLabel: { type: Boolean, default: false },\n  },\n\n  emits: [\n    'click',\n    'click-prepend',\n    'click-append',\n    'click-prepend-inner',\n    'click-append-inner',\n    'update:modelValue',\n  ],\n\n  setup (props, { emit, slots }) {\n    const { getColor } = useColors()\n    const [vModel] = useSyncProp('modelValue', props, emit, '')\n\n    const isFocused = useFocusDeep()\n\n    const counterValue = computed(() =>\n      props.counter && typeof vModel.value === 'string' ? vModel.value.length : undefined,\n    )\n\n    const wrapperClass = useBem('va-input-wrapper', () => ({\n      ...pick(props, ['success', 'error', 'disabled', 'readonly']),\n      focused: Boolean(isFocused.value),\n      labeled: Boolean(props.label || slots.label),\n      labeledInner: Boolean(props.label || slots.label) && props.innerLabel,\n    }))\n\n    const colorComputed = computed(() => getColor(props.color))\n    const backgroundComputed = computed(() => props.background ? getColor(props.background) : '#ffffff00')\n    const messagesComputed = computed(() => props.error ? props.errorMessages : props.messages)\n\n    const { textColorComputed } = useTextColor(backgroundComputed)\n\n    const messagesColor = computed(() => {\n      if (props.error) { return 'danger' }\n      if (props.success) { return 'success' }\n      return ''\n    })\n\n    const errorLimit = computed(() => props.error ? Number(props.errorCount) : 99)\n    const isCounterVisible = computed(() => counterValue.value !== undefined)\n    const counterComputed = computed(() =>\n      props.maxLength !== undefined ? `${counterValue.value}/${props.maxLength}` : counterValue.value,\n    )\n\n    return {\n      ...useInputFieldAria(props),\n      vModel,\n      counterValue,\n      vaInputLabelProps: filterComponentProps(VaInputLabelProps),\n      wrapperClass,\n      textColorComputed,\n\n      isCounterVisible,\n      counterComputed,\n      colorComputed,\n      backgroundComputed,\n      messagesColor,\n      messagesComputed,\n      errorLimit,\n    }\n  },\n\n  methods: {\n    focus () { this.$el.focus() },\n    blur () { this.$el.blur() },\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import '../../styles/resources/index.scss';\n@import './variables';\n\n@mixin parentWidthWithDefault {\n  // Following behavior implements similar behavior as <input /> element has.\n  // By default width is set in CSS variable.\n  width: var(--va-input-wrapper-width);\n  // But in case parent element has bigger width, we want to stretch input to parent width (make it bigger).\n  min-width: 100%;\n  // In case parent is smaller that input container, we want to stretch input container to parent width (make it smaller).\n  max-width: 100%;\n}\n\n.va-input-wrapper {\n  --va-input-wrapper-background: var(--va-0-background-computed);\n  --va-input-wrapper-color: var(--va-1-color-computed);\n  --va-input-wrapper-text-color: var(--va-2-text-color-computed);\n\n  cursor: var(--va-input-wrapper-cursor);\n  font-family: var(--va-font-family);\n  display: inline-block;\n  flex-direction: column;\n  vertical-align: middle;\n  min-width: auto;\n  max-width: 100%;\n  flex-grow: 0;\n  flex-shrink: 1;\n\n  &__size-keeper {\n    @include parentWidthWithDefault();\n\n    display: flex;\n    flex-direction: column;\n  }\n\n  &__container {\n    display: flex;\n    align-items: center;\n    gap: var(--va-input-content-items-gap);\n  }\n\n  &__field {\n    position: relative;\n    display: flex;\n    align-items: center;\n    flex: 1;\n    min-height: var(--va-input-wrapper-min-height);\n    border-color: var(--va-input-wrapper-border-color);\n    border-style: solid;\n    border-width: var(--va-input-wrapper-border-width);\n    border-radius: var(--va-input-wrapper-border-radius);\n    padding: 0 var(--va-input-wrapper-horizontal-padding);\n    gap: var(--va-input-wrapper-items-gap);\n    z-index: 0;\n    overflow: hidden;\n    color: var(--va-2-text-color-computed);\n\n    @include va-background(var(--va-input-wrapper-background), var(--va-input-wrapper-background-opacity), -1);\n\n    input,\n    textarea {\n      color: inherit;\n    }\n  }\n\n  & > .va-message-list {\n    margin-top: 2px;\n  }\n\n  &__prepend-inner,\n  &__append-inner {\n    display: flex;\n    justify-content: center;\n    align-content: center;\n    align-items: center;\n  }\n\n  &__text {\n    width: 100%;\n    position: relative;\n    min-height: var(--va-input-line-height);\n    display: flex;\n    align-items: center;\n    overflow: hidden;\n    caret-color: var(--va-input-wrapper-text-color);\n    color: var(--va-input-wrapper-text-color);\n\n    input {\n      @include va-scroll(var(--va-input-scroll-color));\n\n      width: 100%;\n      // Use line-height as min-height for empty content slot\n      min-height: var(--va-input-line-height);\n      background-color: transparent;\n      border-style: none;\n      outline: none;\n      line-height: var(--va-input-line-height);\n      font-size: var(--va-input-font-size);\n      font-family: inherit;\n      font-weight: var(--va-input-font-weight);\n      font-style: var(--va-input-font-style);\n      font-stretch: var(--va-input-font-stretch);\n      letter-spacing: var(--va-input-letter-spacing);\n      cursor: inherit;\n\n      &::placeholder {\n        color: inherit;\n        opacity: 0.5;\n      }\n    }\n  }\n\n  &__icons {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    &__reset {\n      &:focus {\n        @include focus-outline;\n      }\n    }\n  }\n\n  &__counter-wrapper {\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n    color: var(--va-input-wrapper-counter-color);\n    font-size: var(--va-input-wrapper-counter-font-size);\n    line-height: var(--va-input-wrapper-counter-line-height);\n  }\n\n  &__label {\n    max-width: calc(100%);\n    width: 100%;\n    display: block;\n\n    &--inner {\n      position: absolute;\n      left: 0;\n      top: 0;\n      padding-top: 1px;\n    }\n\n    &--outer {\n      margin-bottom: 2px;\n    }\n  }\n\n  // styles\n  &--labeled-inner {\n    .va-input-wrapper__text {\n      height: 100%;\n      padding-top: 12px;\n      box-sizing: content-box;\n    }\n\n    textarea {\n      margin-top: 0;\n    }\n  }\n\n  &--solid {\n    --va-input-wrapper-border-color: var(--va-input-color);\n  }\n\n  &--bordered {\n    .va-input-wrapper__field {\n      border-top-left-radius: var(--va-input-wrapper-border-radius);\n      border-top-right-radius: var(--va-input-wrapper-border-radius);\n      border-bottom-left-radius: 0;\n      border-bottom-right-radius: 0;\n      border-left-width: 0;\n      border-right-width: 0;\n      border-top-width: 0;\n\n      &::after {\n        bottom: 0;\n        border-color: var(--va-input-wrapper-border-color);\n        border-bottom-style: solid;\n      }\n    }\n  }\n\n  // Validations\n  &--error {\n    --va-input-wrapper-border-color: var(--va-input-wrapper-error-background, var(--va-danger));\n    --va-input-wrapper-background: var(--va-input-wrapper-error-background, var(--va-danger));\n    --va-input-wrapper-background-opacity: var(--va-input-wrapper-validation-background-opacity);\n  }\n\n  &--success {\n    --va-input-wrapper-border-color: var(--va-input-wrapper-success-background, var(--va-success));\n    --va-input-wrapper-background: var(--va-input-wrapper-success-background, var(--va-success));\n    --va-input-wrapper-background-opacity: var(--va-input-wrapper-validation-background-opacity);\n  }\n\n  // States\n  &--focused {\n    --va-input-wrapper-border-color: var(--va-input-wrapper-color);\n  }\n\n  &--readonly {\n    cursor: default;\n  }\n\n  &--disabled {\n    @include va-disabled;\n  }\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}