{"ast":null,"code":"import { computed } from \"vue\";\nconst areaIndexes = {\n  top: [0, 1, 2],\n  left: [0, 3, 6],\n  right: [2, 5, 8],\n  bottom: [6, 7, 8]\n};\nconst areaElements = [\"left\", \"right\", \"top\", \"bottom\"];\nconst useGridTemplateArea = props => {\n  const sort = () => {\n    return [...areaElements].sort((a, b) => {\n      return (props[a].order ?? 0) - (props[b].order ?? 0);\n    });\n  };\n  const applyTemplate = (template, areaIndexes2, areaName) => {\n    areaIndexes2.forEach(index => {\n      template[index] = areaName;\n    });\n  };\n  return computed(() => {\n    const sorted = sort();\n    const template = [\".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\"].map(() => \"content\");\n    sorted.forEach(areaName => {\n      applyTemplate(template, areaIndexes[areaName], areaName);\n    });\n    return ['\"' + template.slice(0, 3).join(\" \") + '\"', '\"' + template.slice(3, 6).join(\" \") + '\"', '\"' + template.slice(6, 9).join(\" \") + '\"'].join(\" \");\n  });\n};\nexport { useGridTemplateArea as u };","map":{"version":3,"names":["areaIndexes","top","left","right","bottom","areaElements","useGridTemplateArea","props","sort","a","b","order","applyTemplate","template","areaIndexes2","areaName","forEach","index","computed","sorted","map","slice","join"],"sources":["../../../../../../src/components/va-layout/hooks/useGridTemplateArea.ts"],"sourcesContent":["import { computed } from 'vue'\nimport { type LayoutProps } from './useLayout'\n\nconst areaIndexes = {\n  top: [0, 1, 2],\n  left: [0, 3, 6],\n  right: [2, 5, 8],\n  bottom: [6, 7, 8],\n}\n\nexport type AreaName = 'top' | 'left' | 'right' | 'bottom'\nconst areaElements = (['left', 'right', 'top', 'bottom'] as const)\n\nexport const useGridTemplateArea = (props: LayoutProps) => {\n  const sort = () => {\n    return [...areaElements].sort((a, b) => {\n      return (props[a].order ?? 0) - (props[b].order ?? 0)\n    })\n  }\n\n  const applyTemplate = (template: string[], areaIndexes: number[], areaName: AreaName) => {\n    areaIndexes.forEach((index) => {\n      template[index] = areaName\n    })\n  }\n\n  return computed(() => {\n    const sorted = sort()\n\n    const template = [\n      '.', '.', '.',\n      '.', '.', '.',\n      '.', '.', '.',\n    ].map(() => 'content')\n\n    sorted.forEach((areaName) => {\n      applyTemplate(template, areaIndexes[areaName], areaName)\n    })\n\n    return [\n      '\"' + template.slice(0, 3).join(' ') + '\"',\n      '\"' + template.slice(3, 6).join(' ') + '\"',\n      '\"' + template.slice(6, 9).join(' ') + '\"',\n    ].join(' ')\n  })\n}\n"],"mappings":";AAGA,MAAMA,WAAA,GAAc;EAClBC,GAAA,EAAK,CAAC,GAAG,GAAG,CAAC;EACbC,IAAA,EAAM,CAAC,GAAG,GAAG,CAAC;EACdC,KAAA,EAAO,CAAC,GAAG,GAAG,CAAC;EACfC,MAAA,EAAQ,CAAC,GAAG,GAAG,CAAC;AAClB;AAGA,MAAMC,YAAA,GAAgB,CAAC,QAAQ,SAAS,OAAO,QAAQ;AAE1C,MAAAC,mBAAA,GAAuBC,KAAA,IAAuB;EACzD,MAAMC,IAAA,GAAOA,CAAA,KAAM;IACjB,OAAO,CAAC,GAAGH,YAAY,EAAEG,IAAA,CAAK,CAACC,CAAA,EAAGC,CAAA,KAAM;MAC9B,QAAAH,KAAA,CAAME,CAAC,EAAEE,KAAA,IAAS,MAAMJ,KAAA,CAAMG,CAAC,EAAEC,KAAA,IAAS;IAAA,CACnD;EAAA;EAGH,MAAMC,aAAA,GAAgBA,CAACC,QAAA,EAAoBC,YAAA,EAAuBC,QAAA,KAAuB;IACvFD,YAAA,CAAYE,OAAA,CAASC,KAAA,IAAU;MAC7BJ,QAAA,CAASI,KAAK,IAAIF,QAAA;IAAA,CACnB;EAAA;EAGH,OAAOG,QAAA,CAAS,MAAM;IACpB,MAAMC,MAAA,GAASX,IAAA;IAEf,MAAMK,QAAA,GAAW,CACf,KAAK,KAAK,KACV,KAAK,KAAK,KACV,KAAK,KAAK,KACVO,GAAA,CAAI,MAAM,SAAS;IAEdD,MAAA,CAAAH,OAAA,CAASD,QAAA,IAAa;MAC3BH,aAAA,CAAcC,QAAA,EAAUb,WAAA,CAAYe,QAAQ,GAAGA,QAAQ;IAAA,CACxD;IAEM,QACL,MAAMF,QAAA,CAASQ,KAAA,CAAM,GAAG,CAAC,EAAEC,IAAA,CAAK,GAAG,IAAI,KACvC,MAAMT,QAAA,CAASQ,KAAA,CAAM,GAAG,CAAC,EAAEC,IAAA,CAAK,GAAG,IAAI,KACvC,MAAMT,QAAA,CAASQ,KAAA,CAAM,GAAG,CAAC,EAAEC,IAAA,CAAK,GAAG,IAAI,KACvCA,IAAA,CAAK,GAAG;EAAA,CACX;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}