{"ast":null,"code":"import { ref, watchEffect } from \"vue\";\nimport { u as useResizeObserver } from \"./useResizeObserver-97916f85.mjs\";\nconst useElementWidth = el => {\n  const width = ref(null);\n  useResizeObserver([el], () => {\n    var _a;\n    width.value = ((_a = el.value) == null ? void 0 : _a.clientWidth) ?? null;\n  });\n  watchEffect(() => {\n    var _a;\n    width.value = ((_a = el.value) == null ? void 0 : _a.clientWidth) ?? null;\n  });\n  return width;\n};\nexport { useElementWidth as u };","map":{"version":3,"names":["useElementWidth","el","width","ref","useResizeObserver","value","_a","clientWidth","watchEffect"],"sources":["../../../../src/composables/useElementWidth.ts"],"sourcesContent":["import { Ref, ref, watchEffect } from 'vue'\nimport { useResizeObserver } from './useResizeObserver'\n\nexport const useElementWidth = (el: Ref<HTMLElement | undefined>) => {\n  const width = ref<null | number>(null)\n\n  useResizeObserver([el], () => {\n    width.value = el.value?.clientWidth ?? null\n  })\n\n  watchEffect(() => {\n    width.value = el.value?.clientWidth ?? null\n  })\n\n  return width\n}\n"],"mappings":";;AAGa,MAAAA,eAAA,GAAmBC,EAAA,IAAqC;EAC7D,MAAAC,KAAA,GAAQC,GAAA,CAAmB,IAAI;EAEnBC,iBAAA,EAACH,EAAE,GAAG,MAAM;;IACtBC,KAAA,CAAAG,KAAA,KAAQC,EAAA,GAAAL,EAAA,CAAGI,KAAA,KAAH,gBAAAC,EAAA,CAAUC,WAAA,KAAe;EAAA,CACxC;EAEDC,WAAA,CAAY,MAAM;;IACVN,KAAA,CAAAG,KAAA,KAAQC,EAAA,GAAAL,EAAA,CAAGI,KAAA,KAAH,gBAAAC,EAAA,CAAUC,WAAA,KAAe;EAAA,CACxC;EAEM,OAAAL,KAAA;AACT"},"metadata":{},"sourceType":"module","externalDependencies":[]}