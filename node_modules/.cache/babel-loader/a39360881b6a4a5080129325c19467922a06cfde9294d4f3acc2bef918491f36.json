{"ast":null,"code":"import { _ as _sfc_main } from \"./VaInputWrapper.vue_vue_type_script_lang-457583a5.mjs\";\nimport { resolveComponent, openBlock, createElementBlock, normalizeClass, normalizeStyle, createVNode, withCtx, createElementVNode, createBlock, mergeProps, renderSlot, normalizeProps, guardReactiveProps, createCommentVNode, withDirectives, vModelDynamic, toDisplayString } from \"vue\";\nimport { _ as _export_sfc } from \"../../../plugin-vue_export-helper-cc2b3d55.mjs\";\nconst VaInputWrapper_vue_vue_type_style_index_0_lang = \"\";\nconst _hoisted_1 = {\n  class: \"va-input-wrapper__size-keeper\"\n};\nconst _hoisted_2 = {\n  class: \"va-input-wrapper__container\"\n};\nconst _hoisted_3 = {\n  class: \"va-input-wrapper__field\"\n};\nconst _hoisted_4 = {\n  class: \"va-input-wrapper__text\"\n};\nconst _hoisted_5 = [\"placeholder\", \"readonly\", \"disabled\"];\nconst _hoisted_6 = [\"id\"];\nconst _hoisted_7 = {\n  class: \"va-input-wrapper__counter\"\n};\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_VaInputLabel = resolveComponent(\"VaInputLabel\");\n  const _component_va_icon = resolveComponent(\"va-icon\");\n  const _component_va_message_list = resolveComponent(\"va-message-list\");\n  return openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass([\"va-input-wrapper\", _ctx.wrapperClass]),\n    onClick: _cache[5] || (_cache[5] = $event => _ctx.$emit(\"click\", $event)),\n    style: normalizeStyle(`--va-0-background-computed: ${String(_ctx.backgroundComputed)};--va-1-color-computed: ${String(_ctx.colorComputed)};--va-2-text-color-computed: ${String(_ctx.textColorComputed)}`)\n  }, [createVNode(_component_va_message_list, {\n    color: _ctx.messagesColor,\n    \"model-value\": _ctx.messagesComputed,\n    limit: _ctx.errorLimit,\n    \"inherit-slots\": [\"message\", \"messages\"]\n  }, {\n    default: withCtx(({\n      ariaAttributes: messagesChildAriaAttributes\n    }) => [createElementVNode(\"fieldset\", _hoisted_1, [(_ctx.$props.label || _ctx.$slots.label) && !_ctx.$props.innerLabel ? (openBlock(), createBlock(_component_VaInputLabel, mergeProps({\n      key: 0,\n      class: \"va-input-wrapper__label va-input-wrapper__label--outer\"\n    }, _ctx.vaInputLabelProps, {\n      id: _ctx.labelId\n    }), {\n      default: withCtx(bind => [renderSlot(_ctx.$slots, \"label\", normalizeProps(guardReactiveProps(bind)))]),\n      _: 3\n    }, 16, [\"id\"])) : createCommentVNode(\"\", true), createElementVNode(\"div\", _hoisted_2, [_ctx.$slots.prepend ? (openBlock(), createElementBlock(\"div\", {\n      key: 0,\n      class: \"va-input-wrapper__prepend-inner\",\n      onClick: _cache[0] || (_cache[0] = $event => _ctx.$emit(\"click-prepend\"))\n    }, [renderSlot(_ctx.$slots, \"prepend\")])) : createCommentVNode(\"\", true), createElementVNode(\"div\", _hoisted_3, [_ctx.$slots.prependInner ? (openBlock(), createElementBlock(\"div\", {\n      key: 0,\n      class: \"va-input-wrapper__prepend-inner\",\n      ref: \"container\",\n      onClick: _cache[1] || (_cache[1] = $event => _ctx.$emit(\"click-prepend-inner\", $event))\n    }, [renderSlot(_ctx.$slots, \"prependInner\")], 512)) : createCommentVNode(\"\", true), createElementVNode(\"div\", _hoisted_4, [(_ctx.$props.label || _ctx.$slots.label) && _ctx.$props.innerLabel ? (openBlock(), createBlock(_component_VaInputLabel, mergeProps({\n      key: 0,\n      class: \"va-input-wrapper__label va-input-wrapper__label--inner\"\n    }, _ctx.vaInputLabelProps, {\n      id: _ctx.labelId\n    }), {\n      default: withCtx(bind => [renderSlot(_ctx.$slots, \"label\", normalizeProps(guardReactiveProps(bind)))]),\n      _: 3\n    }, 16, [\"id\"])) : createCommentVNode(\"\", true), renderSlot(_ctx.$slots, \"default\", normalizeProps(guardReactiveProps({\n      ariaAttributes: {\n        ...messagesChildAriaAttributes,\n        ..._ctx.ariaAttributes\n      },\n      value: _ctx.vModel\n    })), () => [withDirectives(createElementVNode(\"input\", mergeProps({\n      ...messagesChildAriaAttributes,\n      ..._ctx.ariaAttributes\n    }, {\n      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.vModel = $event),\n      placeholder: _ctx.$props.placeholder,\n      readonly: _ctx.$props.readonly,\n      disabled: _ctx.$props.disabled\n    }), null, 16, _hoisted_5), [[vModelDynamic, _ctx.vModel]])])]), _ctx.success ? (openBlock(), createBlock(_component_va_icon, {\n      key: 1,\n      color: \"success\",\n      name: \"va-check-circle\",\n      class: \"va-input-wrapper__icon va-input-wrapper__icon--success\"\n    })) : createCommentVNode(\"\", true), _ctx.error ? (openBlock(), createBlock(_component_va_icon, {\n      key: 2,\n      color: \"danger\",\n      name: \"va-warning\",\n      class: \"va-input-wrapper__icon va-input-wrapper__icon--error\"\n    })) : createCommentVNode(\"\", true), _ctx.$props.loading ? (openBlock(), createBlock(_component_va_icon, {\n      key: 3,\n      color: _ctx.$props.color,\n      name: \"va-loading\",\n      spin: \"counter-clockwise\",\n      class: \"va-input-wrapper__icon va-input-wrapper__icon--loading\"\n    }, null, 8, [\"color\"])) : createCommentVNode(\"\", true), renderSlot(_ctx.$slots, \"icon\"), _ctx.$slots.appendInner ? (openBlock(), createElementBlock(\"div\", {\n      key: 4,\n      class: \"va-input-wrapper__append-inner\",\n      onClick: _cache[3] || (_cache[3] = $event => _ctx.$emit(\"click-append-inner\", $event))\n    }, [renderSlot(_ctx.$slots, \"appendInner\")])) : createCommentVNode(\"\", true)]), _ctx.$slots.append ? (openBlock(), createElementBlock(\"div\", {\n      key: 1,\n      class: \"va-input-wrapper__append-inner\",\n      onClick: _cache[4] || (_cache[4] = $event => _ctx.$emit(\"click-append\"))\n    }, [renderSlot(_ctx.$slots, \"append\")])) : createCommentVNode(\"\", true)]), _ctx.isCounterVisible ? (openBlock(), createElementBlock(\"div\", {\n      key: 1,\n      class: \"va-input-wrapper__counter-wrapper\",\n      id: _ctx.characterCountId\n    }, [renderSlot(_ctx.$slots, \"counter\", normalizeProps(guardReactiveProps({\n      valueLength: _ctx.counterValue,\n      maxLength: _ctx.$props.maxLength\n    })), () => [createElementVNode(\"div\", _hoisted_7, toDisplayString(_ctx.counterComputed), 1)])], 8, _hoisted_6)) : createCommentVNode(\"\", true)])]),\n    _: 3\n  }, 8, [\"color\", \"model-value\", \"limit\"])], 6);\n}\nconst _VaInputWrapper = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { _VaInputWrapper as _ };\nimport '../../../VaInputWrapper.css';","map":{"version":3,"names":[],"sources":[],"sourcesContent":["import { _ as _sfc_main } from \"./VaInputWrapper.vue_vue_type_script_lang-457583a5.mjs\";\nimport { resolveComponent, openBlock, createElementBlock, normalizeClass, normalizeStyle, createVNode, withCtx, createElementVNode, createBlock, mergeProps, renderSlot, normalizeProps, guardReactiveProps, createCommentVNode, withDirectives, vModelDynamic, toDisplayString } from \"vue\";\nimport { _ as _export_sfc } from \"../../../plugin-vue_export-helper-cc2b3d55.mjs\";\nconst VaInputWrapper_vue_vue_type_style_index_0_lang = \"\";\nconst _hoisted_1 = { class: \"va-input-wrapper__size-keeper\" };\nconst _hoisted_2 = { class: \"va-input-wrapper__container\" };\nconst _hoisted_3 = { class: \"va-input-wrapper__field\" };\nconst _hoisted_4 = { class: \"va-input-wrapper__text\" };\nconst _hoisted_5 = [\"placeholder\", \"readonly\", \"disabled\"];\nconst _hoisted_6 = [\"id\"];\nconst _hoisted_7 = { class: \"va-input-wrapper__counter\" };\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_VaInputLabel = resolveComponent(\"VaInputLabel\");\n  const _component_va_icon = resolveComponent(\"va-icon\");\n  const _component_va_message_list = resolveComponent(\"va-message-list\");\n  return openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass([\"va-input-wrapper\", _ctx.wrapperClass]),\n    onClick: _cache[5] || (_cache[5] = ($event) => _ctx.$emit(\"click\", $event)),\n    style: normalizeStyle(`--va-0-background-computed: ${String(_ctx.backgroundComputed)};--va-1-color-computed: ${String(_ctx.colorComputed)};--va-2-text-color-computed: ${String(_ctx.textColorComputed)}`)\n  }, [\n    createVNode(_component_va_message_list, {\n      color: _ctx.messagesColor,\n      \"model-value\": _ctx.messagesComputed,\n      limit: _ctx.errorLimit,\n      \"inherit-slots\": [\"message\", \"messages\"]\n    }, {\n      default: withCtx(({ ariaAttributes: messagesChildAriaAttributes }) => [\n        createElementVNode(\"fieldset\", _hoisted_1, [\n          (_ctx.$props.label || _ctx.$slots.label) && !_ctx.$props.innerLabel ? (openBlock(), createBlock(_component_VaInputLabel, mergeProps({\n            key: 0,\n            class: \"va-input-wrapper__label va-input-wrapper__label--outer\"\n          }, _ctx.vaInputLabelProps, { id: _ctx.labelId }), {\n            default: withCtx((bind) => [\n              renderSlot(_ctx.$slots, \"label\", normalizeProps(guardReactiveProps(bind)))\n            ]),\n            _: 3\n          }, 16, [\"id\"])) : createCommentVNode(\"\", true),\n          createElementVNode(\"div\", _hoisted_2, [\n            _ctx.$slots.prepend ? (openBlock(), createElementBlock(\"div\", {\n              key: 0,\n              class: \"va-input-wrapper__prepend-inner\",\n              onClick: _cache[0] || (_cache[0] = ($event) => _ctx.$emit(\"click-prepend\"))\n            }, [\n              renderSlot(_ctx.$slots, \"prepend\")\n            ])) : createCommentVNode(\"\", true),\n            createElementVNode(\"div\", _hoisted_3, [\n              _ctx.$slots.prependInner ? (openBlock(), createElementBlock(\"div\", {\n                key: 0,\n                class: \"va-input-wrapper__prepend-inner\",\n                ref: \"container\",\n                onClick: _cache[1] || (_cache[1] = ($event) => _ctx.$emit(\"click-prepend-inner\", $event))\n              }, [\n                renderSlot(_ctx.$slots, \"prependInner\")\n              ], 512)) : createCommentVNode(\"\", true),\n              createElementVNode(\"div\", _hoisted_4, [\n                (_ctx.$props.label || _ctx.$slots.label) && _ctx.$props.innerLabel ? (openBlock(), createBlock(_component_VaInputLabel, mergeProps({\n                  key: 0,\n                  class: \"va-input-wrapper__label va-input-wrapper__label--inner\"\n                }, _ctx.vaInputLabelProps, { id: _ctx.labelId }), {\n                  default: withCtx((bind) => [\n                    renderSlot(_ctx.$slots, \"label\", normalizeProps(guardReactiveProps(bind)))\n                  ]),\n                  _: 3\n                }, 16, [\"id\"])) : createCommentVNode(\"\", true),\n                renderSlot(_ctx.$slots, \"default\", normalizeProps(guardReactiveProps({ ariaAttributes: { ...messagesChildAriaAttributes, ..._ctx.ariaAttributes }, value: _ctx.vModel })), () => [\n                  withDirectives(createElementVNode(\"input\", mergeProps({ ...messagesChildAriaAttributes, ..._ctx.ariaAttributes }, {\n                    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event) => _ctx.vModel = $event),\n                    placeholder: _ctx.$props.placeholder,\n                    readonly: _ctx.$props.readonly,\n                    disabled: _ctx.$props.disabled\n                  }), null, 16, _hoisted_5), [\n                    [vModelDynamic, _ctx.vModel]\n                  ])\n                ])\n              ]),\n              _ctx.success ? (openBlock(), createBlock(_component_va_icon, {\n                key: 1,\n                color: \"success\",\n                name: \"va-check-circle\",\n                class: \"va-input-wrapper__icon va-input-wrapper__icon--success\"\n              })) : createCommentVNode(\"\", true),\n              _ctx.error ? (openBlock(), createBlock(_component_va_icon, {\n                key: 2,\n                color: \"danger\",\n                name: \"va-warning\",\n                class: \"va-input-wrapper__icon va-input-wrapper__icon--error\"\n              })) : createCommentVNode(\"\", true),\n              _ctx.$props.loading ? (openBlock(), createBlock(_component_va_icon, {\n                key: 3,\n                color: _ctx.$props.color,\n                name: \"va-loading\",\n                spin: \"counter-clockwise\",\n                class: \"va-input-wrapper__icon va-input-wrapper__icon--loading\"\n              }, null, 8, [\"color\"])) : createCommentVNode(\"\", true),\n              renderSlot(_ctx.$slots, \"icon\"),\n              _ctx.$slots.appendInner ? (openBlock(), createElementBlock(\"div\", {\n                key: 4,\n                class: \"va-input-wrapper__append-inner\",\n                onClick: _cache[3] || (_cache[3] = ($event) => _ctx.$emit(\"click-append-inner\", $event))\n              }, [\n                renderSlot(_ctx.$slots, \"appendInner\")\n              ])) : createCommentVNode(\"\", true)\n            ]),\n            _ctx.$slots.append ? (openBlock(), createElementBlock(\"div\", {\n              key: 1,\n              class: \"va-input-wrapper__append-inner\",\n              onClick: _cache[4] || (_cache[4] = ($event) => _ctx.$emit(\"click-append\"))\n            }, [\n              renderSlot(_ctx.$slots, \"append\")\n            ])) : createCommentVNode(\"\", true)\n          ]),\n          _ctx.isCounterVisible ? (openBlock(), createElementBlock(\"div\", {\n            key: 1,\n            class: \"va-input-wrapper__counter-wrapper\",\n            id: _ctx.characterCountId\n          }, [\n            renderSlot(_ctx.$slots, \"counter\", normalizeProps(guardReactiveProps({ valueLength: _ctx.counterValue, maxLength: _ctx.$props.maxLength })), () => [\n              createElementVNode(\"div\", _hoisted_7, toDisplayString(_ctx.counterComputed), 1)\n            ])\n          ], 8, _hoisted_6)) : createCommentVNode(\"\", true)\n        ])\n      ]),\n      _: 3\n    }, 8, [\"color\", \"model-value\", \"limit\"])\n  ], 6);\n}\nconst _VaInputWrapper = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport {\n  _VaInputWrapper as _\n};\n\nimport '../../../VaInputWrapper.css';\n//# sourceMappingURL=VaInputWrapper-05ea47aa.mjs.map\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}