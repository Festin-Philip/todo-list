{"ast":null,"code":"import { _ as _sfc_main } from \"./VaResizeObserver.vue_vue_type_script_lang-62e29586.mjs\";\nimport { openBlock, createElementBlock, renderSlot } from \"vue\";\nimport { _ as _export_sfc } from \"../../../../plugin-vue_export-helper-cc2b3d55.mjs\";\nconst _hoisted_1 = {\n  class: \"va-resize-observer\",\n  ref: \"el\"\n};\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", _hoisted_1, [renderSlot(_ctx.$slots, \"default\")], 512);\n}\nconst VaResizeObserver = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { VaResizeObserver as V };","map":{"version":3,"names":["_hoisted_1","class","ref","_sfc_render","_ctx","_cache","$props","$setup","$data","$options"],"sources":["../../../../../../src/components/va-layout/components/VaResizeObserver.vue"],"sourcesContent":["<template>\n  <div class=\"va-resize-observer\" ref=\"el\">\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, watch } from 'vue'\n\nexport default defineComponent({\n  name: 'VaLayoutSizeKeeper',\n\n  emits: {\n    resize: (size: DOMRectReadOnly) => true,\n  },\n\n  setup (props, { emit }) {\n    const el = ref()\n\n    let observer: ResizeObserver | null = null\n\n    watch(el, (newEl) => {\n      if (observer) {\n        observer.disconnect()\n      }\n\n      observer = new ResizeObserver(([el]) => {\n        emit('resize', el.contentRect)\n      })\n\n      observer.observe(newEl)\n    })\n\n    return {\n      el,\n    }\n  },\n})\n</script>\n"],"mappings":";;;MACqCA,UAAA,GAAK;EAAAC,KAAA;EAAAC,GAAA;;SACtCC,YAAQC,IAAA,EAAAC,MAAA,EAAAC,MAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,QAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}