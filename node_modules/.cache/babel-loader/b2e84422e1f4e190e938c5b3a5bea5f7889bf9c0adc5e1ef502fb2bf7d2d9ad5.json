{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport router from \"@/router\";\naxios.defaults.baseURL = \"http://127.0.0.1:8000/api/v1/\";\naxios.defaults.headers.common['Authorization'] = 'Bearer ' + token;\nconst refreshAccessToken = async () => {\n  const refreshToken = localStorage.getItem(\"refresh_token\");\n  const data = {\n    refresh: refreshToken\n  };\n  try {\n    const response = await axios.post('axios://127.0.0.1:8000/api/v1/token/refresh/', data);\n    const accessToken = response.data.access;\n    localStorage.setItem(\"access_token\", accessToken);\n    return accessToken;\n  } catch (err) {\n    if (err.response.status === 401) localStorage.clear();\n    router.push('/');\n  }\n};\n\n// const token = localStorage.getItem('access_token');\n\n// if (token) {\n//      axios.defaults.headers.common['Authorization'] = 'Bearer '+token\n// }\n// else{\n//     router.push('/')\n//   }\n\n// axios.interceptors.request.use((req) => {\n\n//     const token = localStorage.getItem('access_token');\n\n//     if (token) {\n//          req.defaults.headers.common['Authorization'] = 'Bearer '+token\n\n//     }else{\n//         router.push('/')\n//     }\n\n//   });\n\n// axios.interceptors.response.use(\n//     (response) => response,\n//     async (error) => {\n//       const originalRequest = error.config;\n\n//     //  if (error.response === 401) {\n\n//         const accessToken = await refreshAccessToken();\n//         axios.defaults.headers.common[\"Authorization\"] =\n//           \"Bearer \" + accessToken;\n//         return axios(originalRequest);\n//       } \n//     //   else {\n//     //     throw error;\n//     //   }\n//     // }\n//   );\n//   const refreshAccessToken = async () => {\n//     const refreshToken = localStorage.getItem(\"refresh_token\");\n//     const data = { refresh: refreshToken };\n\n//     try {\n//       const response = await axios.post('axios://127.0.0.1:8000/api/v1/token/refresh/',\n//         data\n//       );\n//       const accessToken = response.data.access;\n//       localStorage.setItem(\"access_token\", accessToken);\n//       return accessToken;\n//     } catch (err) {\n//       if(err.response.status===401)\n//       localStorage.clear();\n//      window.location.replace(\"/unauthorized\");\n//     }\n//   };\n\nexport default axios;","map":{"version":3,"names":["axios","router","defaults","baseURL","headers","common","token","refreshAccessToken","refreshToken","localStorage","getItem","data","refresh","response","post","accessToken","access","setItem","err","status","clear","push"],"sources":["/home/festin.philip/first_project/src/components/axios.js"],"sourcesContent":["import axios from \"axios\";\nimport router from \"@/router\";\naxios.defaults.baseURL=\"http://127.0.0.1:8000/api/v1/\"\naxios.defaults.headers.common['Authorization'] = 'Bearer '+token\nconst refreshAccessToken = async () => {\n        const refreshToken = localStorage.getItem(\"refresh_token\");\n        const data = { refresh: refreshToken };\n      \n        try {\n          const response = await axios.post('axios://127.0.0.1:8000/api/v1/token/refresh/',\n            data\n          );\n          const accessToken = response.data.access;\n          localStorage.setItem(\"access_token\", accessToken);\n          return accessToken;\n        } catch (err) {\n          if(err.response.status===401)\n          localStorage.clear();\n          router.push('/')\n        }\n      };\n\n// const token = localStorage.getItem('access_token');\n  \n    // if (token) {\n    //      axios.defaults.headers.common['Authorization'] = 'Bearer '+token\n    // }\n    // else{\n    //     router.push('/')\n    //   }\n\n// axios.interceptors.request.use((req) => {\n    \n//     const token = localStorage.getItem('access_token');\n  \n//     if (token) {\n//          req.defaults.headers.common['Authorization'] = 'Bearer '+token\n\n//     }else{\n//         router.push('/')\n//     }\n    \n    \n//   });\n\n\n// axios.interceptors.response.use(\n//     (response) => response,\n//     async (error) => {\n//       const originalRequest = error.config;\n     \n//     //  if (error.response === 401) {\n       \n//         const accessToken = await refreshAccessToken();\n//         axios.defaults.headers.common[\"Authorization\"] =\n//           \"Bearer \" + accessToken;\n//         return axios(originalRequest);\n//       } \n//     //   else {\n//     //     throw error;\n//     //   }\n//     // }\n//   );\n//   const refreshAccessToken = async () => {\n//     const refreshToken = localStorage.getItem(\"refresh_token\");\n//     const data = { refresh: refreshToken };\n  \n//     try {\n//       const response = await axios.post('axios://127.0.0.1:8000/api/v1/token/refresh/',\n//         data\n//       );\n//       const accessToken = response.data.access;\n//       localStorage.setItem(\"access_token\", accessToken);\n//       return accessToken;\n//     } catch (err) {\n//       if(err.response.status===401)\n//       localStorage.clear();\n//      window.location.replace(\"/unauthorized\");\n//     }\n//   };\n\n  export default axios;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7BD,KAAK,CAACE,QAAQ,CAACC,OAAO,GAAC,+BAA+B;AACtDH,KAAK,CAACE,QAAQ,CAACE,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,SAAS,GAACC,KAAK;AAChE,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;EAC/B,MAAMC,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;EAC1D,MAAMC,IAAI,GAAG;IAAEC,OAAO,EAAEJ;EAAa,CAAC;EAEtC,IAAI;IACF,MAAMK,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAAC,8CAA8C,EAC9EH,IACF,CAAC;IACD,MAAMI,WAAW,GAAGF,QAAQ,CAACF,IAAI,CAACK,MAAM;IACxCP,YAAY,CAACQ,OAAO,CAAC,cAAc,EAAEF,WAAW,CAAC;IACjD,OAAOA,WAAW;EACpB,CAAC,CAAC,OAAOG,GAAG,EAAE;IACZ,IAAGA,GAAG,CAACL,QAAQ,CAACM,MAAM,KAAG,GAAG,EAC5BV,YAAY,CAACW,KAAK,CAAC,CAAC;IACpBnB,MAAM,CAACoB,IAAI,CAAC,GAAG,CAAC;EAClB;AACF,CAAC;;AAEP;;AAEI;AACA;AACA;AACA;AACA;AACA;;AAEJ;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAGA;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,eAAerB,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}