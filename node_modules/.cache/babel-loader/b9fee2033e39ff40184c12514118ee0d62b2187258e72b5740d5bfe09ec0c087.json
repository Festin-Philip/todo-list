{"ast":null,"code":"import { unref } from \"vue\";\nimport { u as useEvent } from \"./useEvent-0856a587.mjs\";\nimport { u as unwrapEl } from \"../utils/unwrapEl-4d79d250.mjs\";\nconst checkIfElementChild = (parent, child) => {\n  if (!child) {\n    return false;\n  }\n  if (child instanceof Window) {\n    return false;\n  }\n  if (child.parentElement === parent) {\n    return true;\n  }\n  return parent.contains(child);\n};\nconst safeArray = a => Array.isArray(a) ? a : [a];\nconst useFocusOutside = (elements, cb, options = {}) => {\n  let previouslyClicked = false;\n  if (options.onlyKeyboard) {\n    useEvent(\"mousedown\", e => {\n      previouslyClicked = true;\n      setTimeout(() => {\n        previouslyClicked = false;\n      }, 200);\n    }, true);\n  }\n  useEvent(\"focus\", event => {\n    if (options.onlyKeyboard && previouslyClicked) {\n      return;\n    }\n    const focusTarget = event.target;\n    if (event.target.shadowRoot) {\n      return;\n    }\n    const isFocusInside = safeArray(elements).some(element => {\n      const el = unwrapEl(unref(element));\n      return el && checkIfElementChild(el, focusTarget);\n    });\n    if (!isFocusInside) {\n      cb(focusTarget);\n    }\n  }, true);\n};\nexport { useFocusOutside as u };","map":{"version":3,"names":["checkIfElementChild","parent","child","Window","parentElement","contains","safeArray","a","Array","isArray","useFocusOutside","elements","cb","options","previouslyClicked","onlyKeyboard","useEvent","e","setTimeout","event","focusTarget","target","shadowRoot","isFocusInside","some","element","el","unwrapEl","unref"],"sources":["../../../../src/composables/useFocusOutside.ts"],"sourcesContent":["import { Ref, unref } from 'vue'\n\nimport { useEvent } from './useEvent'\nimport { unwrapEl } from '../utils/unwrapEl'\n\nconst checkIfElementChild = (\n  parent: HTMLElement,\n  child: HTMLElement | Window | null | undefined,\n): boolean => {\n  if (!child) {\n    return false\n  }\n  if (child instanceof Window) {\n    return false\n  }\n  if (child.parentElement === parent) {\n    return true\n  }\n\n  return parent.contains(child)\n}\n\ntype MaybeRef<T> = T | Ref<T>;\ntype MaybeArray<T> = T | T[];\n\nconst safeArray = <T>(a: MaybeArray<T>) => (Array.isArray(a) ? a : [a])\n\nexport const useFocusOutside = (\n  elements: MaybeArray<MaybeRef<HTMLElement | undefined>>,\n  cb: (el: HTMLElement) => void,\n  options: {\n    onlyKeyboard?: boolean;\n  } = {},\n) => {\n  let previouslyClicked = false\n  if (options.onlyKeyboard) {\n    useEvent('mousedown', (e) => {\n      previouslyClicked = true\n      setTimeout(() => {\n        previouslyClicked = false\n      }, 200)\n    }, true)\n  }\n\n  useEvent('focus', (event) => {\n    if (options.onlyKeyboard && previouslyClicked) {\n      return\n    }\n\n    const focusTarget = event.target as HTMLElement\n\n    if ((event.target as HTMLElement).shadowRoot) {\n      return\n    }\n\n    const isFocusInside = safeArray(elements).some((element) => {\n      const el = unwrapEl(unref(element))\n      return el && checkIfElementChild(el, focusTarget)\n    })\n\n    if (!isFocusInside) {\n      cb(focusTarget)\n    }\n  }, true)\n}\n"],"mappings":";;;AAKA,MAAMA,mBAAA,GAAsBA,CAC1BC,MAAA,EACAC,KAAA,KACY;EACZ,IAAI,CAACA,KAAA,EAAO;IACH;EACT;EACA,IAAIA,KAAA,YAAiBC,MAAA,EAAQ;IACpB;EACT;EACI,IAAAD,KAAA,CAAME,aAAA,KAAkBH,MAAA,EAAQ;IAC3B;EACT;EAEO,OAAAA,MAAA,CAAOI,QAAA,CAASH,KAAK;AAC9B;AAKA,MAAMI,SAAA,GAAgBC,CAAA,IAAsBC,KAAA,CAAMC,OAAA,CAAQF,CAAC,IAAIA,CAAA,GAAI,CAACA,CAAC;AAE9D,MAAMG,eAAA,GAAkBA,CAC7BC,QAAA,EACAC,EAAA,EACAC,OAAA,GAEI,OACD;EACH,IAAIC,iBAAA,GAAoB;EACxB,IAAID,OAAA,CAAQE,YAAA,EAAc;IACfC,QAAA,cAAcC,CAAA,IAAM;MACPH,iBAAA;MACpBI,UAAA,CAAW,MAAM;QACKJ,iBAAA;MAAA,GACnB,GAAG;IAAA,GACL,IAAI;EACT;EAESE,QAAA,UAAUG,KAAA,IAAU;IACvB,IAAAN,OAAA,CAAQE,YAAA,IAAgBD,iBAAA,EAAmB;MAC7C;IACF;IAEA,MAAMM,WAAA,GAAcD,KAAA,CAAME,MAAA;IAErB,IAAAF,KAAA,CAAME,MAAA,CAAuBC,UAAA,EAAY;MAC5C;IACF;IAEA,MAAMC,aAAA,GAAgBjB,SAAA,CAAUK,QAAQ,EAAEa,IAAA,CAAMC,OAAA,IAAY;MAC1D,MAAMC,EAAA,GAAKC,QAAA,CAASC,KAAA,CAAMH,OAAO,CAAC;MAC3B,OAAAC,EAAA,IAAM1B,mBAAA,CAAoB0B,EAAA,EAAIN,WAAW;IAAA,CACjD;IAED,IAAI,CAACG,aAAA,EAAe;MAClBX,EAAA,CAAGQ,WAAW;IAChB;EAAA,GACC,IAAI;AACT"},"metadata":{},"sourceType":"module","externalDependencies":[]}