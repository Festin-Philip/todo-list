{"ast":null,"code":"import { defineComponent, ref, computed, watchEffect, shallowRef } from \"vue\";\nimport { u as useSidebar } from \"./hooks/useSidebar-00350440.mjs\";\nimport { u as useComponentPresetProp } from \"../../composables/useComponentPreset-0dfbd395.mjs\";\nimport { V as VaConfig } from \"../va-config/VaConfig-4446d6fb.mjs\";\nimport { u as useElementWidth } from \"../../composables/useElementWidth-363d70d5.mjs\";\nimport { u as useColors } from \"../../composables/useColors-b582f249.mjs\";\nimport { u as useTextColor } from \"../../composables/useTextColor-48b60d5c.mjs\";\nimport { g as getGradientBackground } from \"../../services/color/utils-711878eb.mjs\";\nimport { u as useBem } from \"../../composables/useBem-33d80128.mjs\";\nimport { u as useClickOutside } from \"../../composables/useClickOutside-4e7f583c.mjs\";\nconst _sfc_main = defineComponent({\n  name: \"VaSidebar\",\n  props: {\n    ...useComponentPresetProp,\n    activeColor: {\n      type: String,\n      default: \"primary\"\n    },\n    hoverColor: {\n      type: String,\n      default: void 0\n    },\n    hoverOpacity: {\n      type: Number,\n      default: 0.2,\n      validator: v => v >= 0 && v <= 1\n    },\n    borderColor: {\n      type: String,\n      default: void 0\n    },\n    color: {\n      type: String,\n      default: \"background-element\"\n    },\n    textColor: {\n      type: String\n    },\n    gradient: {\n      type: Boolean,\n      default: false\n    },\n    minimized: {\n      type: Boolean,\n      default: false\n    },\n    hoverable: {\n      type: Boolean,\n      default: false\n    },\n    width: {\n      type: String,\n      default: \"16rem\"\n    },\n    minimizedWidth: {\n      type: String,\n      default: \"4rem\"\n    },\n    modelValue: {\n      type: Boolean,\n      default: true\n    },\n    animated: {\n      type: [Boolean, String],\n      default: true\n    },\n    closeOnClickOutside: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: [\"update:modelValue\"],\n  components: {\n    VaConfig\n  },\n  setup(props, {\n    emit\n  }) {\n    const {\n      getColor\n    } = useColors();\n    useSidebar(props);\n    const isHovered = ref(false);\n    const isMinimized = computed(() => props.minimized || props.hoverable && !isHovered.value);\n    const menu = ref();\n    const currentMenuWidth = useElementWidth(menu);\n    const doShowMenu = computed(() => {\n      if (props.modelValue === true) {\n        return true;\n      }\n      if (currentMenuWidth.value === null) {\n        return true;\n      }\n      return currentMenuWidth.value > 0;\n    });\n    const sidebarWidth = ref();\n    const getSidebarWidth = () => {\n      if (!props.modelValue) {\n        return 0;\n      }\n      return isMinimized.value ? props.minimizedWidth : props.width;\n    };\n    const menuWidth = computed(() => isMinimized.value ? props.minimizedWidth : props.width);\n    watchEffect(() => {\n      const width = getSidebarWidth();\n      setTimeout(() => {\n        sidebarWidth.value = width;\n      });\n    });\n    const {\n      textColorComputed\n    } = useTextColor();\n    const computedStyle = computed(() => {\n      const backgroundColor = getColor(props.color);\n      const color = textColorComputed.value;\n      return {\n        color,\n        backgroundColor,\n        backgroundImage: props.gradient ? getGradientBackground(backgroundColor) : void 0,\n        overflowX: currentMenuWidth.value === sidebarWidth.value ? void 0 : \"hidden\",\n        width: sidebarWidth.value,\n        minWidth: sidebarWidth.value\n      };\n    });\n    const computedClass = useBem(\"va-sidebar\", () => ({\n      minimized: isMinimized.value,\n      animated: Boolean(props.animated),\n      \"animated-right\": props.animated === \"right\",\n      \"animated-left\": props.animated === \"left\" || props.animated === true\n    }));\n    const updateHoverState = newHoverState => {\n      isHovered.value = props.hoverable && newHoverState;\n    };\n    const rootElement = shallowRef();\n    useClickOutside([rootElement], () => {\n      if (props.closeOnClickOutside && props.modelValue) {\n        setTimeout(() => {\n          emit(\"update:modelValue\", false);\n        }, 0);\n      }\n    });\n    return {\n      menu,\n      menuWidth,\n      doShowMenu,\n      computedClass,\n      computedStyle,\n      updateHoverState,\n      rootElement,\n      vaSidebarItemProps: computed(() => ({\n        textColor: props.textColor,\n        activeColor: props.activeColor,\n        hoverColor: props.hoverColor,\n        borderColor: props.borderColor,\n        hoverOpacity: props.hoverOpacity\n      }))\n    };\n  }\n});\nexport { _sfc_main as _ };","map":{"version":3,"names":["_sfc_main","defineComponent","name","props","useComponentPresetProp","activeColor","type","String","default","hoverColor","hoverOpacity","Number","validator","v","borderColor","color","textColor","gradient","Boolean","minimized","hoverable","width","minimizedWidth","modelValue","animated","closeOnClickOutside","emits","components","VaConfig","setup","emit","getColor","useColors","useSidebar","isHovered","ref","isMinimized","computed","value","menu","currentMenuWidth","useElementWidth","doShowMenu","sidebarWidth","getSidebarWidth","menuWidth","watchEffect","setTimeout","textColorComputed","useTextColor","computedStyle","backgroundColor","backgroundImage","getGradientBackground","overflowX","minWidth","computedClass","useBem","updateHoverState","newHoverState","rootElement","shallowRef","useClickOutside","vaSidebarItemProps"],"sources":["../../../../../src/components/va-sidebar/VaSidebar.vue"],"sourcesContent":["<template>\n  <aside\n    ref=\"rootElement\"\n    class=\"va-sidebar\"\n    :class=\"computedClass\"\n    :style=\"computedStyle\"\n    @mouseenter=\"updateHoverState(true)\"\n    @mouseleave=\"updateHoverState(false)\"\n  >\n    <div v-show=\"doShowMenu\" class=\"va-sidebar__menu\" ref=\"menu\" :style=\"{\n      width: menuWidth,\n      minWidth: menuWidth,\n    }\">\n      <va-config :components=\"{ VaSidebarItem: vaSidebarItemProps }\">\n        <slot />\n      </va-config>\n    </div>\n  </aside>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, ref, shallowRef, watchEffect } from 'vue'\n\nimport { VaConfig } from '../va-config'\nimport { getGradientBackground } from '../../services/color'\nimport { useColors, useTextColor, useBem, useClickOutside, useElementWidth } from '../../composables'\nimport { useSidebar } from './hooks/useSidebar'\nimport { useComponentPresetProp } from '../../composables/useComponentPreset'\n\nexport default defineComponent({\n  name: 'VaSidebar',\n  props: {\n    ...useComponentPresetProp,\n    activeColor: { type: String, default: 'primary' },\n    hoverColor: { type: String, default: undefined },\n    hoverOpacity: {\n      type: Number,\n      default: 0.2,\n      validator: (v: number) => v >= 0 && v <= 1,\n    },\n    borderColor: { type: String, default: undefined },\n    color: { type: String, default: 'background-element' },\n    textColor: { type: String },\n    gradient: { type: Boolean, default: false },\n    minimized: { type: Boolean, default: false },\n    hoverable: { type: Boolean, default: false },\n    width: { type: String, default: '16rem' },\n    minimizedWidth: { type: String, default: '4rem' },\n    modelValue: { type: Boolean, default: true },\n    animated: { type: [Boolean, String], default: true },\n    closeOnClickOutside: { type: Boolean, default: false },\n  },\n\n  emits: ['update:modelValue'],\n\n  components: { VaConfig },\n\n  setup (props, { emit }) {\n    const { getColor } = useColors()\n    useSidebar(props)\n\n    const isHovered = ref(false)\n\n    const isMinimized = computed(() => props.minimized || (props.hoverable && !isHovered.value))\n\n    const menu = ref<HTMLElement>()\n    const currentMenuWidth = useElementWidth(menu)\n    // Display: none for menu if it closed\n    // Otherwise sidebar items will be focusable when sidebar is hidden\n    const doShowMenu = computed(() => {\n      // Always show menu if sidebar is visible\n      if (props.modelValue === true) {\n        return true\n      }\n\n      // If menu is not rendered yet, ignore and show it\n      if (currentMenuWidth.value === null) {\n        return true\n      }\n\n      return currentMenuWidth.value > 0\n    })\n\n    const sidebarWidth = ref()\n\n    const getSidebarWidth = () => {\n      if (!props.modelValue) {\n        return 0\n      }\n\n      return isMinimized.value ? props.minimizedWidth : props.width\n    }\n\n    const menuWidth = computed(() => isMinimized.value ? props.minimizedWidth : props.width)\n\n    watchEffect(() => {\n      const width = getSidebarWidth()\n      // Set width after doShowMenu is applied, so transition is executed after menu is displayed\n      setTimeout(() => {\n        sidebarWidth.value = width\n      })\n    })\n\n    const { textColorComputed } = useTextColor()\n\n    const computedStyle = computed(() => {\n      const backgroundColor = getColor(props.color)\n\n      const color = textColorComputed.value\n\n      return {\n        color,\n        backgroundColor,\n        backgroundImage: props.gradient ? getGradientBackground(backgroundColor) : undefined,\n        overflowX: currentMenuWidth.value === sidebarWidth.value ? undefined : 'hidden' as const,\n        width: sidebarWidth.value,\n        minWidth: sidebarWidth.value,\n      }\n    })\n\n    const computedClass = useBem('va-sidebar', () => ({\n      minimized: isMinimized.value,\n      animated: Boolean(props.animated),\n      'animated-right': props.animated === 'right',\n      'animated-left': props.animated === 'left' || props.animated === true,\n    }))\n\n    const updateHoverState = (newHoverState: boolean) => {\n      isHovered.value = props.hoverable && newHoverState\n    }\n\n    const rootElement = shallowRef<HTMLElement>()\n\n    useClickOutside([rootElement], () => {\n      if (props.closeOnClickOutside && props.modelValue) {\n        setTimeout(() => {\n          emit('update:modelValue', false)\n        }, 0)\n      }\n    })\n\n    return {\n      menu,\n      menuWidth,\n      doShowMenu,\n      computedClass,\n      computedStyle,\n      updateHoverState,\n      rootElement,\n      vaSidebarItemProps: computed(() => ({\n        textColor: props.textColor,\n        activeColor: props.activeColor,\n        hoverColor: props.hoverColor,\n        borderColor: props.borderColor,\n        hoverOpacity: props.hoverOpacity,\n      })),\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-sidebar {\n  min-height: var(--va-sidebar-min-height);\n  height: var(--va-sidebar-height);\n  z-index: var(--va-sidebar-z-index);\n  font-family: var(--va-font-family);\n  display: inline-flex;\n  box-sizing: border-box;\n  position: relative;\n  top: 0;\n\n  &__menu {\n    display: flex;\n    flex-direction: column;\n    min-width: 100%;\n    flex: 1;\n    height: 100%;\n    right: 0;\n    max-height: var(--va-sidebar-menu-max-height);\n    overflow-y: var(--va-sidebar-menu-overflow-y);\n    overflow-x: var(--va-sidebar-menu-overflow-x);\n    margin-left: auto;\n\n    @include va-scroll(var(--va-secondary));\n  }\n\n  &--animated {\n    transition: var(--va-sidebar-transition);\n\n    .va-sidebar__menu {\n      transition: var(--va-sidebar-transition);\n    }\n  }\n\n  &--animated-right {\n    justify-content: flex-start;\n  }\n\n  &--animated-left {\n    justify-content: flex-end;\n  }\n\n  &--minimized {\n    left: 0;\n\n    .va-sidebar__title {\n      display: none;\n    }\n  }\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}