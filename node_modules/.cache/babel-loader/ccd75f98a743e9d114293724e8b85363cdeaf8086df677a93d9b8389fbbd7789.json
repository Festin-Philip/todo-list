{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { c as createToastInstance, a as closeById, b as closeAllNotifications } from \"../toast-16e8f14d.mjs\";\nimport { u as useAppContext } from \"../../../composables/useAppContext-4f7613f2.mjs\";\nconst useToast = () => {\n  const appContext = useAppContext();\n  const createdInThisSetupContext = [];\n  const init = options => {\n    const id = createToastInstance(options, appContext.value);\n    if (id) {\n      createdInThisSetupContext.push(id);\n    }\n    return id;\n  };\n  const close = id => closeById(id);\n  const closeAll = (allApps = false) => closeAllNotifications(allApps ? void 0 : appContext.value);\n  const closeAllCreatedInThisHook = () => {\n    createdInThisSetupContext.forEach(id => closeById(id));\n  };\n  return {\n    init,\n    close,\n    closeAll,\n    closeAllCreatedInThisHook\n  };\n};\nexport { useToast as u };","map":{"version":3,"names":["useToast","appContext","useAppContext","createdInThisSetupContext","init","options","id","createToastInstance","value","push","close","closeById","closeAll","allApps","closeAllNotifications","closeAllCreatedInThisHook","forEach"],"sources":["../../../../../../src/components/va-toast/hooks/useToast.ts"],"sourcesContent":["import { createToastInstance, closeById, closeAllNotifications, NotificationOptions } from '../toast'\nimport { useAppContext } from '../../../composables/useAppContext'\n\n/** This hook can be used without plugin used */\nexport const useToast = () => {\n  const appContext = useAppContext()\n\n  const createdInThisSetupContext: string[] = []\n\n  /**\n   * @param options can be options object or message string\n   */\n  const init = (options: string | NotificationOptions) => {\n    const id = createToastInstance(options, appContext.value)\n\n    if (id) { createdInThisSetupContext.push(id) }\n\n    return id\n  }\n\n  const close = (id: string) => closeById(id)\n\n  /**\n   * Closes all VaToast instances in current App instance.\n   * @param allApps if you have multiple vue apps on page, set allApps to true to close it for all apps.\n   */\n  const closeAll = (allApps = false) => closeAllNotifications(allApps ? undefined : appContext.value)\n\n  /** Use this method if you need to close only toasts that created with this hook */\n  const closeAllCreatedInThisHook = () => {\n    createdInThisSetupContext.forEach((id) => closeById(id))\n  }\n\n  return {\n    init, close, closeAll, closeAllCreatedInThisHook,\n  }\n}\n"],"mappings":";;;AAIO,MAAMA,QAAA,GAAWA,CAAA,KAAM;EAC5B,MAAMC,UAAA,GAAaC,aAAA;EAEnB,MAAMC,yBAAA,GAAsC;EAKtC,MAAAC,IAAA,GAAQC,OAAA,IAA0C;IACtD,MAAMC,EAAA,GAAKC,mBAAA,CAAoBF,OAAA,EAASJ,UAAA,CAAWO,KAAK;IAExD,IAAIF,EAAA,EAAI;MAAEH,yBAAA,CAA0BM,IAAA,CAAKH,EAAE;IAAE;IAEtC,OAAAA,EAAA;EAAA;EAGT,MAAMI,KAAA,GAASJ,EAAA,IAAeK,SAAA,CAAUL,EAAE;EAMpC,MAAAM,QAAA,GAAWA,CAACC,OAAA,GAAU,UAAUC,qBAAA,CAAsBD,OAAA,GAAU,SAAYZ,UAAA,CAAWO,KAAK;EAGlG,MAAMO,yBAAA,GAA4BA,CAAA,KAAM;IACtCZ,yBAAA,CAA0Ba,OAAA,CAASV,EAAA,IAAOK,SAAA,CAAUL,EAAE,CAAC;EAAA;EAGlD;IACLF,IAAA;IAAMM,KAAA;IAAOE,QAAA;IAAUG;EAAA;AAE3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}