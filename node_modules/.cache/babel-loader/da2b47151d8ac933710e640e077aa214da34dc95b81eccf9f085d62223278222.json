{"ast":null,"code":"const unFunction = (fn, ...args) => {\n  if (typeof fn === \"function\") {\n    return fn(...args);\n  }\n  return fn;\n};\nexport { unFunction as u };","map":{"version":3,"names":["unFunction","fn","args"],"sources":["../../../../src/utils/un-function.ts"],"sourcesContent":["/**\n * Return function result if function provided\n * Returns itself if not a function\n */\nexport const unFunction = <\n  T,\n  ARGS extends any[] = T extends (...args: infer A) => any ? A : never,\n>(\n    fn: T,\n    ...args: ARGS\n  ): T extends (...args: any[]) => infer R ? R : T => {\n  if (typeof fn === 'function') {\n    return fn(...args) as any\n  }\n\n  return fn as any\n}\n"],"mappings":"AAIa,MAAAA,UAAA,GAAaA,CAItBC,EAAA,KACGC,IAAA,KAC+C;EAChD,WAAOD,EAAA,KAAO,YAAY;IACrB,OAAAA,EAAA,CAAG,GAAGC,IAAI;EACnB;EAEO,OAAAD,EAAA;AACT"},"metadata":{},"sourceType":"module","externalDependencies":[]}