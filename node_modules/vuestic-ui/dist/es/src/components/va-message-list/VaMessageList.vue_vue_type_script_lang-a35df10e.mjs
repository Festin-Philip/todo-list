import { defineComponent, computed } from "vue";
import { V as VaIcon } from "../va-icon/index-e46b09d5.mjs";
import { u as useMessageListAria } from "./hooks/useMessageListAria-7f67aad0.mjs";
import { W as WithAttributes } from "../../utils/with-attributes-7acc9479.mjs";
import { u as useColors } from "../../composables/useColors-b582f249.mjs";
const _sfc_main = defineComponent({
  name: "VaMessageList",
  components: { VaIcon, WithAttributes },
  props: {
    modelValue: {
      type: [String, Array],
      default: ""
    },
    limit: { type: Number, default: 1 },
    color: { type: String },
    hasError: { type: Boolean, default: false }
  },
  inheritAttrs: false,
  setup(props, { slots }) {
    const { getColor } = useColors();
    const { childAttributes, messageListAttributes } = useMessageListAria(props);
    return {
      messageListAttributes,
      childAttributes: computed(() => childAttributes.value),
      messages: computed(() => {
        if (!props.modelValue) {
          return [];
        }
        if (!Array.isArray(props.modelValue)) {
          return [props.modelValue];
        }
        return props.modelValue.slice(0, props.limit);
      }),
      computedStyle: computed(() => props.color ? { color: getColor(props.color) } : {})
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=VaMessageList.vue_vue_type_script_lang-a35df10e.mjs.map
