import { _ as __default__ } from "./VaLayout.vue_vue_type_script_lang.js";
import { resolveComponent, openBlock, createElementBlock, Fragment, renderList, createBlock, withCtx, renderSlot, createElementVNode } from "vue";
import { _ as _export_sfc } from "../../../plugin-vue_export-helper.js";
const _style_0 = ":root,\n:host {\n  --va-layout-overlay-color: rgba(0, 0, 0, 0.5);\n}\n.va-layout {\n  display: grid;\n  grid-template-columns: var(--680246ea);\n  grid-template-rows: var(--77ded51d);\n  grid-template-areas: var(--0d19e5b4);\n  gap: 0;\n  position: relative;\n  z-index: 0;\n  max-width: 100%;\n  max-height: 100%;\n  height: 100vh;\n  width: 100vw;\n}\n.va-layout__area {\n  scrollbar-color: var(--va-background-element) transparent;\n  scrollbar-width: thin;\n  transition: scrollbar-color 0.3s ease-in-out;\n}\n.va-layout__area::-webkit-scrollbar {\n  width: 4px;\n  height: 4px;\n}\n.va-layout__area::-webkit-scrollbar-track {\n  box-shadow: none;\n  border-radius: 10px;\n}\n.va-layout__area::-webkit-scrollbar-thumb {\n  background: var(--va-background-element);\n  opacity: 0.3;\n  border-radius: 2px;\n  -webkit-transition: background 0.3s ease-in-out;\n  transition: background 0.3s ease-in-out;\n}\n.va-layout__area--content {\n  grid-area: content;\n  z-index: 0;\n  min-width: 0;\n  min-height: 0;\n}";
const _hoisted_1 = { class: "va-layout" };
const _hoisted_2 = { class: "va-layout__area va-layout__area--content" };
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_VaLayoutArea = resolveComponent("VaLayoutArea");
  return openBlock(), createElementBlock("div", _hoisted_1, [
    (openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.areaNames, (area) => {
      return openBlock(), createBlock(_component_VaLayoutArea, {
        key: area,
        area,
        config: _ctx.$props[area] || {},
        onOverlayClick: ($event) => _ctx.$emit(`${area}-overlay-click`)
      }, {
        default: withCtx(() => [
          renderSlot(_ctx.$slots, area)
        ]),
        _: 2
      }, 1032, ["area", "config", "onOverlayClick"]);
    }), 128)),
    createElementVNode("div", _hoisted_2, [
      renderSlot(_ctx.$slots, "default", {}, () => [
        renderSlot(_ctx.$slots, "content")
      ])
    ])
  ]);
}
const _VaLayout = /* @__PURE__ */ _export_sfc(__default__, [["render", _sfc_render], ["styles", [_style_0]]]);
export {
  _VaLayout as _
};
//# sourceMappingURL=VaLayout.js.map
